<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2013 03 monthly record</title>
    <url>/2013/04/14/2013-03-monthly-record/</url>
    <content><![CDATA[<p>在上篇日志里《记录2012年走过的点点滴滴》，我的梦想1是坚持写作，而转眼一到就到了四月份，自己却还没有写下一点东西，今天下午的时候的逼迫下写了一篇连自己都不知所然的《营销，像风一般拂过》，之所以是时间的逼迫是因为想参加一个会议而提交的一份写作，前天收到的写作要求邮件，因为自己对这次写作框架里面的东西理解确实还比较肤浅，实在不知道写些什么，所以一直拖到今天，朋友鼓励说随便写些什么，据内部消息说只要提交了作品都可以参加会议的。所以在今天下午还是逼了一下自己，完成了一篇一千三百多字的写作。</p>
<a id="more"></a>
<p>上次我在会议上大胆地做了一次公众承诺，我说从四月份我会每个月至少完成一本书的阅读，然后我会在我的空间里每个月写下一篇日志。在这里，我想我也应该花点时间来先写点东西了，要不然以后写什么东西都会让今天下午一样，写不出一点东西，或者写的全是自己都读不懂的东西。所以在这里决定还是把上个月走过的感悟做一次小小的记录吧。</p>
<p>三月份最大的收获就是学习了林伟贤的《money&amp; you》，这也是改变我最多的一堂课。第一个就是“成功人士走的第一步就与别人不一样“，在这里分享到了一个关于乔吉拉德的故事，他的名字是被列入了世界吉尼斯记录里面的，他从1963到到1977年的十五年时间里从事汽车销售，总共卖了13001辆汽车，而他最辉煌的一年是1973年，他总共卖了一千四百多辆汽车，按照每周五个工作日来算，平均每天要买六部车，而这六部车则是从他早上起床的那一刻起就开始了，他给自己买了一个特大号的闹钟，早上闹钟一响，他就立马跳下床，告诉自己，今天一定会有人为我在别人还在睡懒觉的时候就已经起床而付出代价的。这就是他与大多数人不一样的地方，我们大家早上都爱睡懒觉，我们习惯性的动作就是早上闹钟一响，我们关上闹钟，盖上被子，继续等待闹钟第二次，第三次响起。我也是一直就这样的习惯，早上总是要等两三次闹钟才能慢慢地起来。但这个故事却深深地改变我这的一个坏毛病，从三月份以前，每天早上闹钟一响，我就告诉我自己”成都人士走的第一步就与别人不一样“，于是便立马起床了。就这么一句简单的话，就给了我无穷的动力，让我轻而易举地改变了这个坏毛病，我认为这是我三月份中取得的最大进步。诚然，许多老板，当他们赚了许多钱以后，首先换的是自己的房子，自己的车子，甚至自己的老婆，而不曾想过这一切都将有可失去，只是换掉自己的脑袋，不断去学习，才能不断地进步，不断地创造更大的财富。</p>
<p>有一次，和同事们玩了一个游戏，大家分别写出自己心中认为最重要的十件东西，然后通过游戏不断地一件件地划去，游戏中，大家都写出了许多自己认为最重要的东西，亲情，健康，事业，友谊等等，而我也一直认为健康和快乐是我们人生最重要的东西，然而，我们每个人每天花八个小时甚至更多的时间努力工作，却是为了什么呢？我们高尚地说我们不是为了金钱，我们是为了给家人更好的生活，给未来孩子更好的教育，当我们辛苦地沉浸于工作之中，我们透支着健康，我们透支着与父母交流的机会，我们透支着关爱孩子的时间，一切一切，当我们最终拥有无数的财富时，我们真的是在为着那一个高尚的目标吗？我们的身子垮了，我们都不知道父母早已满脸皱纹了，我们都不知道我们的孩子叛逆成什么样子了，这就是我们所想要的吗？然而，金钱对我们而言也很重要，我们需要为父母，给孩子，给自己一个更美好的生活，我们可以有很美好的梦想，我们要挣下多少钱，我们要买下什么车，我们要买下多大的房子，朋友，这一切都只是我们努力工作奋斗的一个目标，但请不要忘了，我们的目的是什么，我们的目的是为了能够过上更好的生活，能够拥有一个健康的身体，能够拥有一帮很好的朋友，在我们为着目标奋斗时，也请不要忘了我们的目的是什么，目标永远不是一条单一的线，目标是为着目的而服务的，我们脚踏实地的朝着目标前进时，同时也让我们的双手紧紧握住我们的目的。工作累了，放一放，活动一下身子，放假的时候，多出去走动走动一下，常常给家长打打电话，问声温暖，有时间尽量回去多陪陪他们，当我们有了孩子的时候，永远要记得挤也得挤出时间来陪陪他们。记得曾经在一次特训营的活动中，一个小孩子想对他们的父母说“爸爸妈妈，我不希望你们能够挣好多钱，我只希望你们能多花时间来陪陪我“，我们的这一生中，工作不是我们唯一的目的，金钱也不是我们唯一的目标，我们还有着太多太多更重要的时间，我们可以花更多的时间在工作上，但请让我们花更多的心在我们追求的人生上面。记得曾看到过一句非常有感触的话”家不是放钱的地方，家是放心的地方，只有把心放在家里，我们的家庭才会幸福美好“。我们工作再累再辛苦，工资再高，我们挣的不是钱，而是一个幸福美好的家庭。这也是我在三月份学习到感触最深的一点，关于目标与目标的关系。</p>
<p>3月份开始报了驾照，本来打算在外面找陪教的，但后来恰好副总把她以前在驾校报的名额让给我了，所以我也只好在驾校去学校了，不过因为教练和我一同事关系特别好，还没有报名就开始让我练了一次车，谢谢副总，也谢谢小燕，我也开始为着驾照的梦想行进了。</p>
<p>小悦悦的未来储蓄计划，考虑了很多，定期存款，基金，黄金等等，最终还是选定了基金定投，从三月份开始了为期20年的基金定投，也希望未来能够带来不错的收益吧。</p>
<p>三月份还有一件事情，就是特别想摆地摊，也和朋友们去过好几个地方考察，结果都没有找到可以摆地摊的地方，这事后来也就松懈下来了，不知道接下来有没有机会找到摆地摊的地方。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>每月一文</tag>
      </tags>
  </entry>
  <entry>
    <title>2013 04 monthly record</title>
    <url>/2013/06/24/2013-04-monthly-record/</url>
    <content><![CDATA[<p>备注：本篇文章是五一节的时候在家写的，当时保存在家里的电脑上面，家里的电脑没联网了，所以一直没有发布，直到端午节的时候回家再次打开一看，虽然已经有点不堪入目，本想重新修改，但想下还是算了吧，毕竟也是那个时候最真实的感悟，便还是发上来吧，以表纪念。</p>
<a id="more"></a>
<p>四月是成长的一月，也是思维上产生了巨大转变的一个的月。</p>
<h2 id="关于计划"><a href="#关于计划" class="headerlink" title="关于计划"></a>关于计划</h2><p>曾经天天经常说我是“三分热情”，因为以前不管我产生一个什么想法，最开始是充满了无限的热情，可是过不了一段时间就放弃了。现在我发现之所以是这样的，那是因为改变自己的决定不够。当自己下定决定要去改变自己的时候，当这份决心越强烈，就越能坚持着去行动。<br>我相信我现在做出一份决定时，我就必将要产生强烈的一份愿望。而且我也将把它转变成一份强大的执行力，成为生活中的一部分，而逐渐成为一种习惯。四月份我看完了两本富爸爸的书，以及每天练习钢笔字。与其说是坚持下来，准确地说应该是习惯下来了。当自己决定每个月至少看完一本书，要练习钢笔字的，我便很自然地把它变成了每天晚上的一部分。正如前几天所发的微博一样，不管晚上因为其它什么原因弄得很晚，我都依然会坚持看一会儿书，然后写一页字。哪怕量可以少一点，但我会每天坚持必须去执行。当这一切逐渐形成习惯之后，每天没看书写字，反倒会觉得心中少了点什么。</p>
<h2 id="关于时间"><a href="#关于时间" class="headerlink" title="关于时间"></a>关于时间</h2><p>我们总是感慨时间过得真快，却真没有想到时间就是在我们不经意间悄悄从指缝中流过了。当我决定每个月至少看一本书时，一个月执行下来，却是发现我是很轻松地就看完了两本书。当每天晚上我不再一吃完饭就打开电脑，无聊地刷下微博，刷下空间时，静下心来，打开台灯，翻阅几十页书纸，写上一两篇字，却是发现这短短的一两个小时，却是无限收获，无限充实的两个小时。好好地抓住一两个小时时间，我们就可以惊奇地发现，一天中就因为我们多了这短短的两个小时，却是多做了许多事情。其实说起来很简单，大家都明白我们的时间都是在无聊中慢慢地流失掉了。关键问题是我们不明白我们除了工作，我们还可以做什么。似乎工作就成了我们唯一的生活，下班后，我们可能就只能是无聊地看电视，上网，打游戏。正如网上一名老太太说的一样，现在的年轻人做着他们八十岁都还会做的事，那我们的生活色彩，我们的追求又在哪里呢？也许你可以感受一份书香墨气的清香，也许你可以收获朋友畅谈的一份轻快，也许你可以获取城市夜灯下的繁荣……时间之所以无聊，只是因为我们自己本身太无聊。当给以自己生活足够的方式时，人生也不再寂寞，成长也不再止步。</p>
<h2 id="关于淡定"><a href="#关于淡定" class="headerlink" title="关于淡定"></a>关于淡定</h2><p>不知道是生活经历多了，还是因为慢慢在书香墨气中熏陶着一份宁静，我发现我对生活，对事情开始变得从容淡定了。很多时候，我们之所以急燥，之所以发脾气，往往都是在以这样一种无用的方式来回避而已。快乐其实很简单，就如一同事给我们分享的一个故事那样，他掉了钱，并不会觉得伤心悲痛，他会想，也许拾得这钱的人正需要这笔钱，也许他正准备犯法去偷钱去抢钱，而我这钱可能就救了他一命。我觉得这就是一种心境，一种淡定。曾经天天不小心被别人偷了几百元，她急得恨不得把那个人碎石万断，而我在电话里却是很淡定地安慰她掉了就掉了吧，钱又不是挣不来的，何必还要让自己去伤心呢。自己的工作接触的事情是比较繁多而杂乱的，以前我在内心老是犯急燥，因为我最怕杂乱了，尤其是我正在做一件事时突然又冒出另外一件事来，而现在我开始学会淡定去面对了，自己把所有的事情整理好，一件一件地去完成，我发现我会有很充足的空间时间去收获那份属于我自己的快乐。前几天和几个兄弟们一起聊天，一兄弟说我现在不敢破釜沉舟了，就是在没的找好工作前，我是不敢裸辞，我说我敢，我是真的敢，这一是一份激情，不是一份狂热，只是一份淡定，因为我相信，裸辞之后，面对接下来可能出现的各种状态，我都有足够强大的心态去面对与应付，曾经离开德阳，我是裸辞，当年在温州，天天睡地铺吃泡菜，面对雅安地震，我还活着，面对那些成功人士，我还年轻，面对那些高层管理，我还愿意去学习，我还有什么不能去面对的呢？不淡定者是因为我们在内心一直告诉自己“我可不行，我可办不到”，而我们应该告诉自己的是“我应该怎么去做？”</p>
<h2 id="关于金钱"><a href="#关于金钱" class="headerlink" title="关于金钱"></a>关于金钱</h2><p>关于金钱的观念是我这个月思维转变最大的一次，虽然以前我也明白通过理财可以让自己的财富倍增，但我没有理解到金钱的深层次运作机制。两本富爸爸的书，以及现金流游戏深深地改变了我对金钱的看清。虽然我目前的状况是已经跳出了老鼠赛跑，但这个月的学习则是让我站在了整个人生的高度来看待我们的金钱。</p>
<p>我们都知道，我们金钱分为收入和支出，而我们收入其实应该是分为劳动收入和被动收入，这是很重要的一个概念，因为衡量我们是否是获得了财务自由，就是看我们的被动收入能否超过我们的支出，只有当我们的被动收入已经超出了我们的支出，我们才能称得上实现了财务自由。被动收入就是我们工作之外的收入，可以不用自己去工作就能源源不断地产生的收入，这就是一个完全自动的印钞机，比如我们的存款利息，股票，期货，版权，房租等等都是我们的被动收入。<br>这里讨论财务自由由我们的工资没有关系，只和我们的被动收入及支出有关，有些人也许工资很高，但他可能没有一分钱的被动收入，这是一个很容易想象的现象，万一那天公司裁员或者倒闭了，自己就将面临着没有任何收入来源了。我们又不得不马上顶都会一份压力立马去寻找其它工作，找到工作后，我们不得不小心翼翼地拼命把握住这份工作，因为一旦失去工作，我们又将失去收入来源，又不得不再去寻找下一份工作，周而复始，我们就这样不断地被工作牵着团团转了。<br>相反，当我们实现财务自由之后，我们则是另外一种生活状态，因为我们已经有了被动收入，而这个被动收入不是依附于自己的工作，所以哪怕自己美美地睡上一天觉，也是依然有稳定的收入流进来，而且这份收入是可以满足自己的支出需要的。这个时候，我们就不再是工作的奴隶了，因为我们有了可以选择工作的权利，我们可以很轻松去去选择自己喜欢的工作，也可以很大胆地放弃自己不喜欢的工作。</p>
<p>既然财务自由与我们的工作收入没有关系，那我们的工作收入代表着什么呢？工作收入就是我们的一份储蓄，市场的变化，物价的上涨，支出结构的变化等等因素都可能导致我们的支出总额不断地增多，而我们要不断地维持财务自由，我们就需要不断地提高自己的被动收入。提高自己的被动收入一方面是加大以前项目的投资额度，别一方面是增加其它被动收入来源，这就是需要寻找与把握机会，只有当我们拥有充足的储蓄时，我们才会拥有更多的机会把把握住能够产生被动收入的机会。我们不断地提高我们的工作收入，也就是在不断地储备被动收入的能力。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>每月一文</tag>
      </tags>
  </entry>
  <entry>
    <title>2013 05 monthly record</title>
    <url>/2013/06/03/2013-05-monthly-record/</url>
    <content><![CDATA[<h2 id="一。关于健康"><a href="#一。关于健康" class="headerlink" title="一。关于健康"></a>一。关于健康</h2><p>5月份刚过了五一，就把岳母接上来安排在华西医院进行住院治疗，这已经是第二次来华西医院，至去年十月份第一次来华西医院已经过去了大半年，而从最初发病开始，已经整整过去了八个月之久，其间去过好几个医院治疗，中药，西药，输液，无数的治疗方案都均无效果。这次是实在没办法再这样拖下去了，于是决定到华西进行住院治疗。<br>当初怀疑过肺脓肿，也怀疑过肺结核，甚至怀疑过肺癌，但这一切均无法确症。5月份在华西住院一个月，也是各种检查无数，而检查结果无一例外的都是各种怀疑，依然无法确症。直到最近胸外科的医师过来看完各种报告，认为是炎症，决定进行手术，而接下来还要进行各种检查，等待手术。</p>
<a id="more"></a>
<p>与此同时，当时天天也带着小悦悦跟着跑上来，陪着岳母转了一天的医院，反而把小悦悦弄得高烧不退，吃药无效，最后只得输液，那一刻，我的心是最痛的，一个不到半岁的稚嫩小生命，却第一次扎着脑袋输着那可怕的液体，在我的记忆中，好像小孩子是千万不能输液的，我真想阻止这一切，而我却无能为力。源于成都这边的各种不便，小悦悦好了后，天天又不得不带着她回到老家，而在老家，又是一会儿这儿不好，一会儿又那儿不好。</p>
<p>有生以来，我已经两次在病危通知书上签下了字，第一次是09年爸爸病危的时候，第二次就是岳母这次，整个5月份，我是经常往医院跑，健康两个字，又再一次深深抨击着我的思考，虽然我一直知道健康很重要，可是我真的在健康上面投资了多少呢？我又为父母他们的健康付出了多少呢？去年和天天一起做了一次健康体检后，我们约定每年我们都要带着全家做一次健康体检，然而今年已经过去了一半，我们自己都还没有去做健康体验。今年年初我给自己定下了几个目标，好几个我都已经开始在执行了，而唯有最重要的健康计划却一直没有实施起来。这，是时候思考健康投资与计划的问题了。</p>
<h2 id="二。关于梦想"><a href="#二。关于梦想" class="headerlink" title="二。关于梦想"></a>二。关于梦想</h2><p>这是5月份最简单的词汇，但也是一直令我深入思考的一个词汇，我们每天从早到晚，从年初忙碌到年尾，一生辛劳，而我们这一切是为了什么呢？大家都可能会说为了以后过上更好的生活，可什么样的生活才是更好的生活呢？我们有过一个概念吗？我们来到这个五彩缤纷的世界上，可我们的人生色彩是什么呢？我们活着一生，目的是为自己留下什么呢？我们的人生到底是在追求着什么呢？这一切问题，也许大多数人都有了自己的答案，而我却发现我无法回答我自己。倘若让我用文字，用彩笔描绘出我未来的梦想，我真的还是不知所措。</p>
<p>也许以前有很多天真的遐想，现在仔细想一起，还真的有着那么一份天真劲，我也想出去旅游，但我知道哪些地方有自己喜欢的风景吗?这个世界哪些地方我应该去呢？我又对那些地点了解多少呢？我也想来一场骑行冒险，但我的路线是什么呢？我的安全知识又储备在哪里呢？倘若说这些我都还可以去规划，去学习，但除了这些，我这一生又还有哪些梦想可以去追求呢？</p>
<p>好像人生就是这样慢慢地由童年的天真无瑕到成年的现实麻木，昨天，我们还可以三五成群地一起聊着对未来的无数梦想，而今天，大家都开始被这个现实的生活埋没了自己的激情与梦想，工作，家庭，孩子似乎就成了我们人生的全部。而我们的人生不是应该可以更精彩一些吗？我又将怎样才能重新拾回造梦的能力呢？</p>
<h2 id="三。关于财富：富中之富"><a href="#三。关于财富：富中之富" class="headerlink" title="三。关于财富：富中之富"></a>三。关于财富：富中之富</h2><p>在曾经的日志里面，我写到了目标与目的，我们在为着目标奋斗的同时，我们不能忘了我们所追求的目的。而我也一直在思考，正如我认为健康，快乐是我们人生中最重要的，那么我们人生中到底还有哪些是最重要的呢？除了我们各自追寻的梦想不一样，而我们人生中有那些还是我们最应该追求的呢？同样是林伟贤的一堂课堂，让我对这个疑问有了答案，因为我是非常认可这样的格局，可以说他把我曾经的以及未来的追求很完整地做了一次归纳。<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-25/41000279.jpg"><br>什么是财富，不是我们这一生挣了多少钱，买了多少大的房子，拥有多少豪华的车，而只有我们在工作，学习，理财，健康，心灵，休闲，人脉，家庭这八大方面获得成功，我们才能算说是拥有了真正的富中之富。而我们的大多数人，却是把自己的几乎全部精力放在了工作之上，却忽视了其它几个方面的投入，所以纵然有千万金钱，那也不能算是财富。</p>
<p>我也开始思考自己自己，除了工作，我也仅仅是在学习，理财，心灵方面有所付出，而对健康，我却是一直没有执行，对于休闲，真的很想出去看看这个世界，去年的旅行计划，到今年都还没有开始，对于人脉的建立，确实应该开始努力了，三十岁年靠经验挣钱，三十岁后靠人脉挣钱，我不希望等到了三十岁，我才开始建立人脉，对于家庭，我认为我对父母们的关爱还远远不够，虽然与长辈们缺少交流的话语，但这不应该成为了可以少打电话，少慰问他们的理由。对于家这个摇篮，我不应该忽视太多。</p>
<h2 id="四，关于记账"><a href="#四，关于记账" class="headerlink" title="四，关于记账"></a>四，关于记账</h2><p>回首自己的记账之路，应该可以说从去年六月算起，在此期间，我也一直保持良好的记账习惯，在此期间，记账这个东西让我收益最大的就是能够清晰地知道自己每一个账户资金情况，因为我的账户特别多，每天的流水特别多，即使两三天不记账，我的账户就会乱得毫无头绪，所以，也正是有了这各客观因素，使得我一直很好地把记账坚持下来了。</p>
<p>但现在发现以前自己好像是为了记账而记账，每天只是把自己的流水记下来而已，虽然两个月前开始做预算，但也没有认真地去分析它。而记账的真正目的是什么？是为了分析自己的收入支出结构，制定财务目标，分析哪些支出为不必要的开支，哪些地方可以开源节流，以便控制自己的消费行为。真正引起我重视这一点是五月份的支出报表，虽然我知道我五月份的支出相对要多一些，但却没想到一下子飙升到了这么多，五月份总共支出高达一万九百多。这也不得不让我开始认真分析自己的支出情况，开始优化自己的支出结构，开始控制自己的消费习惯。六月份我将开始学习</p>
<p>认真分析账单，相信六月份我会在这方面有很大的进步。期待加油。<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-25/68665750.jpg"></p>
<h2 id="五。关于阅读"><a href="#五。关于阅读" class="headerlink" title="五。关于阅读"></a>五。关于阅读</h2><p>五月份阅读完了刘克亚的《超高价营销》，他的上一本书《打造赚钱的机器》还没有看完就借给朋友去了，他的视频更多，但都没有认真地看完，所以这本书算是第一次认真地学习完的吧。确实是大师的理论体系，我相信我还得再认真地阅读好几遍才能够用自己的文字来总结出自己的学习体会。第一次阅读下来，让我对整个营销过程有了一个比较清晰的了解，包括营销前的打造自动系统，营销中的二合一促销模式，以及后续的专家，明星打造。这本书还需要继续再次阅读才能领略其中的精髓，同时也需要等待一个可以施展的舞台才能加以应用。</p>
<h2 id="六。关于驾照"><a href="#六。关于驾照" class="headerlink" title="六。关于驾照"></a>六。关于驾照</h2><p>把“悲催”二字用在我考驾照这件事上一点也不为过。首先，我的身份证地址是成都的，因为我一直用的当时进大学后办的身份证，而自己的户口实际上已经迁回老家了，而考驾照必须要身份证上的地址和户口地址一致，无奈之下，在2月底回家重新办身份证，同时也办了一个有效期三个月的临时身份证，回来3月10号把资料交给教练，我原来有D照，而且是在德阳，本应该迁到成都来，但教练他说他会弄，我也就没管了。后来还兴冲冲地去驾校练过一次车。</p>
<p>交了资料后，教练什么也没有给我交代，所以等了一段时间后，到三月底才让我去体检，办完体检表后，又告之我上面的电话号码是要写另外一个电话号码的，无奈之下，又重新体检，完了后准备给他送过去，因为他回家要从我住那边过，所以他说他过来取，结果一直没有过来，这一等又是两周过去了，好不容易算是把体检表交给他了。</p>
<p>接下来又是等吧，这等到了五月几号，被告之得去把我的驾照迁到成都来，抽了一个空，跑去第四分局，结果搬走了，匆匆赶到新地点，被告之又要体检表，无奈，又得去体检，这次好像都跟我做对似的，中铁二局，金牛区人民医院都不给我盖章，因为我左眼的矫正视力不达标，去妇幼儿童医院，直接给我录系统，结果告之异地迁入数量超过限制，叫过一段时间。好吧，感觉妇幼儿童医院应该没问题，过了一段时间又去，结果被告之没有网络，无法联网，好吧，我又等。第三次去的时候，终于给办了下来，那个激动呀。然后赶紧跑去车管所把驾照给迁了。再一次把资料交给教练，再一次等待报名。</p>
<p>什么叫好事多磨，过了一周，教练又说驾照不行，是行政区域不对，连他都不明白的问题，5月28号，也就是我的临时身份证最后期限，赶紧又去车管所，重新把驾照弄好，原来是上次换证的时候，他们在录资料时把我行政区域选错了。然后领导过来赶紧把我的资料拿上去，希望能在今天把名报上。等了半天，结果又被告之：驾照显示异地迁入，要下个月3号后才能报名。好吧，我马上就是一个没有身份的人了，我只有再一次等待我的新身份证。</p>
<p>幸好我不是急着拿驾照，虽然整个过程比较曲折，但我一点没有抱怨教练的意思，同时我也非常感谢他一直都很友好地对待我，帮我想办法，亲自来拿资料，开车送我等等。再次感谢小燕给我介绍这样一个好教练。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>每月一文</tag>
      </tags>
  </entry>
  <entry>
    <title>total commander 在当前目录下解压与压缩</title>
    <url>/2015/01/31/20150131-total-commander-extract-and-compress/</url>
    <content><![CDATA[<h3 id="一-在当前目录下解压缩"><a href="#一-在当前目录下解压缩" class="headerlink" title="一.在当前目录下解压缩"></a>一.在当前目录下解压缩</h3><a id="more"></a>
<blockquote>
<p>方法1.<code>alt+f9</code>然后<code>backspace</code>删除掉路径，接下来<code>alt+s</code>选择包含文件夹就可以了。<br>方法2.先左右窗口相同<br>方法3.<code>ctrl+→</code>把当前文件、文件夹显示到对面，然后到对面进行操作</p>
</blockquote>
<h3 id="二-在当前目录下压缩"><a href="#二-在当前目录下压缩" class="headerlink" title="二.在当前目录下压缩"></a>二.在当前目录下压缩</h3><blockquote>
<p>方法1.按住<code>ctrl</code>的时候用鼠标点菜单上面的压缩，这个时候可以用f5压缩后的文件名<br>方法2.在配置文件中的<code>[Shortcuts]</code>下面增加<code>CA+F5=cm_PackFiles</code>，以后就可以使用<code>ctrl+alt+f5</code>实现压缩了<br>方法3.同解压缩的方法2<br>方法4.同解压缩的方法3</p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>TotalCommander</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>网站前端性能优化</title>
    <url>/2015/03/27/20150327-web-optimization/</url>
    <content><![CDATA[<h1 id="一-开启gzip压缩"><a href="#一-开启gzip压缩" class="headerlink" title="一.开启gzip压缩"></a>一.开启gzip压缩</h1><p>在linux+Apache环境下开启gzip的方法：</p>
<a id="more"></a>
<h3 id="启用deflate-so模块"><a href="#启用deflate-so模块" class="headerlink" title="启用deflate.so模块"></a>启用deflate.so模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadModule deflate_module modules&#x2F;mod_deflate.so</span><br></pre></td></tr></table></figure>
<h3 id="在apache配置文件中增加需要压缩的文件类型"><a href="#在apache配置文件中增加需要压缩的文件类型" class="headerlink" title="在apache配置文件中增加需要压缩的文件类型"></a>在apache配置文件中增加需要压缩的文件类型</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ifmodule mod_deflate.c&gt;</span><br><span class="line">DeflateCompressionLevel 6</span><br><span class="line">AddOutputFilterByType DEFLATE text&#x2F;plain</span><br><span class="line">AddOutputFilterByType DEFLATE text&#x2F;html</span><br><span class="line">AddOutputFilterByType DEFLATE text&#x2F;xml</span><br><span class="line">AddOutputFilterByType DEFLATE text&#x2F;css</span><br><span class="line">AddOutputFilterByType DEFLATE text&#x2F;javascript</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;xhtml+xml</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;xml</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;rss+xml</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;atom_xml</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;x-javascript</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;javascript</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;x-httpd-php</span><br><span class="line">AddOutputFilterByType DEFLATE image&#x2F;svg+xml</span><br><span class="line">AddOutputFilterByType DEFLATE application&#x2F;json</span><br><span class="line">&lt;&#x2F;ifmodule&gt;</span><br></pre></td></tr></table></figure>
<p>查看header信息中<code>request header</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Accept:image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Encoding:gzip, deflate, sdch</span><br><span class="line">Accept-Language:zh-CN,zh;q&#x3D;0.8</span><br><span class="line">Cache-Control:no-cache</span><br><span class="line">Connection:keep-alive</span><br><span class="line">Cookie:__cfduid&#x3D;d5cc4c6799d5826ebe40e22a6ce4c1ff61427275063; tq_current_visit_time&#x3D;1427423496918; tq_current_source_page_url&#x3D;http:&#x2F;&#x2F;we.car91.cn&#x2F;exposure&#x2F;exposure&#x2F;index; JSESSIONID&#x3D;48D7BC57B2BD6868DEDB2AFC646BEB84.jvm1</span><br><span class="line">Host:www.car91.cn</span><br><span class="line">Pragma:no-cache</span><br><span class="line">Referer:http:&#x2F;&#x2F;www.car91.cn&#x2F;default&#x2F;index</span><br><span class="line">User-Agent:Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;41.0.2272.101 Safari&#x2F;537.36</span><br></pre></td></tr></table></figure>
<p>Accept-Encoding就表示客户端支持的压缩格式</p>
<p>查看header信息中<code>response header</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Accept-Ranges:bytes</span><br><span class="line">Cache-Control:max-age&#x3D;5356000</span><br><span class="line">Connection:Keep-Alive</span><br><span class="line">Content-Encoding:gzip</span><br><span class="line">Content-Length:32775</span><br><span class="line">Content-Type:application&#x2F;javascript</span><br><span class="line">Date:Fri, 27 Mar 2015 06:32:19 GMT</span><br><span class="line">ETag:&quot;169d5-5111212ad8b00-gzip&quot;</span><br><span class="line">Keep-Alive:timeout&#x3D;5, max&#x3D;94</span><br><span class="line">Last-Modified:Thu, 12 Mar 2015 07:10:04 GMT</span><br><span class="line">Server:Apache&#x2F;2.4.10 (Unix)</span><br><span class="line">Vary:Accept-Encoding</span><br></pre></td></tr></table></figure>
<p>中看到<code>Content-Encoding:gzip</code>则表示已经启用了压缩</p>
<h1 id="二-设置文件cache"><a href="#二-设置文件cache" class="headerlink" title="二.设置文件cache"></a>二.设置文件cache</h1><h3 id="开启header模块"><a href="#开启header模块" class="headerlink" title="开启header模块"></a>开启header模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadModule headers_module modules&#x2F;mod_headers.so</span><br></pre></td></tr></table></figure>
<p>###在httpd.conf中添加需要缓存的文件类以及设置时间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch &quot;.(flv|gif|jpg|jpeg|png|ico|swf|js|css|pdf|json)$&quot;&gt;</span><br><span class="line">Header set Cache-Control &quot;max-age&#x3D;5356000&quot;</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>设置成功后，如上在response header中就可以看到<code>Cache-Control:max-age=5356000</code>的效果了。</p>
<h1 id="三-静态资源文件避免cookie"><a href="#三-静态资源文件避免cookie" class="headerlink" title="三.静态资源文件避免cookie"></a>三.静态资源文件避免cookie</h1><p>对于静态资源，我们不需要在每次请求中带上cookie信息，对于静态资源避免带上cookie的一个比较简单的方法就是单独用一个域名来保存静态资源，因为不同域的请求不会带上其它域的cookie，比如网站域名是<a href="http://www.abc.com,则可以另外单独用一个static.def.com的域名来保存静态资源.或者单独分配一个static.abc.com来保存,但对于这种二级域名要避免在主域名中存在.abc.com这样作用域的cookie,否则还是会把cookie请求上谨言该主域下面的所有请求上./">www.abc.com,则可以另外单独用一个static.def.com的域名来保存静态资源。或者单独分配一个static.abc.com来保存，但对于这种二级域名要避免在主域名中存在.abc.com这样作用域的cookie，否则还是会把cookie请求上谨言该主域下面的所有请求上。</a></p>
<h1 id="四-降低首字节响应时间"><a href="#四-降低首字节响应时间" class="headerlink" title="四.降低首字节响应时间"></a>四.降低首字节响应时间</h1><p>要降低首字节的响应时间，一个是检查dns解析时间，如果域名的dns解析时间过长，则需要考虑更换域名的dns以提高解析速度。另一个则是优化页面的响应时间了。</p>
<h1 id="五-其它的一些常规优化手段"><a href="#五-其它的一些常规优化手段" class="headerlink" title="五.其它的一些常规优化手段"></a>五.其它的一些常规优化手段</h1><h3 id="1-合并资源，如果js-css文件合并，css-sprit"><a href="#1-合并资源，如果js-css文件合并，css-sprit" class="headerlink" title="1.合并资源，如果js,css文件合并，css sprit"></a>1.合并资源，如果js,css文件合并，css sprit</h3><h3 id="2-js全部写在外部js中，并在页面最后加载，尽量采用异步执行的方式"><a href="#2-js全部写在外部js中，并在页面最后加载，尽量采用异步执行的方式" class="headerlink" title="2.js全部写在外部js中，并在页面最后加载，尽量采用异步执行的方式"></a>2.js全部写在外部js中，并在页面最后加载，尽量采用异步执行的方式</h3><h3 id="3-css全部位于head中"><a href="#3-css全部位于head中" class="headerlink" title="3.css全部位于head中"></a>3.css全部位于head中</h3><h3 id="4-采用CDN"><a href="#4-采用CDN" class="headerlink" title="4.采用CDN"></a>4.采用CDN</h3><h3 id="5-开启Keep-Alive"><a href="#5-开启Keep-Alive" class="headerlink" title="5.开启Keep-Alive"></a>5.开启Keep-Alive</h3><h3 id="6-压缩图片"><a href="#6-压缩图片" class="headerlink" title="6.压缩图片"></a>6.压缩图片</h3>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>转http协议漫谈</title>
    <url>/2015/03/28/20150328-http/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>园子里已经有不少介绍HTTP的的好文章。对HTTP的一些细节介绍的比较好，所以本篇文章不会对HTTP的细节进行深究，而是从够高和更结构化的角度将HTTP协议的元素进行分类讲解。</p>
<h1 id="HTTP的定义和历史"><a href="#HTTP的定义和历史" class="headerlink" title="HTTP的定义和历史"></a>HTTP的定义和历史</h1><p>在一个网络中。传输数据需要面临三个问题:</p>
<blockquote>
<p>1.客户端如何知道所求内容的位置？</p>
</blockquote>
<blockquote>
<p>2.当客户端知道所求内容的位置后，如何获取所求内容？</p>
</blockquote>
<blockquote>
<p>3.所求内容以何种形式组织以便被客户端所识别？</p>
</blockquote>
<p>对于WEB来说，回答上面三种问题分别采用三种不同的技术，分别为:统一资源定位符(URIs),超文本传输协议(HTTP)和超文本标记语言(HTML)。对于大多数WEB开发人员来说URI和HTML都是非常的熟悉。而HTTP协议在很多WEB技术中都被封装的过多使得HTTP反而最不被熟悉。</p>
<a id="more"></a>
<p>HTTP作为一种传输协议，也是像HTML一样随着时间不断演进的，目前流行的HTTP1.1是HTTP协议的第三个版本。</p>
<h4 id="HTTP-0-9"><a href="#HTTP-0-9" class="headerlink" title="HTTP 0.9"></a>HTTP 0.9</h4><p>HTTP 0.9作为HTTP协议的第一个版本。是非常弱的。请求(Request)只有一行,比如:</p>
<p><code>GET www.cnblogs.com</code></p>
<p>从如此简单的请求体，没有POST方法，没有HTTP 头可以看出，那个时代的HTTP客户端只能接收一种类型：纯文本。并且，如果得不到所求的信息，也没有404 500等错误出现。</p>
<p>虽然HTTP 0.9看起来如此弱，但已经能满足那个时代的需求了。</p>
<h4 id="HTTP-1-0"><a href="#HTTP-1-0" class="headerlink" title="HTTP 1.0"></a>HTTP 1.0</h4><p>随着1996年后,WEB程序的需求，HTTP 0.9已经不能满足需求。HTTP1.0最大的改变是引入了POST方法，使得客户端通过HTML表单向服务器发送数据成为可能,这也是WEB应用程序的一个基础。另一个巨大的改变是引入了HTTP头，使得HTTP不仅能返回错误代码，并且HTTP协议所传输的内容不仅限于纯文本，还可以是图片，动画等一系列格式。</p>
<p>除此之外,还允许保持连接，既一次TCP连接后，可以多次通信，虽然HTTP1.0 默认是传输一次数据后就关闭。</p>
<h4 id="HTTP-1-1"><a href="#HTTP-1-1" class="headerlink" title="HTTP 1.1"></a>HTTP 1.1</h4><p>2000年5月，HTTP1.1确立。HTTP1.1并不像HTTP1.0对于HTTP0.9那样的革命性。但是也有很多增强。</p>
<p>首先，增加了<strong>Host头</strong>，比如访问我的博客:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;Careyson HTTP&#x2F;1.1</span><br><span class="line">Host: www.cnblogs.com</span><br></pre></td></tr></table></figure>
<p>Get后面仅仅需要相对路径即可。这看起来虽然仅仅类似语法糖的感觉，但实际上，这个提升使得在Web上的一台主机可以存在多个域。否则多个域名指向同一个IP会产生混淆。</p>
<p>此外,还引入了Range头，使得客户端通过HTTP下载时只下载内容的一部分，这使得多线程下载也成为可能。</p>
<p>还有值得一提的是HTTP1.1 默认连接是一直保持的，这个概念我会在下文中具体阐述。</p>
<h1 id="HTTP的网络层次"><a href="#HTTP的网络层次" class="headerlink" title="HTTP的网络层次"></a>HTTP的网络层次</h1><p>在Internet中所有的传输都是通过TCP/IP进行的。HTTP协议作为TCP/IP模型中应用层的协议也不例外。HTTP在网络中的层次如图1所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/1.png"></p>
<p> 图1.HTTP在TCP/IP中的层次</p>
<p>可以看出，HTTP是基于传输层的TCP协议，而TCP是一个端到端的面向连接的协议。所谓的端到端可以理解为进程到进程之间的通信。所以HTTP在开始传输之前，首先需要建立TCP连接，而TCP连接的过程需要所谓的“三次握手”。概念如图2所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/2.png"></p>
<p>图2.TCP连接的三次握手</p>
<p>在TCP三次握手之后，建立了TCP连接，此时HTTP就可以进行传输了。一个重要的概念是面向连接，既HTTP在传输完成之间并不断开TCP连接。在HTTP1.1中(通过Connection头设置)这是默认行为。所谓的HTTP传输完成我们通过一个具体的例子来看。</p>
<p>比如访问我的博客,使用Fiddler来截取对应的请求和响应。如图3所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/3.png"></p>
<p>图3.用fiddler抓取请求和相应</p>
<p>可以看出，虽然仅仅访问了我的博客，但锁获取的不仅仅是一个HTML而已，而是浏览器对HTML解析的过程中，如果发现需要获取的内容，会再次发起HTTP请求去服务器获取，比如图2中的那个common2.css。这上面19个HTTP请求，只依靠一个TCP连接就够了，这就是所谓的持久连接。也是所谓的一次HTTP请求完成。</p>
<h1 id="HTTP请求-HTTP-Request"><a href="#HTTP请求-HTTP-Request" class="headerlink" title="HTTP请求(HTTP Request)"></a>HTTP请求(HTTP Request)</h1><p>所谓的HTTP请求，也就是Web客户端向Web服务器发送信息，这个信息由如下三部分组成：</p>
<blockquote>
<p>1.请求行</p>
</blockquote>
<blockquote>
<p>2.HTTP头</p>
</blockquote>
<blockquote>
<p>3.内容</p>
</blockquote>
<p>一个典型的请求行比如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET www.cnblogs.com HTTP&#x2F;1.1</span><br></pre></td></tr></table></figure>
<p>请求行写法是固定的，由三部分组成，第一部分是请求方法，第二部分是请求网址，第三部分是HTTP版本。</p>
<p>第二部分HTTP头在HTTP请求可以是3种HTTP头：1.请求头(request header)  2.普通头(general header)  3.实体头(entity header)</p>
<p>通常来说，由于Get请求往往不包含内容实体，因此也不会有实体头。</p>
<p>第三部分内容只在POST请求中存在，因为GET请求并不包含任何实体。</p>
<p>我们截取一个具体的Post请求来看这三部分，我在一个普通的aspx页面放一个BUTTON,当提交后会产生一个Post请求，如图4所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/4.png"></p>
<p>图4.HTTP请求由三部分组成</p>
<h5 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h5><p>虽然我们所常见的只有Get和Post方法，但实际上HTTP请求方法还有很多，比如： PUT方法，DELETE方法，HEAD方法，CONNECT方法,TRACE方法。这里我就不细说了，自行Bing。</p>
<p>这里重点说一下Get和Post方法，网上关于Get和Post的区别满天飞。但很多没有说到点子上。Get和Post最大的区别就是Post有上面所说的第三部分：内容。而Get不存在这个内容。因此就像Get和Post其名称所示那样，Get用于从服务器上取内容，虽然可以通过QueryString向服务器发信息，但这违背了Get的本意，QueryString中的信息在HTTP看来仅仅是获取所取得内容的一个参数而已。而Post是由客户端向服务器端发送内容的方式。因此具有请求的第三部分：内容。</p>
<h1 id="HTTP响应-HTTP-Response"><a href="#HTTP响应-HTTP-Response" class="headerlink" title="HTTP响应(HTTP Response)"></a>HTTP响应(HTTP Response)</h1><p>当Web服务器收到HTTP请求后，会根据请求的信息做某些处理(这些处理可能仅仅是静态的返回页，或是包含Asp.net,PHP,Jsp等语言进行处理后返回)，相应的返回一个HTTP响应。HTTP响应在结构上很类似于HTTP请求,也是由三部分组成，分别为:</p>
<blockquote>
<p>1.状态行</p>
</blockquote>
<blockquote>
<p>2.HTTP头</p>
</blockquote>
<blockquote>
<p>3.返回内容</p>
</blockquote>
<p>首先来看状态行，一个典型的HTTP状态如下:</p>
<p><code>HTTP/1.1 200 OK</code></p>
<p>第一部分是HTTP版本，第二部分是响应状态码，第三部分是状态码的描述，因此也可以把第二和第三部分看成一个部分。</p>
<p>对于HTTP版本没有什么好说的，而状态码值得说一下，网上对于每个具体的HTTP状态码所代表的含义都有解释，这里我说一下分类。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">信息类 (100-199)</span><br><span class="line">响应成功 (200-299)</span><br><span class="line">重定向类 (300-399)</span><br><span class="line">客户端错误类 (400-499)</span><br><span class="line">服务端错误类 (500-599)</span><br></pre></td></tr></table></figure>
<p>HTTP响应中包含的头包括1.响应头(response header) 2.普通头(general header) 3.实体头(entity header)。</p>
<p>第三部分HTTP响应内容就是HTTP请求所请求的信息。这个信息可以是一个HTML，也可以是一个图片。比如我访问百度，HTTP Response如图5所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/5.png"></p>
<p>图5.一个典型的HTTP响应</p>
<p>图5中的响应是一个HTML，当然还可以是其它类型，比如图片，如图6所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/6.png"></p>
<p>图6.HTTP响应内容是图片</p>
<p>这里会有一个疑问，既然HTTP响应的内容不仅仅是HTML，还可以是其它类型，那么浏览器如何正确对接收到的信息进行处理？</p>
<p>这是通过媒体类型确定的(Media Type),具体来说对应Content-Type这个HTTP头，比如图5中是text/html,图6是image/jpeg。</p>
<p>媒体类型的格式为：大类/小类  比如图5中的html是小类，而text是大类。</p>
<p>IANA(The Internet Assigned Numbers Authority，互联网数字分配机构)定义了8个大类的媒体类型，分别是:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">application— (比如: application&#x2F;vnd.ms-excel.)</span><br><span class="line">audio (比如: audio&#x2F;mpeg.)</span><br><span class="line">image (比如: image&#x2F;png.)</span><br><span class="line">message (比如,:message&#x2F;http.)</span><br><span class="line">model(比如:model&#x2F;vrml.)</span><br><span class="line">multipart (比如:multipart&#x2F;form-data.)</span><br><span class="line">text(比如:text&#x2F;html.)</span><br><span class="line">video(比如:video&#x2F;quicktime.)</span><br></pre></td></tr></table></figure>
<p>HTTP头<br>HTTP头仅仅是一个标签而已，比如我在Aspx中加入代码:</p>
<p><code>Response.AddHeader(&quot;测试头&quot;,&quot;测试值&quot;);</code></p>
<p>对应的我们可以在fiddler抓到的信息如图7所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/7.png"></p>
<p>图7.HTTP头</p>
<p>不难看出，HTTP头并不是严格要求的，仅仅是一个标签，如果浏览器可以解析就会按照某些标准（比如浏览器自身标准，W3C的标准）去解释这个头，否则不识别的头就会被浏览器无视。对服务器也是同理。假如你编写一个浏览器，你可以将上面的头解释成任何你想要的效果微笑</p>
<p>下面我们说的HTTP头都是W3C标准的头，我不会对每个头的作用进行详细说明，关于HTTP头作用的文章在网上已经很多了，请自行Bing。HTTP头按照其不同的作用，可以分为四大类。</p>
<h4 id="通用头-General-header"><a href="#通用头-General-header" class="headerlink" title="通用头(General header)"></a>通用头(General header)</h4><p>通用头即可以包含在HTTP请求中，也可以包含在HTTP响应中。通用头的作用是描述HTTP协议本身。比如描述HTTP是否持久连接的Connection头，HTTP发送日期的Date头，描述HTTP所在TCP连接时间的Keep-Alive头,用于缓存控制的Cache-Control头等。</p>
<h4 id="实体头-Entity-header"><a href="#实体头-Entity-header" class="headerlink" title="实体头(Entity header)"></a>实体头(Entity header)</h4><p>实体头是那些描述HTTP信息的头。既可以出现在HTTP POST方法的请求中，也可以出现在HTTP响应中。比如图5和图6中的Content-Type和Content-length都是描述实体的类型和大小的头都属于实体头。其它还有用于描述实体的Content-Language,Content-MD5,Content-Encoding以及控制实体缓存的Expires和Last-Modifies头等。</p>
<h4 id="请求头-HTTP-Request-Header"><a href="#请求头-HTTP-Request-Header" class="headerlink" title="请求头(HTTP Request Header)"></a>请求头(HTTP Request Header)</h4><p>请求头是那些由客户端发往服务端以便帮助服务端更好的满足客户端请求的头。请求头只能出现在HTTP请求中。比如告诉服务器只接收某种响应内容的Accept头，发送Cookies的Cookie头，显示请求主机域的HOST头,用于缓存的If-Match，If-Match-Since,If-None-Match头，用于只取HTTP响应信息中部分信息的Range头，用于附属HTML相关请求引用的Referer头等。</p>
<h4 id="响应头-HTTP-Response-Header"><a href="#响应头-HTTP-Response-Header" class="headerlink" title="响应头(HTTP Response Header)"></a>响应头(HTTP Response Header)</h4><p>HTTP响应头是那些描述HTTP响应本身的头，这里面并不包含描述HTTP响应中第三部分也就是HTTP信息的头（这部分由实体头负责）。比如说定时刷新的Refresh头，当遇到503错误时自动重试的Retry-After头，显示服务器信息的Server头，设置COOKIE的Set-Cookie头，告诉客户端可以部分请求的Accept-Ranges头等。</p>
<h4 id="状态保持"><a href="#状态保持" class="headerlink" title="状态保持"></a>状态保持</h4><p>还有一点值得注意的是，HTTP协议是无状态的，这意味着对于接收HTTP请求的服务器来说，并不知道每一次请求来自同一个客户端还是不同客户端，每一次请求对于服务器来说都是一样的。因此需要一些额外的手段来使得服务器在接收某个请求时知道这个请求来自于某个客户端。如图8所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/8.png"></p>
<p>图8.服务器并不知道请求1和请求2来自同一个客户端</p>
<h5 id="通过Cookies保持状态"><a href="#通过Cookies保持状态" class="headerlink" title="通过Cookies保持状态"></a>通过Cookies保持状态</h5><p>为了解决这个问题，HTTP协议通过Cookies来保持状态，对于图8中的请求，如果使用Cookies进行状态控制，则变成了如图9所示。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/http/9.png"></p>
<p>图9.通过Cookies，服务器就可以清楚的知道请求2和请求1来自同一个客户端</p>
<h5 id="通过表单变量保持状态"><a href="#通过表单变量保持状态" class="headerlink" title="通过表单变量保持状态"></a>通过表单变量保持状态</h5><p>除了Cookies之外，还可以使用表单变量来保持状态，比如Asp.net就通过一个叫ViewState的Input=“hidden”的框来保持状态,比如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;__VIEWSTATE&quot; id&#x3D;&quot;__VIEWSTATE&quot; value&#x3D;&quot;&#x2F;wEPDwUKMjA0OTM4MTAwNGRkXUfhlDv1Cs7&#x2F;qhBlyZROCzlvf5U&#x3D;&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>
<p>这个原理和Cookies大同小异，只是每次请求和响应所附带的信息变成了表单变量。</p>
<h5 id="通过QueryString保持状态"><a href="#通过QueryString保持状态" class="headerlink" title="通过QueryString保持状态"></a>通过QueryString保持状态</h5><p> 这个原理和上述两种状态保持方法原理是一样的，QueryString通过将信息保存在所请求地址的末尾来向服务器传送信息，通常和表单结合使用，一个典型的QueryString比如:</p>
<p> <code>www.xxx.com/xxx.aspx?var1=value&amp;var2=value2</code></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文从一个比较高的视角来看HTTP协议，对于HTTP协议中的细节并没有深挖，但对于HTTP大框架有了比较系统的介绍，更多关于HTTP的细节信息，请去Bing或参看相关书籍:-)</p>
<p>文章来源：<a href="http://www.cnblogs.com/CareySon/archive/2012/04/27/HTTP-Protocol.html">http://www.cnblogs.com/CareySon/archive/2012/04/27/HTTP-Protocol.html</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title>apache开启status监控</title>
    <url>/2015/04/02/20150402-apache-status/</url>
    <content><![CDATA[<h1 id="一-开启模块"><a href="#一-开启模块" class="headerlink" title="一.开启模块"></a>一.开启模块</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadModule status_module modules&#x2F;mod_status.so #去掉这个模块前面的#</span><br></pre></td></tr></table></figure>
<p>如果没有这个模块,则需要编译安装这个模块</p>
<a id="more"></a>
<h1 id="二-增加配置"><a href="#二-增加配置" class="headerlink" title="二.增加配置"></a>二.增加配置</h1><p>在httpd.conf中添加如下配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Location &#x2F;server-status&gt;</span><br><span class="line">  SetHandler server-status</span><br><span class="line">  Order Deny,Allow</span><br><span class="line"> #Deny from all</span><br><span class="line">  Allow from 60.195.252.106 60.195.252.108</span><br><span class="line">&lt;&#x2F;Location&gt;</span><br><span class="line">ExtendedStatus On</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>说明,其中<code>Location /server-status</code>里面的<code>server-status</code>是设置显示状态的页面</p>
<p>Deny from all开启的话则是禁止所有的访问,这个时候如果访问没有在Allow里面,则会出现没有权限访问</p>
<p>Allow from 则是配置可以访问的客户端IP,测试不能使用域名,使用花生壳把域名解析成客户机IP也不能访问,Allow需要和Deny配合使用才行.</p>
<p>该配置是全局配置,不能配置在某一个虚拟网站之中.</p>
<h1 id="三-配置相关"><a href="#三-配置相关" class="headerlink" title="三.配置相关"></a>三.配置相关</h1><p>我在使用该配置中,一直出现空白页面,后检查配置文件发现,<br>该apache有三个虚拟主机,其中两个是tomcat,使用了ajp转发,另外一个是apache直接管理的静态资源,发现只能通过静态资源那个网址才能访问,本服务器的情况是</p>
<blockquote>
<p><a href="http://www.car91.cn/server-status">www.car91.cn/server-status</a> (tomcat)不能访问,报错404<br>we.car91.cn/server-status  (tomcat)不能访问,报错404<br>static.car91.cn/server-status (apache)能够访问</p>
</blockquote>
<p>尝试再新建一个apache管理的虚拟主机,js.car91.cn,发现js.car91.cn/server-status依然可以访问,看来不能访问的原因是tomcat的ajp转发上.</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>apache</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用命令</title>
    <url>/2015/04/02/20150402-linux-command/</url>
    <content><![CDATA[<h1 id="一-查看进程详细情况"><a href="#一-查看进程详细情况" class="headerlink" title="一.查看进程详细情况"></a>一.查看进程详细情况</h1><p>比如我要看下mysql启动的参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps aux |grep mysql</span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root     21992  0.0  0.0  11340  1396 pts&#x2F;2    S    09:58   0:00 &#x2F;bin&#x2F;sh &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqld_safe --datadir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data --pid-file&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.pid</span><br><span class="line">mysql    22070  0.0  1.1 1070516 46072 pts&#x2F;2   Sl   09:58   0:00 &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqld --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql --datadir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data --plugin-dir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;lib&#x2F;plugin --user&#x3D;mysql --log-error&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.err --pid-file&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.pid</span><br><span class="line">car91    26054  0.0  0.0 103248   824 pts&#x2F;2    R+   10:12   0:00 grep mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="二-用户的切换"><a href="#二-用户的切换" class="headerlink" title="二.用户的切换"></a>二.用户的切换</h1><blockquote>
<p>1.切换到root用户:<code>su</code><br>2.切换回原来的用户:<code>exit</code><br>3.切换到指定用户:<code>su xxx</code> (xxx为指定的用户名)</p>
</blockquote>
<h1 id="三-添加root组用户并赋于sudo权限"><a href="#三-添加root组用户并赋于sudo权限" class="headerlink" title="三.添加root组用户并赋于sudo权限"></a>三.添加root组用户并赋于sudo权限</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useradd car91 -g root #添加root组用户car91</span><br><span class="line">passwd car91 为car91添加密码</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这样创建用户是,是不能直接使用sudo命名的,还需要如下操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod u+w &#x2F;etc&#x2F;sudoers #添加sudo文件的写权限</span><br><span class="line">vi &#x2F;etc&#x2F;sudoers #找到这行 root ALL&#x3D;(ALL) ALL,在他下面添加xxx ALL&#x3D;(ALL) ALL (这里的xxx是你的用户名)</span><br><span class="line">chmod u-w &#x2F;etc&#x2F;sudoers #删除写权限</span><br></pre></td></tr></table></figure>
<p>第二步添加的内容可以为</p>
<blockquote>
<p>youuser            ALL=(ALL)                ALL  #允许用户youuser执行sudo命令(需要输入密码).<br>%youuser           ALL=(ALL)                ALL  #允许用户组youuser里面的用户执行sudo命令(需要输入密码).<br>youuser            ALL=(ALL)                NOPASSWD: ALL  #允许用户youuser执行sudo命令,并且在执行的时候不输入密码.<br>%youuser           ALL=(ALL)                NOPASSWD: ALL  #允许用户组youuser里面的用户执行sudo命令,并且在执行的时候不输入密码.</p>
</blockquote>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql相关错误整理</title>
    <url>/2015/04/02/20150402-mysql-errors/</url>
    <content><![CDATA[<h1 id="一-Can’t-find-file-‘-mysql-plugin-frm’-errno-13"><a href="#一-Can’t-find-file-‘-mysql-plugin-frm’-errno-13" class="headerlink" title="一.Can’t find file: ‘./mysql/plugin.frm’ (errno: 13)"></a>一.Can’t find file: ‘./mysql/plugin.frm’ (errno: 13)</h1><p>公司的服务器mysql一直是以root用户启动起来的，运行一直正常，今天给linux重新建了一个root组的用户，以这个用户的身份登录后，重启mysql一直失败，然后就把所有mysql运程结束了，以该用户身份启动mysql时，在错误日志中一直提示如下：</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">150402 09:49:34 mysqld_safe mysqld from pid file &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.pid ended</span><br><span class="line">150402 09:50:44 mysqld_safe mysqld from pid file &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.pid ended</span><br><span class="line">150402 09:51:16 mysqld_safe Starting mysqld daemon with databases from &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data</span><br><span class="line">150402  9:51:16 [Warning] Can&#39;t create test file &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.lower-test</span><br><span class="line">150402  9:51:16 [Warning] Can&#39;t create test file &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.lower-test</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqld: Can&#39;t find file: &#39;.&#x2F;mysql&#x2F;plugin.frm&#39; (errno: 13)</span><br><span class="line">150402  9:51:16 [ERROR] Can&#39;t open the mysql.plugin table. Please run mysql_upgrade to create it.</span><br><span class="line">150402  9:51:16 InnoDB: The InnoDB memory heap is disabled</span><br><span class="line">150402  9:51:16 InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">150402  9:51:16 InnoDB: Compressed tables use zlib 1.2.3</span><br><span class="line">150402  9:51:16 InnoDB: Initializing buffer pool, size &#x3D; 128.0M</span><br><span class="line">150402  9:51:16 InnoDB: Completed initialization of buffer pool</span><br><span class="line">150402  9:51:16  InnoDB: Operating system error number 13 in a file operation.</span><br><span class="line">InnoDB: The error means mysqld does not have the access rights to</span><br><span class="line">InnoDB: the directory.</span><br><span class="line">InnoDB: File name .&#x2F;ibdata1</span><br><span class="line">InnoDB: File operation call: &#39;open&#39;.</span><br><span class="line">InnoDB: Cannot continue operation.</span><br><span class="line">150402 09:51:16 mysqld_safe mysqld from pid file &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;iZ9423zm65xZ.pid ended</span><br></pre></td></tr></table></figure>
<p>解诀办法：其实mysql配置没有问题，只是在启动时需要加是sudo来运行，<code>sudo service mysqld start</code>,启动正常后，再运行<code>sudo service mysqld restart</code>也是正常的。</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>投诉之长城宽带</title>
    <url>/2015/04/10/20150410-complaint-chagnkuan/</url>
    <content><![CDATA[<p>最开始发现宽带问题是用手机下载APP的时候，经常会先下载一个360手机助手，第二次下载的时候才会下载到正常的APP,后来发现我在使用京东，淘宝，亚马逊，包括百度的时候，都会自动变成联盟网站的链接，而且平时看电视基本上不卡的，而且是基本上都是卡的，最开始也不解，以为是应用商店的问题，因为在应用商店里面也有人评价说下载成了其它的APP,后来在电脑上下载APP的时候，在APP的官网上下载也会出现这样的问题，这下肯定不是应用商店的问题，估计应该是DNS挟持的问题吧，更改DNS为谷歌的，阿里的，问题依然如故。后来发现这下肯定是被运营商给TCP挟持了，这种情况下再怎么改DNS也没有办法的。<a id="more"></a>在网上找到解决办法就是安装一个smart header的插件，用这个插件把连接请求中的user-agent删除掉就可以了，网上的说法是运营商的TCP挟持没有了user-agent就没办法起作用了，安装了这个插件之后，确实好像没有被挟持了，但在浏览过程中会出现问题，比如京东，淘宝没办法下单等，而且也没办法解决手机下载APP的问题。</p>
<p>于是决定还是最终极的办法，就是投诉，先打电话给长宽的客户，一直问我是不是要弹出长宽的广告页面，我一直解释说不是弹出页面，是TCP挟持，会变成联盟链接，下载APP的问题等，后来客服如网上的说话类似，说以前确实没有接到类似的投诉，帮我记录一下。</p>
<p>看来客服不好沟通，打开长宽的网页，在意见反馈里面说明了我的情况，要求在48小时内给我解决结果。</p>
<p>然后又打开他们的在线客户，说明情况，说让技术联系我，</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/tousu/cc1.png"></p>
<p>最开始技术说不会做这些处理，我也懒得给他们解释，再给他们一个台阶下，让他们检查一下，否则就投诉到工信部，相信他们会心知肚明的，他们马上说稍等一下，结果一个晚上就再也没有回复了。</p>
<p>第二天，我继续联系客服，<br><img src="http://7te946.com1.z0.glb.clouddn.com/tousu/cc2.png"><br>看到没，直接给我说没办法处理，一下子就生气了，那我就直接说投诉到工信部了，看来他们还是怕工信部的。</p>
<p>后来技术给我打电话，我说了我的问题，他还在狡辩说什么京东这些网站都是走的他们的资源，什么是联盟链接说不知道，后来我说让你去找我们的主管或者懂这方面的技术的。后来他就说昨天晚上已经把我的商品更新了一下，让我再看一下。</p>
<p>晚上回家，测试，已经没有进行TCP挟持了，同时我还发现我的IP段前三位是固定的了，不管怎么断线重连，只有最后一位会变化。同时看电视也还没有出现卡的情况了。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>投诉</tag>
      </tags>
  </entry>
  <entry>
    <title>我所用过的sublime text 插件</title>
    <url>/2015/04/28/20150428-sublime-text-plug/</url>
    <content><![CDATA[<h2 id="一、emmet"><a href="#一、emmet" class="headerlink" title="一、emmet"></a>一、emmet</h2><p>这个不用提了，每次必装的插件，写html.css代码如飞一般。</p>
<h2 id="二、ConvertToUTF8"><a href="#二、ConvertToUTF8" class="headerlink" title="二、ConvertToUTF8"></a>二、ConvertToUTF8</h2><p>没办法，被逼的，只有用来它支持下中文了。</p>
<a id="more"></a>
<h2 id="三、HTML-JS-CSS-prettify"><a href="#三、HTML-JS-CSS-prettify" class="headerlink" title="三、HTML/JS/CSS prettify"></a>三、HTML/JS/CSS prettify</h2><p>最后才装上的一个插件，支持HTML,CSS,JS,JSON的格式化插件，装上它后发现太强大了。以前一直用的tag,发现很多时候都格式化不了，这个插件不仅可以格式化html，还可以格式化css,js,json,打开压缩后的min js文件，点右键，或者<code>ctrl+shift+h</code>就可以格式化了，再也不用上网找工具了，json文件也是如此。</p>
<h2 id="四、Bracket-Highlighter"><a href="#四、Bracket-Highlighter" class="headerlink" title="四、Bracket Highlighter"></a>四、Bracket Highlighter</h2><p>代码成对高亮插件，找凑合标签非常方便，但不知道为什么今天装的时候在package install 里面找不到这个插件了。<br>PS:刚把电脑上面原来64位的卸载掉了，然后重新安装32位的，可以正常安装了，估计应该是不支持64位吧。</p>
<h2 id="五、Sublime-Tmpl"><a href="#五、Sublime-Tmpl" class="headerlink" title="五、Sublime Tmpl"></a>五、Sublime Tmpl</h2><p>自定义页面模板的功能，有时候再写一套网站的时候，很多页面的模板基本上都是一样的，虽然通过复制粘贴可以实现，但还是没有用这个插件来得简洁，快捷。<br>插件的详细使用说明可以参考<a href="http://www.fantxi.com/blog/archives/sublime-template-engine-sublimetmpl/">http://www.fantxi.com/blog/archives/sublime-template-engine-sublimetmpl/</a></p>
<h2 id="六、AutoFileName"><a href="#六、AutoFileName" class="headerlink" title="六、AutoFileName"></a>六、AutoFileName</h2><p>自动补完文件名字，这个在插入图片文件时候非常方便的。</p>
<h2 id="七、EmmetLiveStyle"><a href="#七、EmmetLiveStyle" class="headerlink" title="七、EmmetLiveStyle"></a>七、EmmetLiveStyle</h2><p>配合chrome F12工具中的LiveStyle插件一起使用，边浏览边在chorme里面就可以修改Css文件了。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>sublime text</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>sublime text tips</title>
    <url>/2015/04/28/20150428-sublime-text-tips/</url>
    <content><![CDATA[<h1 id="一、制作代码片段"><a href="#一、制作代码片段" class="headerlink" title="一、制作代码片段"></a>一、制作代码片段</h1><p>tools–&gt;new snippet会自动打开一个新建片段的文档</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;snippet&gt;</span><br><span class="line">	&lt;content&gt;&lt;![CDATA[</span><br><span class="line">Hello, $&#123;1:this&#125; is a $&#123;2:snippet&#125;.</span><br><span class="line">]]&gt;&lt;&#x2F;content&gt;</span><br><span class="line">	&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span><br><span class="line">	&lt;!-- &lt;tabTrigger&gt;hello&lt;&#x2F;tabTrigger&gt; --&gt;</span><br><span class="line">	&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span><br><span class="line">	&lt;!-- &lt;scope&gt;source.python&lt;&#x2F;scope&gt; --&gt;</span><br><span class="line">&lt;&#x2F;snippet&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>content代码片段内容<br>tabTrigger代码的快捷键，在文档中输入该代码后，按Tab就可以输出content中的代码内容了。<br>scope中定义该代码在哪种类型文档中可以生效。</p>
</blockquote>
<a id="more"></a>
<p>例如我常常要写一个jquery开源cdn库的缩写。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;snippet&gt;</span><br><span class="line">	&lt;content&gt;&lt;![CDATA[</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;http:&#x2F;&#x2F;libs.useso.com&#x2F;js&#x2F;jquery&#x2F;1.9.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">]]&gt;&lt;&#x2F;content&gt;</span><br><span class="line">	&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span><br><span class="line">	&lt;tabTrigger&gt;jq&lt;&#x2F;tabTrigger&gt;</span><br><span class="line">	&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span><br><span class="line">	&lt;!-- &lt;scope&gt;source.python&lt;&#x2F;scope&gt; --&gt;</span><br><span class="line">&lt;&#x2F;snippet&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>编辑完之后保存为 C:\Users[用户]\AppData\Roaming\Sublime Text 2\Packages\User\jq.sublime-snippet  (Win7下) 默认的保存路径就行。后缀必须是.sublime-snippet。</p>
<p>重启后打开，在代码中输入jq,然后按tab就可以直接插入jquery源了。</p>
<p>当然，我们还可以在代码中使用${1},1代码序号，使用了之后，在输出代码的时候会自动定位的${1}位置，按tab后会跳到第二个位置，如果数字相同，则是同时选中的效果。<br>如果下面一个代码片段：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;snippet&gt;</span><br><span class="line">    &lt;content&gt;&lt;![CDATA[</span><br><span class="line">&lt;!doctype html&gt; </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">    &lt;meta charset&#x3D;&quot;utf-8&quot;&gt; </span><br><span class="line">    &lt;title&gt;$&#123;1&#125;&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;$&#123;1&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">    Hello, $&#123;2:this&#125; is a $&#123;3:snippet&#125;.</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">]]&gt;&lt;&#x2F;content&gt;</span><br><span class="line">    &lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span><br><span class="line">    &lt;tabTrigger&gt;html5&lt;&#x2F;tabTrigger&gt;</span><br><span class="line">    &lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span><br><span class="line">    &lt;!-- &lt;scope&gt;source.python&lt;&#x2F;scope&gt; --&gt;</span><br><span class="line">&lt;&#x2F;snippet&gt;</span><br></pre></td></tr></table></figure>
<p>保存完重启Sublime text 2，新建文件：输入html5,tab会出现如下效果：</p>
<p><img src="http://www.blogjava.net/images/blogjava_net/hafeyang/sublime_text2_snippet-1.jpg"></p>
<p>${1}出现了两次，所以光标同时编辑图中两处。<br>${2:this}，所以在2处出现this默认值。${1}处编辑完按tab就到${2}处。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>sublime text</tag>
      </tags>
  </entry>
  <entry>
    <title>我用过的经典好用的软件</title>
    <url>/2015/05/30/20150530-good-soft/</url>
    <content><![CDATA[<h2 id="一-TotalCommander"><a href="#一-TotalCommander" class="headerlink" title="一.TotalCommander"></a>一.TotalCommander</h2><p>这个软件不用说了,xbeta专门用一个网站来推荐他的一个神一般的资源管理器,因为我与电脑文件交道打得太频繁了,详细使用方法在Xbeta上面已经有了.</p>
<a id="more"></a>
<h2 id="二-Sublime-Text"><a href="#二-Sublime-Text" class="headerlink" title="二.Sublime Text"></a>二.Sublime Text</h2><p>当年用DW做网站的时候,那个时候正好经历了从表格到DIV+CSS转变的时候,当把DIV+CSS学得差不多时候,发现DW只用得上代码模式了,其它的功能基本上都用不上了,而就为了这一点点却上用上一个庞大的DW,一直希望能够有一个记事本般小巧,但能够有代码提示功能的,直到我遇到了SB,最爱他的皮肤,他的模糊匹配,他的丰富插件,他的…</p>
<h2 id="三-Internet-Download-Manager-IDM"><a href="#三-Internet-Download-Manager-IDM" class="headerlink" title="三.Internet Download Manager(IDM)"></a>三.Internet Download Manager(IDM)</h2><p>在firefox里面有一个很好用的插件xthunder,这个下载管理器非常方便,后来经常用chrome了,却一直找不到一个满意的下载管理器,直到我遇到IDM,才发现chrome不需要什么下载管理器了,它和chrome完美兼容,静默下载,多线程下载,小巧得我可以忽略它的存在,再也不用忍受每次启动都要等个十多二十秒的迅雷或者旋风,下载,就这么简单就好.<br>可惜它是收费的,网上比较优秀的破解版应该是Yanu的吧.附上一链接:<a href="http://www.ccav1.com/idm.html">http://www.ccav1.com/idm.html</a></p>
<h2 id="四-坚果云"><a href="#四-坚果云" class="headerlink" title="四.坚果云"></a>四.坚果云</h2><p>每个月只有1G的流量,和现在动不动就几十T的网盘比起来,我却还是只用它,只因为它同步特别稳定,从来没有遇到过同步出过问题的,增量同步,多文件夹同步,方便极了.</p>
<h2 id="五-listary"><a href="#五-listary" class="headerlink" title="五.listary"></a>五.listary</h2><p>刚刚才接触它,却立马爱上他了,以前一直用everything,同样是一款神一样的软件,秒秒搜索全盘软件,而Listary除了上搜索上同样厉害之外,还增强了许多功能,比如快捷键唤出搜索,和文件管理器结合一体,还与Totalcommander整合,增强的打开保存功能.</p>
<h2 id="六-AutoHotKey"><a href="#六-AutoHotKey" class="headerlink" title="六.AutoHotKey"></a>六.AutoHotKey</h2><p>说实话,我用它真的是太浪费它了,因为我只用它来打开常用软件,常用文件,每天win+q打开QQ的感觉真的很爽,用上它,用上totalcommander,listray这些软件,真的是可以越来越少使用鼠标了.</p>
<h2 id="七-Admuncher"><a href="#七-Admuncher" class="headerlink" title="七.Admuncher"></a>七.Admuncher</h2><p>我不得说,做为一个十多年的资深网民,很多下载页面我也是要找半天才能找到真实的下载地址,浏览器有很多过虑广告的插件,比如Adblock Plus,和它同样优秀的这个奶牛,优点是可以过滤到不仅仅浏览器,软件的广告也都可以过滤到.整个互联网终于清静了.看视频也不用等广告了.</p>
<h2 id="八-ditto"><a href="#八-ditto" class="headerlink" title="八.ditto"></a>八.ditto</h2><p>以前用过CLCL,呼出加快捷选择很方便,后来用上ditto,同样非常快捷方便的剪贴板管理工具,天天和代码,文档打交道,这个是必不可少的.再也不用来回重新复制了.</p>
<h2 id="九-Teamviewer"><a href="#九-Teamviewer" class="headerlink" title="九.Teamviewer"></a>九.Teamviewer</h2><p>现在用得比较少了,但笔记本还是一直让它自启的,因为一直登录自己的账号,远程控制无须本机确认,桌面管理,文件传输,流畅的速度,远程管理一直用的就是它了.</p>
<h2 id="十-virgo"><a href="#十-virgo" class="headerlink" title="十.virgo"></a>十.virgo</h2><p>以前也用过一些虚拟桌面软件,但都记不得名字了,最近又看到一个虚拟桌面软件,不是virgo,虽然实际使用频率特别少,但只有7K的体积让我屈服了.不得不说算得上是超级经典的软件了.</p>
<h2 id="十一-PotPlayer-射手影音播放器"><a href="#十一-PotPlayer-射手影音播放器" class="headerlink" title="十一.PotPlayer,射手影音播放器"></a>十一.PotPlayer,射手影音播放器</h2><p>以前一直用的是KMplayer,PotPlayer是KMplayer的新作,后来的射手同样也是做的非常优秀,我比较喜欢那些小巧得惊人,但功能却一点都不差不的软件,而且相当专注,没有太多臃肿的功能.</p>
<h2 id="十二-DiskGenius"><a href="#十二-DiskGenius" class="headerlink" title="十二.DiskGenius"></a>十二.DiskGenius</h2><p>每次分区,修复分区表,找回误删的文件,查看丢失分区里面文件…最顺手,最信任的可能就是它了.</p>
<h2 id="十三-CCleaner"><a href="#十三-CCleaner" class="headerlink" title="十三.CCleaner"></a>十三.CCleaner</h2><p>同样是因为小巧,但清理得却是非常彻底的.不需要动不动就是什么助手,卫士的.</p>
<h2 id="十四-foxmail"><a href="#十四-foxmail" class="headerlink" title="十四.foxmail"></a>十四.foxmail</h2><p>我一直认为我用不上它的,因为我不是邮件达人,直到我发现它还支持RSS,每天再也不用不断去看那几个喜欢的软件有没有更新了,直接在它里面全部浏览无余.而且它收取gmail邮件比我以前用QQ代收要来得快得多.</p>
<h2 id="十五-bandizip"><a href="#十五-bandizip" class="headerlink" title="十五.bandizip"></a>十五.bandizip</h2><p>以前用7z,因为它免费,一般我尽量找能够替代收费软件的替代品,毕竟用破解版总感觉对作者不尊重似的,后来用上bandizip主要是因为同样也是免费的,另外支持直接查看压缩包里面的图片.</p>
<h2 id="十六-VMware"><a href="#十六-VMware" class="headerlink" title="十六.VMware"></a>十六.VMware</h2><p>折腾系统,网银不兼容,测试,测试,测试,….还是测试，而且现在VMware还非常良心地为我们推出了免费版的VMware Workstation Player,基本上我们要用的功能免费版上面都已经有了。</p>
<h2 id="十七-VPNGate"><a href="#十七-VPNGate" class="headerlink" title="十七.VPNGate"></a>十七.VPNGate</h2><p>应该是免费VPN里面最好的了吧.</p>
<h2 id="十八-tor"><a href="#十八-tor" class="headerlink" title="十八.tor"></a>十八.tor</h2><p>曾经研究过一段时间,什么换IP,用虚拟机,都没有它来得防查水表的强大.</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>微擎模块人人商城11.7版修记录</title>
    <url>/2016/03/18/20160318-ewei-shop-fixed/</url>
    <content><![CDATA[<h2 id="文章营销插件，被分享者非商城会员，分享者无奖励"><a href="#文章营销插件，被分享者非商城会员，分享者无奖励" class="headerlink" title="文章营销插件，被分享者非商城会员，分享者无奖励"></a>文章营销插件，被分享者非商城会员，分享者无奖励</h2><a id="more"></a>
<p>现象：使用文章营销插件之后，分享者把链接分享出去之后，被分享者点击链接之后，能够正常记录阅读数，但记录不到分享记录，同时也导致给分享者设置的奖励无效。</p>
<p>原因分析：在文章营销首页php文件<code>addons/ewei_shop/plugin/article/core/mobile/index.php</code>中第52行开始代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$myid</span> = m(<span class="string">&#x27;member&#x27;</span>)-&gt;getMid();</span><br><span class="line"><span class="variable">$shareid</span> = intval(<span class="variable">$_GPC</span>[<span class="string">&#x27;shareid&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$doShare</span> = <span class="keyword">$this</span>-&gt;model-&gt;doShare(<span class="variable">$article</span>, <span class="variable">$shareid</span>, <span class="variable">$myid</span>);</span><br></pre></td></tr></table></figure>
<p>在调用<code>doShare</code>方法之前，获取到的<code>$myid</code>是为空的，继续分析<code>member</code>文件中的<code>getMid()</code>方法可以发现，这里获取到的<code>myid</code>是读取数据库<code>ewei_shop_member</code>里面的信息，而如果用户之前没有进入过公众号人人商城，那么也就不会存在这个记录值的，所以返回结果是为空的。</p>
<p>解析办法：在这段代码之前添加方法<code>m(&#39;member&#39;)-&gt;checkMember();</code>,代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">m(<span class="string">&#x27;member&#x27;</span>)-&gt;checkMember();</span><br><span class="line"><span class="variable">$myid</span> = m(<span class="string">&#x27;member&#x27;</span>)-&gt;getMid();</span><br><span class="line"><span class="variable">$shareid</span> = intval(<span class="variable">$_GPC</span>[<span class="string">&#x27;shareid&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$doShare</span> = <span class="keyword">$this</span>-&gt;model-&gt;doShare(<span class="variable">$article</span>, <span class="variable">$shareid</span>, <span class="variable">$myid</span>);</span><br></pre></td></tr></table></figure>
<h2 id="文章营销模块，后台分享列表页面无法显示点击者昵称"><a href="#文章营销模块，后台分享列表页面无法显示点击者昵称" class="headerlink" title="文章营销模块，后台分享列表页面无法显示点击者昵称"></a>文章营销模块，后台分享列表页面无法显示点击者昵称</h2><p>现象：文章分享出去，别人点击之后，在后台查看分享记录里面的点击者，只能显示<code>未更新用户信息</code></p>
<p>原因分析：在文件<code>/addons/ewei_shop/core/model/member.php</code>中第219左右行如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkMember</span>(<span class="params"><span class="variable">$openid</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_W</span>, <span class="variable">$_GPC</span>;</span><br><span class="line">    <span class="keyword">if</span> (strexists(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>], <span class="string">&#x27;/web/&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$openid</span>)) &#123;</span><br><span class="line">        <span class="variable">$openid</span> = m(<span class="string">&#x27;user&#x27;</span>)-&gt;getOpenid();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$openid</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$member</span>   = m(<span class="string">&#x27;member&#x27;</span>)-&gt;getMember(<span class="variable">$openid</span>);</span><br><span class="line">    <span class="variable">$userinfo</span> = m(<span class="string">&#x27;user&#x27;</span>)-&gt;getInfo(<span class="variable">$openid</span>);</span><br><span class="line">    <span class="variable">$followed</span> = m(<span class="string">&#x27;user&#x27;</span>)-&gt;followed(<span class="variable">$openid</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其中的<code>$userinfo = m(&#39;user&#39;)-&gt;getInfo($openid);</code>写法有误，分析<code>getInfo()</code>方法可以发现，这个方法只会返回<code>openid</code>这一条信息的，不会返回其它如昵称之类的。</p>
<p>解决办法：使用<code>$userinfo = m(&#39;member&#39;)-&gt;getInfo($openid);</code>方法，代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkMember</span>(<span class="params"><span class="variable">$openid</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_W</span>, <span class="variable">$_GPC</span>;</span><br><span class="line">    <span class="keyword">if</span> (strexists(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>], <span class="string">&#x27;/web/&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$openid</span>)) &#123;</span><br><span class="line">        <span class="variable">$openid</span> = m(<span class="string">&#x27;user&#x27;</span>)-&gt;getOpenid();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$openid</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$member</span>   = m(<span class="string">&#x27;member&#x27;</span>)-&gt;getMember(<span class="variable">$openid</span>);</span><br><span class="line">    <span class="variable">$userinfo</span> = m(<span class="string">&#x27;member&#x27;</span>)-&gt;getInfo(<span class="variable">$openid</span>);</span><br><span class="line">    <span class="variable">$followed</span> = m(<span class="string">&#x27;user&#x27;</span>)-&gt;followed(<span class="variable">$openid</span>);</span><br></pre></td></tr></table></figure>
<h2 id="文章营销模块-实现未关注公众号的用户也获取到用户昵称"><a href="#文章营销模块-实现未关注公众号的用户也获取到用户昵称" class="headerlink" title="文章营销模块 实现未关注公众号的用户也获取到用户昵称"></a>文章营销模块 实现未关注公众号的用户也获取到用户昵称</h2><p>现象：这个也不能说算是bug，只是程序写法中，区别上面一条的是，上面就算用户关注了公众号的，也是没办法获取到点击者信息的，而如果用户未关注公众号，在修复了上面那个问题之后，依然是获致不到用户信息的。</p>
<p>原因分析：在<code>ewei_shop/core/model/member.php</code>中的<code>getInfo()</code>方法，这个方法只会读取<code>ewei_shop_member</code>表和系统用户表里面的用户信息，而如果用户没有关注的话，是没有这些信息的。</p>
<p>解析方法：在这个方法的原来判断代码中，如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"><span class="variable">$openid</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line">    <span class="variable">$uid</span> = intval(<span class="variable">$openid</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$uid</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$info</span> = pdo_fetch(<span class="string">&#x27;select * from &#x27;</span> . tablename(<span class="string">&#x27;ewei_shop_member&#x27;</span>) . <span class="string">&#x27; where openid=:openid and uniacid=:uniacid limit 1&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;:uniacid&#x27;</span> =&gt; <span class="variable">$_W</span>[<span class="string">&#x27;uniacid&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;:openid&#x27;</span> =&gt; <span class="variable">$openid</span></span><br><span class="line">        ));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$info</span> = pdo_fetch(<span class="string">&#x27;select * from &#x27;</span> . tablename(<span class="string">&#x27;ewei_shop_member&#x27;</span>) . <span class="string">&#x27; where id=:id  and uniacid=:uniacid limit 1&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;:uniacid&#x27;</span> =&gt; <span class="variable">$_W</span>[<span class="string">&#x27;uniacid&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;:id&#x27;</span> =&gt; <span class="variable">$uid</span></span><br><span class="line">        ));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$info</span>[<span class="string">&#x27;uid&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;fda&quot;</span>;</span><br><span class="line">        load()-&gt;model(<span class="string">&#x27;mc&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>这里面的<code>if (!empty($info[&#39;uid&#39;]))</code>后面添加<code>else</code>代码块</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$info</span> = m(<span class="string">&#x27;user&#x27;</span>)-&gt; oauth_info();</span><br><span class="line">            <span class="variable">$info</span>[<span class="string">&#x27;avatar&#x27;</span>] ＝ <span class="variable">$info</span>[<span class="string">&#x27;headimgurl&#x27;</span>];</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>通过完整的OAuth方式获取用户信息。</p>
]]></content>
      <categories>
        <category>二次开发</category>
      </categories>
      <tags>
        <tag>微擎</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 更新主题的方法</title>
    <url>/2016/03/19/20160319-hexo-update-theme/</url>
    <content><![CDATA[<p>我们在使用hexo安装了主题之后，后续主题作者可能会更新了主题，比如修复了bug，增加了功能等。那么这个时候我们就要想办法更新主题，最粗暴的方法就是直接删除主题，重新安装最新的，但这种方式不是用hexo写博客的精神。如果主题是托管在git上面的，那么就非常好办了。我们通过简单的git命令就可以完成更新操作了。</p>
<a id="more"></a>
<p>这里我们以目前非常流行的<code>NexT</code>主题为例，我们安装的时候都是通过git的方式安装的，那么我们通过git在hexo目录下面，定位到<code>next</code>目录，</p>
<p>在git中直接运行<code>git fetch origin master</code>先把远程分支摘取下来，如下图<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-19/59283102.jpg"></p>
<p>我们来对比看一下远程和本地的差异，运行<code>git diff master origin/master</code>,如下图<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-19/1513263.jpg"></p>
<p>接下来我们就可以进行合并操作了，运行<code>git merge origin/master</code>,如下图<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-19/75538785.jpg"></p>
<p>简单的三条命令我们就完成了主题的更新操作。</p>
<p>需要注意的是：</p>
<p>我们一般都要对主题的配置文件进行修改的，所以在合并的时候一定要注意远程的修改时间和本地的修改时间，如果远程的修改时间比本地的新，比如配置文件中可能增加了新的功能，那么一定要记得备份本地的修改文件，要不然合并下来可能会被覆盖掉的。<br>当然，我们也可以通过更加方便的方式使用<code>git stash</code>或者<code>git rebase</code>方式来更新合并。</p>
<h3 id="2016-03-25更新"><a href="#2016-03-25更新" class="headerlink" title="2016.03.25更新"></a>2016.03.25更新</h3><p>当然，更好的办法还是应该是把原作者的github进行fork过来，然后在自己的本地修改git的远程分支为自己fork过来的地址，并添加upstream分支为原作者的分支。</p>
<p>这样，我们保留master分支上的代码一直是和upstream以及origin上的代码是同步并一致的，而自己对主题的修改刚新建的一个分支，比如叫<code>building</code>分支,这样，当主分支有了更新之后，我们也能够安全地进行合并，如果我们自己想对主题进行比较好的修改，那么我们可以在主分支上面，再新建的一个<code>dev</code>分支，添加功能之后，还可以向原作者进行pull request,这样也可以贡献我们自己的代码了。</p>
<p>比如我的实际操作，在github上fork完毕原作者的主题之后：</p>
<p>因为我之前对主题文件的配置进行了修改，所以我先把配置文件保存出来，因为我不需要合并，我需要把master分支保证和源分支一致。</p>
<p>首先，丢弃我对主题的修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure>
<p>修改远程地支的地址为自己fork之后的，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote origin set-url git@github.com:buxuku&#x2F;hexo-theme-next.git</span><br></pre></td></tr></table></figure>
<p>当然，这一步我们也可以先删除远程分支再添加的方式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote rm origin </span><br><span class="line">git remote add origin git@github.com:buxuku&#x2F;hexo-theme-next.git </span><br></pre></td></tr></table></figure>
<p>或者直接修改config配置文件</p>
<p>然后添加原作者的远程分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add upstream git@github.com:iissnan&#x2F;hexo-theme-next.git</span><br></pre></td></tr></table></figure>
<p>同步原作者的分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch upstream</span><br></pre></td></tr></table></figure>
<p>合并到master分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge upstream&#x2F;master</span><br></pre></td></tr></table></figure>
<p>push到自己的github上面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<p>添加自己写博客需要的一个分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -b building</span><br></pre></td></tr></table></figure>
<p>然后尽情地修改自己的配置文件，主题什么的，尽情享受写作的乐趣吧</p>
<p>修改完毕之后，git commit之后，我们再git push origin building推送到自己的远程目录。</p>
<p>当我们换电脑之后，全新安装hexo,进入theme目录，克隆我们的远程仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:buxuku&#x2F;hexo-theme-next.git next</span><br></pre></td></tr></table></figure>
<p>和上面一样，添加upstream分友</p>
<p>下载我们的building分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -b building origin&#x2F;building</span><br><span class="line">git checkout master</span><br></pre></td></tr></table></figure>
<p>检查更新，合并更新，合并更新到building分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch upstream</span><br><span class="line">git merge upstream&#x2F;master</span><br><span class="line">git push origin master</span><br><span class="line">git checkout building</span><br><span class="line">git merge master</span><br><span class="line">git push origin building</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><blockquote>
<p>Syncing a fork ：<a href="https://help.github.com/articles/syncing-a-fork/">https://help.github.com/articles/syncing-a-fork/</a><br>Configuring a remote for a fork ：<a href="https://help.github.com/articles/configuring-a-remote-for-a-fork/">https://help.github.com/articles/configuring-a-remote-for-a-fork/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>轻松把代码部署到github上面</title>
    <url>/2016/03/21/20160321-push-my-code-on-github/</url>
    <content><![CDATA[<p>我们使用git很多时候都是需要配合github同步使用的，当我们在本地使用了git管理代码，并进行修改，提交之后，接下来我们就想把代码部署到github上面去，整个流程也是非常简单的。</p>
<a id="more"></a>

<p>首先，我们登录github之后，点击右上角的<code>new repository</code>,来新建一个分支，接下来就要求我们级分支起一个名字，这里比如我起一个<code>mytest</code>的名字，写上分支的描述，如下图<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-21/53438101.jpg"></p>
<p>接下来就是我最喜欢github的一点了，因为他已经非常直观地告诉了我们要怎么做了，如下图<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-21/11795900.jpg"></p>
<h3 id="…or-create-a-new-repository-on-the-command-line"><a href="#…or-create-a-new-repository-on-the-command-line" class="headerlink" title="…or create a new repository on the command line"></a>…or create a new repository on the command line</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;# mytest&quot; &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;buxuku&#x2F;mytest.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>这里教我们在本地创建一个新的仓库，并建立一个README.md的文件，然后提交并推送到github上面</p>
<h3 id="…or-push-an-existing-repository-from-the-command-line"><a href="#…or-push-an-existing-repository-from-the-command-line" class="headerlink" title="…or push an existing repository from the command line"></a>…or push an existing repository from the command line</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;buxuku&#x2F;mytest.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>这里就是教我们在本地已经存在的仓库里面把这个远程地址添加进来，然后把代码提交上去。<br>整个过程就是这么的简单。比如我提交的一份代码执行图：<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-21/89223794.jpg"><br>从图中也看到了，github有时候可能会出现网络不稳定或者被墙的情况。</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>用ssh的方式来连接你的git</title>
    <url>/2016/03/22/20160322-git-with-ssh/</url>
    <content><![CDATA[<p>我们在使用git进行远程仓库操作的时候，如果使用https的方式的话，总是会在每次操作的时候都要求输入用户名密码，如果我们固定会在某台电脑上面使用的话，就可以选择用SSH的方式来避免每次输入用户名和密码。</p>
<a id="more"></a>
<p>SSH是一个身份认证系统，它是用来识别你的身份，而不是用来识别客户端的，</p>
<p>因此在电脑上面，我们要用我们自己的身份来生成一份公私的密钥对。</p>
<p>打开git bash,运行<code>ssh-keygen -t rsa -C &#39;youremail@gmail.com&#39;</code>,这里面的<code>youremail@gmail.com</code>就是你自己的邮箱，如下图：<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-22/37886779.jpg"></p>
<p>之后就会在我们的用户目录下面生成一个<code>.ssh</code>的文件夹，里面会出现两个文件，<code>id_rsa</code>和<code>id_rsa.pub</code>,后面这个就是我们的公钥文件，我们需要把这个公钥文件设置到github上面。</p>
<p>github上面有两个设置的地方，一个是账户设置里面里面的<code>SSH Keys</code>，这里面添加话，则可以通过私钥来控制整个账户下面的项目。</p>
<p>另一个就是具体项目设置里面的<code>Deploy keys</code>，在这里面添加key则只能控制这一个项目，如果勾选里面的<code>Allow write access</code>则可以对项目进行PUSH操作。</p>
<p>设置了key之后，我们打开本地项目中的<code>.git</code>文件夹，修改里面的<code>config</code>文件，把<code>[remote &quot;origin&quot;]</code>里面的url修改成我们项目的SSH地址就可以了。接下来我们就可以轻松地使用SSH进行操作了。</p>
<p>需要注意的是，假如账户<a href="mailto:&#65;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;">&#65;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a>在github上面注册了，并创建了仓库，我们在本地为账户<a href="mailto:&#x42;&#64;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;">&#x42;&#64;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;</a>创建了SSH，而账户B是没有注册github的，我们把B的公钥添加到账户A的账户级的<code>SSH Keys</code>中，那么账户B同样能够对A的所有仓库进行PUSH的操作的。而项目级的<code>Deploy key</code>中，则同样对该项目具有PUSH操作权限。</p>
<p>一个公钥只能应用于一处，即要么是账户级，要么是项目级，项目级也只能应用于一个项目中，不能多个项目使用同个公钥。</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>react-route从v3迁移到v4(折腾+踩坑)</title>
    <url>/2017/09/28/Migrating-react-route-v3-to-v4/</url>
    <content><![CDATA[<p>从react-router v3到react-router v4确实不能算是升级，而是称得到是迁移了。API的变化发生了翻天覆地的变化了。</p>
<a id="more"></a>

<h1 id="一-包的改变"><a href="#一-包的改变" class="headerlink" title="一. 包的改变"></a>一. 包的改变</h1><p>所有引入的<code>react-route</code>都要换成<code>react-route-dom</code>了</p>
<h1 id="二-没有了browserHistory"><a href="#二-没有了browserHistory" class="headerlink" title="二. 没有了browserHistory"></a>二. 没有了browserHistory</h1><p>需要引入<code>BrowserRouter</code>来实现</p>
<h1 id="三-location中没有了query"><a href="#三-location中没有了query" class="headerlink" title="三. location中没有了query"></a>三. location中没有了query</h1><p>官方对此讨论也很激烈，<a href="https://github.com/ReactTraining/react-router/issues/4410">https://github.com/ReactTraining/react-router/issues/4410</a></p>
<p>官方给出的解决方案就是使用第三方库<code>query-string</code>来解决</p>
<h1 id="四-path不再支持通配符"><a href="#四-path不再支持通配符" class="headerlink" title="四. path不再支持通配符"></a>四. path不再支持通配符</h1><p><code>path=&quot;goods/(:id)&quot;</code>需要写成<code>path=&quot;goods/:id?&quot;</code></p>
<h1 id="五-不能直接从props-params中取值了"><a href="#五-不能直接从props-params中取值了" class="headerlink" title="五. 不能直接从props.params中取值了"></a>五. 不能直接从props.params中取值了</h1><p><code>this.props.params.id</code>需要改成<code>this.props.match.params.id</code></p>
<h1 id="六-不再有onEnter等api"><a href="#六-不再有onEnter等api" class="headerlink" title="六. 不再有onEnter等api"></a>六. 不再有onEnter等api</h1><p><a href="https://reacttraining.com/react-router/web/example/auth-workflow">https://reacttraining.com/react-router/web/example/auth-workflow</a></p>
<p><a href="https://github.com/lincenying/mmf-blog-react-v2/blob/master/src/pages/app.jsx#L37-L38">https://github.com/lincenying/mmf-blog-react-v2</a></p>
<p>扩展阅读</p>
<p>【React Router 从v3升级到v4踩坑之旅】(<a href="http://www.jianshu.com/p/e2277aaa53f1">http://www.jianshu.com/p/e2277aaa53f1</a>)<br>【react-router v4 使用 history 控制路由跳转】(<a href="https://segmentfault.com/a/1190000011137828">https://segmentfault.com/a/1190000011137828</a>)</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>react-route</tag>
      </tags>
  </entry>
  <entry>
    <title>在React中踩过的坑以及最佳实践</title>
    <url>/2017/09/25/React-pits-and-best-practices/</url>
    <content><![CDATA[<h1 id="一-富文本编辑器"><a href="#一-富文本编辑器" class="headerlink" title="一.富文本编辑器"></a>一.富文本编辑器</h1><h1 id="二-地图"><a href="#二-地图" class="headerlink" title="二.地图"></a>二.地图</h1>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>用几行原生js代码写的九九乘法表</title>
    <url>/2016/10/26/a-Multiplication-Table-demo/</url>
    <content><![CDATA[<p>无聊想到写的一个小demo,整个js代码只有几行，关键思路就是乘数置前的处理手段。</p>
<a id="more"></a>
<p>我们正常的思维逻辑按照我们背的方式，一列一列的来生成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(j=i;j&lt;<span class="number">10</span>;j++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(i+<span class="string">&quot;*&quot;</span>+j+<span class="string">&quot;=&quot;</span>+i*j);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果要在页面上展示出来，我们一行一行地进行处理，刚不是向上面那个一列一列地处理，可能更容易展示，于是我们就想到在循环中把乘数放在外层是更容易处理的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;table&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>,htmlStr=<span class="string">&#x27;&#x27;</span>;i&lt;<span class="number">10</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript">    htmlStr += <span class="string">&quot;&lt;tr&gt;&quot;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span></span><br><span class="line"><span class="javascript">        htmlStr += <span class="string">&quot;&lt;td&gt;&quot;</span>+j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+i*j+<span class="string">&quot;&lt;/td&gt;&quot;</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    htmlStr += <span class="string">&quot;&lt;/tr&gt;&quot;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.getElementById(<span class="string">&quot;table&quot;</span>).innerHTML=htmlStr;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>demo</tag>
      </tags>
  </entry>
  <entry>
    <title>用面向过程和面向对象写一个拖拽demo</title>
    <url>/2016/10/26/a-drap-demo/</url>
    <content><![CDATA[<p>很简单的一个拖拽效果，没有判断窗口溢出的现象，主要还是加深this的应用。</p>
<a id="more"></a>
<h2 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#drag</span>&#123;</span></span><br><span class="line">      width: 40px;</span><br><span class="line">      height: 40px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      background-color: red;</span><br><span class="line"><span class="css">      <span class="selector-tag">cursor</span><span class="selector-pseudo">:pointer</span>;;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;drag&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> drag = <span class="built_in">document</span>.getElementById(<span class="string">&quot;drag&quot;</span>);</span></span><br><span class="line"><span class="javascript">  drag.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ev = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> x = ev.clientX-<span class="built_in">this</span>.offsetLeft;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> y = ev.clientY-<span class="built_in">this</span>.offsetTop;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> ev = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> nowx= ev.clientX-x;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> nowy= ev.clientY-y;</span></span><br><span class="line"><span class="javascript">      drag.style.left = nowx + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">      drag.style.top = nowy + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.onmouseup = <span class="literal">null</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/fadafan/edit?html,output">view code</a></p>
<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#drag</span>&#123;</span></span><br><span class="line">      width: 40px;</span><br><span class="line">      height: 40px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      background-color: red;</span><br><span class="line"><span class="css">      <span class="selector-tag">cursor</span><span class="selector-pseudo">:pointer</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;drag&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">Drag</span>(<span class="params">name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.drag =  <span class="built_in">document</span>.getElementById(name);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.x=<span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.y=<span class="number">0</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  Drag.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> This = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.drag.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> ev = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line">      This.fnDown(ev);</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  Drag.prototype.fnDown = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> This = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.x = ev.clientX-<span class="built_in">this</span>.drag.offsetLeft;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.y = ev.clientY-<span class="built_in">this</span>.drag.offsetTop;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> ev = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line">      This.fnMove(ev);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onmouseup = <span class="built_in">this</span>.fnUp;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  Drag.prototype.fnMove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> nowx= ev.clientX-<span class="built_in">this</span>.x;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> nowy= ev.clientY-<span class="built_in">this</span>.y;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.drag.style.left = nowx + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">this</span>.drag.style.top = nowy + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  Drag.prototype.fnUp = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onmouseup = <span class="literal">null</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> drags = <span class="keyword">new</span> Drag(<span class="string">&#x27;drag&#x27;</span>);</span></span><br><span class="line">  drags.init();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/funudo/edit?html,output">view code</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>demo</tag>
        <tag>面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>用面向过程和面向对象方式写的一个tao标签卡demo</title>
    <url>/2016/10/25/a-tab-demo/</url>
    <content><![CDATA[<p>主要是需要多思考面向对象中this的应用。</p>
<a id="more"></a>
<h2 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.on</span>&#123;</span></span><br><span class="line">      background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#tab</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">      width: 400px;</span><br><span class="line">      height: 400px;</span><br><span class="line">      display: none;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#tab</span> <span class="selector-class">.block</span>&#123;</span></span><br><span class="line">      display: block;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oPrent = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;tab&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oMenu = oPrent.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oShow = oPrent.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;oMenu.length;i++)&#123;</span></span><br><span class="line">          oMenu[i].index = i;</span><br><span class="line"><span class="javascript">          oMenu[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;oMenu.length;j++)&#123;</span></span><br><span class="line"><span class="javascript">              oMenu[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">              oShow[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.className = <span class="string">&#x27;on&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            oShow[<span class="built_in">this</span>.index].className = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> nowShow = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> timmer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span>(nowShow&gt;=oMenu.length)&#123;</span></span><br><span class="line">            nowShow = 0;</span><br><span class="line">          &#125;</span><br><span class="line">          oMenu[nowShow].index = i;</span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;oMenu.length;j++)&#123;</span></span><br><span class="line"><span class="javascript">              oMenu[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">              oShow[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            oMenu[nowShow].className = <span class="string">&#x27;on&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            oShow[nowShow].className = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">          nowShow++;</span><br><span class="line">        &#125;,1000)</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tab&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;on&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block&quot;</span>&gt;</span>111111111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>222222222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>333333333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/pisiti/edit?html,output">view code</a></p>
<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><p>深刻理解this的使用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.on</span>&#123;</span></span><br><span class="line">      background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#tab</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">      width: 400px;</span><br><span class="line">      height: 400px;</span><br><span class="line">      display: none;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#tab</span> <span class="selector-class">.block</span>&#123;</span></span><br><span class="line">      display: block;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">Tab</span>(<span class="params">name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.oPrent = <span class="built_in">document</span>.getElementById(name);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.oMenu = <span class="built_in">this</span>.oPrent.getElementsByTagName(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.oShow = <span class="built_in">this</span>.oPrent.getElementsByTagName(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      Tab.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> This = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">this</span>.oMenu.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.oMenu[i].index = i;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.oMenu[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            This.change(<span class="built_in">this</span>);</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      Tab.prototype.change = <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="built_in">this</span>.oMenu.length;j++)&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.oMenu[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.oShow[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        obj.className = <span class="string">&#x27;on&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.oShow[obj.index].className = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      Tab.prototype.auto = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> nowShow = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> This = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> timmer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span>(nowShow&gt;=This.oMenu.length)&#123;</span></span><br><span class="line">            nowShow = 0;</span><br><span class="line">          &#125;</span><br><span class="line">          This.oMenu[nowShow].index = i;</span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;This.oMenu.length;j++)&#123;</span></span><br><span class="line"><span class="javascript">              This.oMenu[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="javascript">              This.oShow[j].className = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            This.oMenu[nowShow].className = <span class="string">&#x27;on&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            This.oShow[nowShow].className = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line">          nowShow++;</span><br><span class="line">        &#125;,1000)</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> tab = <span class="keyword">new</span> Tab(<span class="string">&#x27;tab&#x27;</span>);</span></span><br><span class="line">      tab.init();</span><br><span class="line">      tab.auto();</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tab&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;on&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block&quot;</span>&gt;</span>111111111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>222222222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>333333333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/sapudeh/edit?html,output">view code</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>demo</tag>
        <tag>面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>js中数组去重的方法</title>
    <url>/2016/10/12/array-unique/</url>
    <content><![CDATA[<p>在前端面试题中，一般会遇到一道关于array去重的面试题。简单点来说 ，就是找出不一样的，或者说排队一样的。那么我们就可以通过生活中的一些情景来思考这道题的解法。</p>
<h2 id="排队法"><a href="#排队法" class="headerlink" title="排队法"></a>排队法</h2><p>假如我们要表演一场千手观音的节目，我们需要高矮不一样的人来表演，于是在参选人员中，我们让他们按照高矮次序排队，一样高的就排除掉后面的那一个。<br>于是我们就得到了解法，先对数组进行排序，然后循环比较当前值和其后面那个值的是否相等，如果不相等，刚后面那个值认为是有效的。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> new_arr = [];</span><br><span class="line">arr = arr.sort();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(arr[i]!=arr[i+<span class="number">1</span>])&#123;</span><br><span class="line">    new_arr.push(arr[i])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(new_arr);</span><br></pre></td></tr></table></figure>
<h2 id="抓球法"><a href="#抓球法" class="headerlink" title="抓球法"></a>抓球法</h2><p>假如有一大排五颜六色的球，我们要从中每个颜色选择一个球出来，于是我们就可以这样选：准备一个口袋，每看到一个球，看一下这个球的颜色在袋子里面是不是已经装得有了，如果有，就不装了，如果没有，就把它装进去。<br>于是在js中得到解法，使用js中的indexOf来判断数组中的每一个元素是否已经在输出结果的新数组中：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> new_arr = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(new_arr.indexOf(arr[i])==-<span class="number">1</span>)&#123;</span><br><span class="line">    new_arr.push(arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(new_arr);</span><br></pre></td></tr></table></figure>
<h2 id="打卡法"><a href="#打卡法" class="headerlink" title="打卡法"></a>打卡法</h2><p>相当于我们上下班打卡一样，对于同一个人在某一个时间段内重复打卡，我们会只记录他的一次打卡记录。<br>于是在js，我们可以把相同的值认为是同一个值在多次出现，而我们可以把值转化为一个对象的属性，这样，某一个值一旦出现过，我们就为其完成“打卡”操作。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> new_arr = [];</span><br><span class="line"><span class="keyword">var</span> has = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(has[arr[i]]!== <span class="number">1</span>)&#123;</span><br><span class="line">    has[arr[i]]=<span class="number">1</span>;</span><br><span class="line">    new_arr.push(arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(new_arr);</span><br></pre></td></tr></table></figure>
<h2 id="点名法"><a href="#点名法" class="headerlink" title="点名法"></a>点名法</h2><p>有一份名单，上面的名字可能因为在制作表的时候造成了很多名字的重复，老师为了避免重复点名，他只好每点一次名，就看下这个名字是不是在之前出现过，如果没有，就点名，否时就不点了。<br>于是js的解决思路还是要用到indexOf来判断当前值是否在之前的位置出现过。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> new_arr = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(arr.indexOf(arr[i])==i)&#123;</span><br><span class="line">    new_arr.push(arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(new_arr);</span><br></pre></td></tr></table></figure>
<h2 id="飞走的小鸟"><a href="#飞走的小鸟" class="headerlink" title="飞走的小鸟"></a>飞走的小鸟</h2><p>假如我把数据从左往右按照次序看，前面出现过的相同的数字认为是同一只小鸟，而那个数字只是小鸟之前停留过的位置而已，所以我们只需要找到每一只小鸟最后停留的位置即可了。<br>解决方法来源于国外的一个人写的，<a href="http://www.shamasis.net/2009/09/fast-algorithm-to-find-unique-items-in-javascript-array/">参考链接</a>.<br>这个函通过双重循环，顶级中的一次循环，都通过次级的循环判断后面是否还有相同的值，如果有，次级继续循环，直到找到后面没有重复值的下一个顶级i的值，接下来顶级在新的i值基础上继续循环。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = [], l = <span class="built_in">this</span>.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;l; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>; j&lt;l; j++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>[i] === <span class="built_in">this</span>[j]) j = ++i;</span><br><span class="line">      a.push(<span class="built_in">this</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>centos下编译安装apache</title>
    <url>/2014/11/17/centos-apache/</url>
    <content><![CDATA[<h2 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h2><blockquote>
<p>centos6.5最小化安装/AWS centos</p>
</blockquote>
<h2 id="二-所需工具"><a href="#二-所需工具" class="headerlink" title="二.所需工具"></a>二.所需工具</h2><blockquote>
<p>apr-1.5.1<br>apr-util-1.5.4<br>httpd-2.4.10<br>pcre-8.36</p>
</blockquote>
<a id="more"></a>
<h2 id="三-安装步骤"><a href="#三-安装步骤" class="headerlink" title="三.安装步骤"></a>三.安装步骤</h2><h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h3><p>在centos最小化安装情况下，首先我们需要先安装以下几个包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install wget</span><br><span class="line">yum install gcc</span><br><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure>
<h3 id="2-下载软件包-这里我们把软件下载在-usr-local-src里面"><a href="#2-下载软件包-这里我们把软件下载在-usr-local-src里面" class="headerlink" title="2.下载软件包,这里我们把软件下载在/usr/local/src里面"></a>2.下载软件包,这里我们把软件下载在/usr/local/src里面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;mirrors.cnnic.cn&#x2F;apache&#x2F;httpd&#x2F;httpd-2.4.10.tar.gz</span><br><span class="line">wget http:&#x2F;&#x2F;mirrors.cnnic.cn&#x2F;apache&#x2F;&#x2F;apr&#x2F;apr-1.5.1.tar.gz</span><br><span class="line">wget http:&#x2F;&#x2F;mirrors.cnnic.cn&#x2F;apache&#x2F;&#x2F;apr&#x2F;apr-util-1.5.4.tar.gz</span><br><span class="line">wget ftp:&#x2F;&#x2F;ftp.csx.cam.ac.uk&#x2F;pub&#x2F;software&#x2F;programming&#x2F;pcre&#x2F;pcre-8.36.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="3-解压所有的软件包"><a href="#3-解压所有的软件包" class="headerlink" title="3.解压所有的软件包"></a>3.解压所有的软件包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf httpd-2.4.10.tar.gz</span><br><span class="line">tar -zxvf apr-1.5.1.tar.gz</span><br><span class="line">tar -zxvf apr-util-1.5.4.tar.gz</span><br><span class="line">tar -zxvf pcre-8.36.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="4-apache安装"><a href="#4-apache安装" class="headerlink" title="4.apache安装"></a>4.apache安装</h3><p>首先把pcre安装上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd pcre-8.36</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<p>然后把apr移动到httpd安装包里面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ..&#x2F;</span><br><span class="line">mv apr-1.5.1 httpd-2.4.10&#x2F;srclib&#x2F;apr</span><br><span class="line">mv apr-util-1.5.4 httpd-2.4.10&#x2F;srclib&#x2F;apr-util</span><br><span class="line">cd httpd-2.4.10</span><br></pre></td></tr></table></figure>
<p>配置httpd编译参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;configure --with-included-apr --enable-nonportable-atomics&#x3D;yes --with-z</span><br></pre></td></tr></table></figure>
<p>出奇的简单，因为默认就有 –enable-mods-shared=most ，模块化安装，以后自行到 httpd.conf 中决定是否开启模块，所以什么 –enable-deflate –enable-rewrite –enable-blablabla 等就完全不必要了。</p>
<p>默认安装的是 event mpm，如果要用 worker ，就需要–with-mpm=worker，或者干脆 –enable-mpms-shared=all，这样event、worker、prefork就会以模块化的方式安装，要用哪个就在 httpd.conf 里配置就好了</p>
<p>编译安装httpd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<p>软件已经默认安装到/usr/local/apache2里面了，对应的配置文件是conf/httpd.conf</p>
<h2 id="四-添加到系统服务和自启"><a href="#四-添加到系统服务和自启" class="headerlink" title="四.添加到系统服务和自启"></a>四.添加到系统服务和自启</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apachectl &#x2F;etc&#x2F;init.d&#x2F;httpd</span><br><span class="line">vi &#x2F;etc&#x2F;init.d&#x2F;httpd</span><br></pre></td></tr></table></figure>
<p>在首行 #!/bin/sh 下面加入两行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># chkconfig: 35 85 15</span><br><span class="line"># description: Activates&#x2F;Deactivates Apache 2.4.10</span><br></pre></td></tr></table></figure>
<p>加入开机自启</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig --add httpd</span><br><span class="line">chkconfig httpd on</span><br></pre></td></tr></table></figure>
<p>接下来我们便可以启动apache了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service httpd start</span><br></pre></td></tr></table></figure>
<p>打开浏览器，我们应该能够看到大大的<code>It works!</code>几个字，表明我们已经正常安装了。</p>
<h2 id="五-常见问题"><a href="#五-常见问题" class="headerlink" title="五.常见问题"></a>五.常见问题</h2><h3 id="1-apache已经正常安装了，但外网无法访问"><a href="#1-apache已经正常安装了，但外网无法访问" class="headerlink" title="1.apache已经正常安装了，但外网无法访问"></a>1.apache已经正常安装了，但外网无法访问</h3><p>这是因为在默认情况，ceontos的防火墙关闭了80端口，开启方法如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;sbin&#x2F;iptables -I INPUT -p tcp --dport 80 -j ACCEPT #允许80端口</span><br><span class="line">&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;iptables save #保存</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;iptables restart #重启防火墙</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>apache</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>centos编译安装mysql</title>
    <url>/2014/11/18/centos-install-mysql/</url>
    <content><![CDATA[<h2 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h2><blockquote>
<p>centos6.5最小化安装/AWS centos</p>
</blockquote>
<h2 id="二-所需工具"><a href="#二-所需工具" class="headerlink" title="二.所需工具"></a>二.所需工具</h2><blockquote>
<p>cmake-3.1.0-rc2<br>mysql-5.7.4-m14.tar.gz</p>
</blockquote>
<a id="more"></a>
<h2 id="三-安装步骤"><a href="#三-安装步骤" class="headerlink" title="三.安装步骤"></a>三.安装步骤</h2><h3 id="1-下载所需工具-解压"><a href="#1-下载所需工具-解压" class="headerlink" title="1.下载所需工具,解压"></a>1.下载所需工具,解压</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;downloads.mysql.com&#x2F;archives&#x2F;get&#x2F;file&#x2F;mysql-5.7.4-m14.tar.gz</span><br><span class="line">wget http:&#x2F;&#x2F;www.cmake.org&#x2F;files&#x2F;v3.1&#x2F;cmake-3.1.0-rc2.tar.gz</span><br><span class="line">tar -zxvf mysql-5.7.4-m14.tar.gz</span><br><span class="line">tar -zxvf cmake-3.1.0-rc2.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="2-安装cmake"><a href="#2-安装cmake" class="headerlink" title="2.安装cmake"></a>2.安装cmake</h3><p>因为从mysql 5.5形如，需要使用cmake方便进行安装了，所以我们首先安装cmake</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd cmake-3.1.0-rc2</span><br><span class="line">.&#x2F;bootstrap </span><br><span class="line">gmake</span><br><span class="line">gmake install</span><br></pre></td></tr></table></figure>
<h3 id="3-安装mysql"><a href="#3-安装mysql" class="headerlink" title="3.安装mysql"></a>3.安装mysql</h3><h4 id="创建用户，组和目录"><a href="#创建用户，组和目录" class="headerlink" title="创建用户，组和目录"></a>创建用户，组和目录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">groupadd mysql #添加组</span><br><span class="line">useradd mysql -g mysql -s &#x2F;sbin&#x2F;nologin #添加新用户，禁止登录shell</span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;mysql #创建安装目录</span><br><span class="line">mkdir &#x2F;var&#x2F;mysql</span><br><span class="line">mkdir &#x2F;var&#x2F;mysql&#x2F;data #创建数据目录</span><br><span class="line">chown -R mysql:mysql &#x2F;usr&#x2F;local&#x2F;mysql&#x2F; </span><br><span class="line">chown -R mysql:mysql &#x2F;var&#x2F;mysql&#x2F;data #予数据存放目录权限</span><br></pre></td></tr></table></figure>
<h4 id="编译安装mysql"><a href="#编译安装mysql" class="headerlink" title="编译安装mysql"></a>编译安装mysql</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd mysql-5.7.4</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F; -DMYSQL_UNIX_ADDR&#x3D;&#x2F;tmp&#x2F;mysqld.sock -DMYSQL_USER&#x3D;mysql -DDEFAULT_CHARSET&#x3D;utf8 -DDEFAULT_COLLATION&#x3D;utf8_general_ci -DWITH_INNOBASE_STORAGE_ENGINE&#x3D;1 -DWITH_ARCHIVE_STORAGE_ENGINE&#x3D;1 -DWITH_BLACKHOLE_STORAGE_ENGINE&#x3D;1 -DWITH_PERFSCHEMA_STORAGE_ENGINE&#x3D;1 -DWITH_READLINE&#x3D;1 -DWITH_DATADIR&#x3D;&#x2F;var&#x2F;mysql&#x2F;data&#x2F;  -DWITH-TCP_PORT&#x3D;3306 -DENABLE_DOWNLOADS&#x3D;1</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<h4 id="初始化安装"><a href="#初始化安装" class="headerlink" title="初始化安装"></a>初始化安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +x scripts&#x2F;mysql_install_db</span><br><span class="line">scripts&#x2F;mysql_install_db --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql --datadir&#x3D;&#x2F;var&#x2F;mysql&#x2F;data --user&#x3D;mysql </span><br></pre></td></tr></table></figure>
<h4 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp support-files&#x2F;my-medium.cnf &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;my.cnf </span><br></pre></td></tr></table></figure>
<p>修改my.cnf参数，没有则加入如下： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql #（不配置的话默认为$PREFIX_DIR）</span><br><span class="line">datadir &#x3D; &#x2F;var&#x2F;mysql&#x2F;data #（不配置的话默认为$PREFIX_DIR&#x2F;data）</span><br><span class="line">log-error &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysql_error.log #（不配置的话默认为$PREFIX_DIR&#x2F;data&#x2F;$hostname.err）</span><br><span class="line">pid-file &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysql.pid #（不配置的话默认为$PREFIX_DIR&#x2F;data&#x2F;$hostname.pid）</span><br><span class="line">user &#x3D; mysql</span><br><span class="line">tmpdir &#x3D; &#x2F;tmp #（不配置的话默认为&#x2F;tmp）</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>centos编译安装php</title>
    <url>/2014/11/17/centos-install-php/</url>
    <content><![CDATA[<h2 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h2><blockquote>
<p>centos6.5最小化安装/AWS centos</p>
</blockquote>
<h2 id="二-所需工具"><a href="#二-所需工具" class="headerlink" title="二.所需工具"></a>二.所需工具</h2><blockquote>
<p>php-5.5.5</p>
</blockquote>
<a id="more"></a>
<h2 id="三-安装步骤"><a href="#三-安装步骤" class="headerlink" title="三.安装步骤"></a>三.安装步骤</h2><h3 id="1-编译安装php环境需要的devel包"><a href="#1-编译安装php环境需要的devel包" class="headerlink" title="1.编译安装php环境需要的devel包"></a>1.编译安装php环境需要的devel包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install libxml2-devel gd-devel libmcrypt-devel libcurl-devel openssl-devel</span><br></pre></td></tr></table></figure>
<h3 id="2-下载，解压php"><a href="#2-下载，解压php" class="headerlink" title="2.下载，解压php"></a>2.下载，解压php</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget http:&#x2F;&#x2F;us3.php.net&#x2F;get&#x2F;php-5.5.5.tar.gz&#x2F;from&#x2F;cn2.php.net&#x2F;mirror</span><br><span class="line">tar -xvf php-5.5.5.tar.gz</span><br><span class="line">cd php-5.5.5</span><br></pre></td></tr></table></figure>
<h3 id="3-设置编译参数-安装"><a href="#3-设置编译参数-安装" class="headerlink" title="3.设置编译参数,安装"></a>3.设置编译参数,安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;configure --with-apxs2&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apxs --disable-cli --enable-shared --with-libxml-dir --with-gd --with-openssl --enable-mbstring --with-mcrypt --with-mysqli --with-mysql --enable-opcache --enable-mysqlnd --enable-zip --with-zlib-dir --with-pdo-mysql --with-jpeg-dir --with-freetype-dir --with-curl --without-pdo-sqlite --without-sqlite3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<p>我已经尽量的在参数上做了精简，用以上参数编译安装好的 php 运行 wordpress, joomla, ip board 等常见的博客、论坛程序都是没有问题的，因为有了 –disable-cli，所以就没法 make test 了，安装好以后也没法 php -v 了。安装吧：</p>
<h3 id="4-整合php-apache"><a href="#4-整合php-apache" class="headerlink" title="4.整合php apache"></a>4.整合php apache</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp php.ini-production &#x2F;usr&#x2F;local&#x2F;lib&#x2F;php.ini</span><br><span class="line">vi &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F;httpd.conf</span><br></pre></td></tr></table></figure>
<p>在httpd.conf里面添加如下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .php</span><br><span class="line">AddType application&#x2F;x-httpd-php-source .phps</span><br><span class="line">#应该将以上两句添加在其他AddType之后。</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadModule php5_module modules&#x2F;libphp5.so</span><br><span class="line">#上面那行可能在编译安装 php 的过程中已经由系统自动添加了</span><br><span class="line">&lt;FilesMatch \.php$&gt;</span><br><span class="line">	SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure>
<p>接下来可以重启php查看是否安装成功了。</p>
<p>我们可以在apache默认目录下面新建一个php文件测试一下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;usr&#x2F;local&#x2F;apache2&#x2F;htdocs&#x2F;php.php</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;php is OK&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>清空微信浏览器缓存</title>
    <url>/2016/03/29/clean-weixin-webview-local-storage/</url>
    <content><![CDATA[<p>微信的流行，让我们经常会在微信中打开一些网页，但因为微信的webview是内置的浏览器，没有给我们直接进行浏览器设置的地方，比如清理缓存之类的。</p>
<a id="more"></a>
<p>经常在做微信网页开发的时候，在调试阶段，这种缓存是非常令人头痛的。</p>
<p>还有就是浏览过一些网页之后，希望能够清理掉cookie，比如登录信息之类的。</p>
<p>这些尝试过在应用设置里面清理微信的缓存，用安全工具清理掉缓存，都办法清理掉。</p>
<p>一个解决办法就是我们自己做开发的，可以给静态资源添加一个时间戳，可以解决一部分问题。</p>
<p>一个就是因为andorid版本的微信是内置的QQ浏览器x5的内核，我们可以通过在微信中打开QQ浏览器的调试页面：<code>http://debugx5.qq.com</code>,在里面找到清理的选项，如下图，然后勾选我们要清理的内容，点清理就可以了。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/16-3-29/36573124.jpg"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>微信</tag>
        <tag>移动开发</tag>
      </tags>
  </entry>
  <entry>
    <title>js中闭包变量的问题</title>
    <url>/2016/10/14/closure-bind-vars/</url>
    <content><![CDATA[<p>我们都知道，在js中闭包会一直保持对着包含函数中的变量的引用，哪怕是在其它地方返回了闭包函数，其外部函数中的变量也不会销毁的。根据这个特性，我们引用一个面试题来深入观察一下：</p>
<a id="more"></a>
<p>如何定义一个count函数，每次调用的时候，都返回这个函数被调用的次数，除了count外，不能再有其它全局变量。</p>
<p>这道题主要也就是考察闭包中变量引用及作用域链的问题，根据闭包的特性，于是我们可以得到这样的一个函数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> count=(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;这是你第&quot;</span>+ ++i + <span class="string">&quot;次调用我&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br><span class="line">count();</span><br><span class="line">count();</span><br></pre></td></tr></table></figure>
<p>我们通过定义匿名函数来减少一次函数命名，闭包中存在对i的调用，所以函数虽然是返回了闭包函数，但其对i的引用一直存在，所以外包函数中的变量一直存在。</p>
<p>当时， 如果不考虑函数命名的问题，我们也可以这样写：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count_fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;这是你第&quot;</span>+ ++i + <span class="string">&quot;次调用我&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> count = count_fun();</span><br><span class="line">count();</span><br><span class="line">count();</span><br></pre></td></tr></table></figure>
<p>扩展一下，我们都知道函数也有是属性的，我们在做动画和定时器的时候，可能会经常用到这种函数属性来方法来避免定时器干扰的问题。针对这个问题，我们也同样可以通过只使用一个变量，然后通过增加属性的方法来实现。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;这是你第&quot;</span>+ ++count.i +<span class="string">&quot;次调用&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">count.i=<span class="number">0</span>;</span><br><span class="line">count();</span><br><span class="line">count();</span><br></pre></td></tr></table></figure>
<p>或者直接通过对象的属性来实现也可以</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> count = &#123;</span><br><span class="line">  i:<span class="number">0</span>,</span><br><span class="line">  add:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;这是您第&quot;</span>+ ++<span class="built_in">this</span>.i +<span class="string">&quot;次调用&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">count.add();</span><br><span class="line">count.add();</span><br><span class="line">count.add();</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>js中闭包变量问题的解决方法</title>
    <url>/2016/10/10/closure-vars/</url>
    <content><![CDATA[<p>在js中，作用域的问题算还是比较容易理解的，之前也写过一篇博文<a href="http://blog.linxiaodong.com/2016/05/18/scop/">《javascript中的词法作用域》</a>。但js的作用域规则在遇到闭包的时候可能就会出现一些问题了。最经典的就是for变量声明的问题了。</p>
<a id="more"></a>

<p>首先我们有html和js的代码片段</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;showClick&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品一<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品三<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>产品四<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">  showClick[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/mezutodowe/edit?html,js,console,output">view code</a>;<br>这个就是很经典的一个问题，当我们点击的时候，控制台输出的全部是4。出现这个问题的最根本的原因就是：</p>
<h3 id="闭包只能取得包含函数中任何变量的最后一个值。"><a href="#闭包只能取得包含函数中任何变量的最后一个值。" class="headerlink" title="闭包只能取得包含函数中任何变量的最后一个值。"></a>闭包只能取得包含函数中任何变量的最后一个值。</h3><p>我们从词法作用域来分析这一句话，这个闭包中的i,他通过他的执行环境来获取，也就是for那一层，即全局变量，全局变量中的i是一个静态变量，在for执行完毕之后，他的值为4,也就是接下来我们执行onclick操作时的最后一个值。</p>
<p>之所以利用词法作用域来理解我认为有助于让我们更容易来理解解决这个问题的几种方案。</p>
<h2 id="接下来扒扒网上常用的一些解决方法"><a href="#接下来扒扒网上常用的一些解决方法" class="headerlink" title="接下来扒扒网上常用的一些解决方法"></a>接下来扒扒网上常用的一些解决方法</h2><h3 id="创建一个匿名来立即执行"><a href="#创建一个匿名来立即执行" class="headerlink" title="创建一个匿名来立即执行"></a>创建一个匿名来立即执行</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params">m</span>)</span>&#123;</span><br><span class="line">    showClick[m].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(m);&#125;</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>从词法作用域来看，闭包中的m来源于匿名函数的实参，而我们知道，函数的参数是按值传递而非按照引用传递的，所以这里得到的m就是每次循环的i的实际值。</p>
<p>同理</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">  showClick[i].onclick=(<span class="function"><span class="keyword">function</span> (<span class="params">m</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(m);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者可以不传参数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tem = i;</span><br><span class="line">    showClick[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(tem);&#125;</span><br><span class="line">  &#125;)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">  showClick[i].onclick=(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tem = i;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(tem);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原理都是一样的，强制让闭包在匿名函数中去找值。</p>
<h2 id="通过给对象增加属性"><a href="#通过给对象增加属性" class="headerlink" title="通过给对象增加属性"></a>通过给对象增加属性</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">    showClick[i].i = i;</span><br><span class="line">    showClick[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">this</span>.i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的showClick是对象，所以我们是可以给为增加一个属性的，而对象是引用类型的，所以在增加的属性的时候，他的值已经被固定了。</p>
<h2 id="通过外部函数来执行"><a href="#通过外部函数来执行" class="headerlink" title="通过外部函数来执行"></a>通过外部函数来执行</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">returnShow</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">    showClick[i].i = i;</span><br><span class="line">    showClick[i].onclick=returnShow(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>就这相当于避开了闭包，思路同1一样的，函数的参数是按值传递的。</p>
<h2 id="ES6的let方法"><a href="#ES6的let方法" class="headerlink" title="ES6的let方法"></a>ES6的let方法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">  showClick[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>于是我们思考一下，既然函数参数是按值传递，加上作用域链，我们可不可以这样直接通过参数来缓存变量呢?</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> showClick = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;showClick.length;i++)&#123;</span><br><span class="line">  showClick[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>答案是否定的，因为onclick事件传递的参数是event事件，所以打印的实际上是event事件，而不是i的值。</p>
<p>那么对于setTimeOut我们则可以通过这种方式来进行解决</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;,<span class="number">10</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不出所料，以上代码会全部打印出5出来。<br>我们可以采用上面的匿名函数的方法来解决：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;,<span class="number">10</span>)</span><br><span class="line">    &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> tem = i;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(tem)</span><br><span class="line">    &#125;,<span class="number">10</span>)</span><br><span class="line">    &#125;)()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以及我们可以直接通过函数传参的方式来实现：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(a(i),<span class="number">10</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>empty value</title>
    <url>/2016/03/29/empty-value/</url>
    <content><![CDATA[<p>在对echsop进行二开的时候，我很简单地写了一句；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$shop_style &#x3D; empty(intval($_POST[&#39;shop_style&#39;])) ? 1:intval($_POST[&#39;shop_style&#39;]);</span><br></pre></td></tr></table></figure>
<p>结果一打开页面就报错：</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Fatal error: Can&#39;t use function return value in write context in ...index.php on line 503</span><br></pre></td></tr></table></figure>
<p>怎么看这代码都没有问题呀，上网搜索才发现，对于<code>empty()</code>函数，有如下描述</p>
<blockquote>
<p>Note: empty() only checks variables as anything else will result in a parse error. In other words, the following will not work: empty(trim($name)).</p>
</blockquote>
<p>empty() 只检测变量，检测任何非变量的东西都将导致解析错误!</p>
<p>所以说上面那句正确的写法应该是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$shop_style &#x3D; empty($_POST[&#39;shop_style&#39;]) ? 1:intval($_POST[&#39;shop_style&#39;]);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LAMP</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>ecshop</tag>
        <tag>二次开发</tag>
      </tags>
  </entry>
  <entry>
    <title>学会聚焦生活，不要把微博当成书来读</title>
    <url>/2013/05/23/focus-life/</url>
    <content><![CDATA[<p>以前学习到“聚焦”这个词是一两年前大量阅读书籍，听讲座的时候，因为听得太多了，正处于迷茫之中，后来就了解到“聚焦”这个词，我们需要学习的东西太多太多了，而我们必须要选择性地选择自己最需要的，最重要的东西来学习。</p>
<a id="more"></a>
<p>而这两天，关于“聚焦”又感悟到了许多，其实我们的生活也需要聚焦。尤其是在这个信息化大爆炸的时代，围绕在我们身边的互联网信息太多太多了。每天我们不停地刷着微博，刷着空间，然而一天下来，我们对这个世界真的了解到了多少吗？我们真的是学习到了许多有用的知识吗？前两天看到一句话特别有感触，“不要把微博当成书来读”。</p>
<p>而在这里面更重要的是，我们的关注点在不断地慢慢转移，由我们的亲人，朋友，同学开始慢慢转移到互联网上那一个个从未曾谋达面的名人们。这里摘录李楠kkk很有意义的一段话：李开复的喧哗，远不及浅苍南的美</p>
<p>我们在微博上关注各种公知：从李开复，姚晨到薛蛮子。也关心他们的各种话题：Facebook<br>IPO，香港的小黄鸭和关锦鹏的八卦。</p>
<p>问题是，我们一生只有有限的时间。注意力花在这里，就不会花在那里。我们一生也只有有限的精力。Robin Dunbar说你只能和150人维持稳定的社交关系。再多一个，就要放弃一个。</p>
<p>把时间和精力花在可能一辈子都不会谋面的人上，去关心可能一辈子都和自己没有交集的事——我们为此付出了什么代价？<br>我们心中都有一个浅苍南：可爱温柔的邻家女孩。同校，同单位，或者同小区。认识，却并不熟悉。她的电话就躺在地址簿里，却没理由联系。</p>
<p>我们也都有父母亲戚，三五死党。无论是高中玩伴，还是大学室友。他们也躺在地址簿里面。却在这个“信息过载”的世界中，被我们越来越疏远。</p>
<p>而其实，这些人才是真正影响我们生活的“社交网络”。他们而非公知，才会在你失恋的时侯陪你聊天；在你想high的时侯凑个酒局；在你需要帮助的时侯，伸出援手。</p>
<p>和颠倒众生的汤唯比较，“邻家女孩”的美丽，才更可触摸。和腰缠万贯的任志强比较？父母的500块钱，才更容易借到。<br>我们不应更关注他们吗？哪怕只是一张略显忧郁的自拍。或者小叔孩子摇晃学步的照片。</p>
<p>让我们把心收回来，聚焦在我们自己的生活之上，这个世界太大，我们走不完，这个世界太远，我们看不完，更多地关心自己身边有朋友，你会得到温暖的回馈。更多地问候自己身边有朋友，你会得到无尽的帮助，更多地与自己身边的朋友沟通，你会发现有朋友一起走的路才更踏实。</p>
<p>离开校园，我们步入了社会的这个大圈子，我们拥有了另外一个圈子，我们的人际关系发生的巨大的变化。我们可以在一家公司工作三五年，我们可以拥有无数的客户资源，然而，我们不要忘记，昔日的同学朋友可是日日夜夜陪伴着我们走过三年，五年，甚至是十多年，而在这里面的每一天，我们都是有着最单纯的友谊，这个时间，我们是最简单的，然而，当我们融入无数争斗的这个大社会后，我们却开始把这曾经最简单的感情给忽略了。</p>
<p>出差到一个他乡异地，举目无亲，独自领略着这座城市的美景时，却不知道昔日的朋友就在你入住酒店背后的那一个小区；公司迅速发展，谋求合作伙伴，苦苦寻觅，价格战杀得头破血流，却不知道曾经的某位同学却是可以给你提供最佳的资源，最优的价格；想带上女朋友给她来一场最浪费的旅游，花尽心思规划无数线路终觉不满意，却不知这对于旅行社那曾经的同学来说只是小菜一碟……如果我们有着紧密的100个同学的网络，那么我们可能分布在几十个行业，几址个地方，拥有几十种不同资源，而这些，难道对于我们的生活，学习，工作不是最大的帮助吗？</p>
<p>细细想一下，好像在成都的同学就不少的，但认真一列，还真不知道到底有哪些在成都，闲来无聊的时候，真不知道还有谁的电话可以打过去问候一声。似乎对于曾经的同学朋友们来说，突然的一个电话，只是在告诉他，我是“无事不登三宝殿”的。</p>
<p>真的很想问候一下大家，知子湾村小学的同学们，临津小学的同学们，回龙中学的同学们，城北中学的同学们，电子科大的同学，你们现在都还过得好吧？不知道还有多少人还能记得我，而我真心希望能够有一种最轻快的方式把大家联系起来，如果把我们的人生写成一本书，那么我相信曾经的校园生活是我们一生中最清新的一个篇章。今天，当我们只能聊着工作，婚姻，金钱的时候，我相信，和我们曾经一起走过的同学们在一起，我们依然还可以聊起当年谁又受惩罚了，谁又偷偷爱上谁了，谁的篮球打得最棒了，谁又偷偷溜出去上网去了…这些真正属于我们自己的八卦新闻，这些真正属于我们自己最真实的生活。</p>
<p>朋友们，请别把我们的联系方式只是当成一种珍藏，请别把QQ的在线只是当成一种状态，请别把昨天的生活只是当成一种回忆，人生的路很长，有你有我的陪伴，我们才将不孤独，我们才将走得更远！</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>使用git bisect进行二分法定位错误的提交</title>
    <url>/2017/10/03/git-bisect/</url>
    <content><![CDATA[<p>使用场景来源于曾经的一次代码合并，代码合并之后，控制台报错，而且不是显性的错误，很难从代码层面查找到问题，测试了几次都没办法定位到问题的所在位置。无奈，只好进行回退对比了，这一次合并一共有十来次提交，决定回退看看是哪一次提交产生了对比，然后做修改对比。</p>
<p>当然，很自然的就是采用二分法的回退，先回退到中间的那一个版本，看问题是否存在，这样每回退一次，都可以减少一半的提交记录，十来次的提交，很快就可以定位到错误的那一次提交了。</p>
<p>而对于强大的git，在这一次的经历中，确实是没有想到git还有<code>git bisect</code>这么方便的一个命令，虽然它和<code>git flow</code>工具一样，并不是什么强大的命令，但在这关键的时候，确实能减少我们的工作量，十多次的提交还好，手动回退也很方便，但如果次数很多，再自己去记录，计算中间那一次的提交，就显得不是那么方便了。</p>
<p>于是，顺便安利一下这个命令，当工作中再次遇到类似需要定位错误的提交时，就可以更加得心应手了。</p>
<a id="more"></a>
<p>这里我创建了一个项目 <code>git@github.com:buxuku/git-bisect.git</code>，并进行了10次的提交，运行<code>git log</code>可以看到10次的提交记录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">commit 9551544db6aec178b064eeaba33389ea878d5979</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:43:21 2017 +0800</span><br><span class="line"></span><br><span class="line">    v10</span><br><span class="line"></span><br><span class="line">commit 4c8d52d249c16908c1ce7aaef00592385cb5e0a2</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:42:44 2017 +0800</span><br><span class="line"></span><br><span class="line">    v9</span><br><span class="line"></span><br><span class="line">commit fe97e12f750bfd427b815fb062fddb8895e66232</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:42:28 2017 +0800</span><br><span class="line"></span><br><span class="line">    v8</span><br><span class="line"></span><br><span class="line">commit 734216f2df46550948e1f5ff1161d5d6b6860b10</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:42:09 2017 +0800</span><br><span class="line"></span><br><span class="line">    v7</span><br><span class="line"></span><br><span class="line">commit 9b715e9f8f3775242c0abd0cb5fd6f65b6d6626c</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:41:52 2017 +0800</span><br><span class="line"></span><br><span class="line">    v6</span><br><span class="line"></span><br><span class="line">commit ed63a6a71bb28939e498f75cbdf27fb22c01ae72</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:40:06 2017 +0800</span><br><span class="line"></span><br><span class="line">    v5</span><br><span class="line"></span><br><span class="line">commit c025e1de4c12cca9b245ed33844ebaa040fe6e27</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:39:45 2017 +0800</span><br><span class="line"></span><br><span class="line">    v4</span><br><span class="line"></span><br><span class="line">commit 1d6abe13c044653ac4e59fce77159f70c1c5b06e</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:39:27 2017 +0800</span><br><span class="line"></span><br><span class="line">    v3</span><br><span class="line"></span><br><span class="line">commit c3041bd4987b39feaf98d5efaa0690ed35c31c23</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:39:02 2017 +0800</span><br><span class="line"></span><br><span class="line">    v2</span><br><span class="line"></span><br><span class="line">commit e7bb6dd85abe705972ac4e5ed1626c9893a97627</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:38:15 2017 +0800</span><br><span class="line"></span><br><span class="line">    v1</span><br></pre></td></tr></table></figure>
<p>假设在<code>v1</code>版本我们确认是没问题的版本，在<code>v10</code>版本是有问题的版本，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect start #开始执行查找</span><br><span class="line">git bisect good e7bb6dd85abe705972ac4e5ed1626c9893a97627 #我们可以确认没问题的最新的一次提交</span><br><span class="line">git bisect bad 9551544db6aec178b064eeaba33389ea878d5979  #我们可以确认的有问题的一次提交</span><br></pre></td></tr></table></figure>
<p>执行后可以看到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bisecting: 4 revisions left to test after this (roughly 2 steps)</span><br><span class="line">[ed63a6a71bb28939e498f75cbdf27fb22c01ae72] v5</span><br></pre></td></tr></table></figure>
<p>现在head指向了v5这个版本，我们进行测试，发现这个版本是正常的，我们给这个版本打上bisect结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect good ed63a6a71bb28939e498f75cbdf27fb22c01ae72</span><br></pre></td></tr></table></figure>
<p>这个时候版本指向了<code>v7</code>这一次的提交，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bisecting: 2 revisions left to test after this (roughly 1 step)</span><br><span class="line">[734216f2df46550948e1f5ff1161d5d6b6860b10] v7</span><br></pre></td></tr></table></figure>
<p>我们进行测试，发现这一次提交是有问题的，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect bad 734216f2df46550948e1f5ff1161d5d6b6860b10</span><br></pre></td></tr></table></figure>
<p>这个时候版本指向了<code>v6</code>,继续测试，发现<code>v6</code>也是有问题的一次提交</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect bad 9b715e9f8f3775242c0abd0cb5fd6f65b6d6626c</span><br></pre></td></tr></table></figure>
<p>执行到这一步， 我们已经定位到的错误的那一次提交了，同时git也给出了我们结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9b715e9f8f3775242c0abd0cb5fd6f65b6d6626c is the first bad commit</span><br><span class="line">commit 9b715e9f8f3775242c0abd0cb5fd6f65b6d6626c</span><br><span class="line">Author: 林晓东 &lt;buxuku@gmail.com&gt;</span><br><span class="line">Date:   Tue Oct 10 15:41:52 2017 +0800</span><br><span class="line"></span><br><span class="line">    v6</span><br><span class="line"></span><br><span class="line">:100644 100644 901b26927b75f2a338d8004b3953cc4abe1d6a82 39e1bf998f9a8945cbc08b293d4a759aec15b628 M      README.md</span><br></pre></td></tr></table></figure>
<p>表明这是一次有问题的提交。</p>
<p>当然，我们不应该在这一版本中进行修改，我们应该找到问题所在，然后在最新的版本中进行该问题的修复。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect reset #退出二分查找</span><br></pre></td></tr></table></figure>
<p>在使用这个命令的时候，我们还可以通过<code>git bisect log &gt; filename</code>来把我们整个查找的过程输出到一个日志文件中，方便我们查看整个过程，当然，它还有一个更好的用处，就是配合<code>git bisect replay</code>来修正我们多次查找当中的错误标记。</p>
<p>比如我们有几十次的提交中，在经过多次二分查找之后，突然不小心把一个错误的提交标记成了正确的提交，而又不希望从头再来，那么就可以把这个过程输出到日志文件中，然后编辑日志文件，再进行<code>replay</code>即可。</p>
<p>重复上面的二分过程，最后输出日志文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect log &gt; log.txt</span><br></pre></td></tr></table></figure>
<p>打开这个日志文件，可以看到我们的记录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect start</span><br><span class="line"># good: [e7bb6dd85abe705972ac4e5ed1626c9893a97627] v1</span><br><span class="line">git bisect good e7bb6dd85abe705972ac4e5ed1626c9893a97627</span><br><span class="line"># bad: [9551544db6aec178b064eeaba33389ea878d5979] v10</span><br><span class="line">git bisect bad 9551544db6aec178b064eeaba33389ea878d5979</span><br><span class="line"># good: [ed63a6a71bb28939e498f75cbdf27fb22c01ae72] v5</span><br><span class="line">git bisect good ed63a6a71bb28939e498f75cbdf27fb22c01ae72</span><br><span class="line"># bad: [734216f2df46550948e1f5ff1161d5d6b6860b10] v7</span><br><span class="line">git bisect bad 734216f2df46550948e1f5ff1161d5d6b6860b10</span><br><span class="line"># bad: [9b715e9f8f3775242c0abd0cb5fd6f65b6d6626c] v6</span><br><span class="line">git bisect bad 9b715e9f8f3775242c0abd0cb5fd6f65b6d6626c</span><br><span class="line"># first bad commit: [9b715e9f8f3775242c0abd0cb5fd6f65b6d6626c] v6</span><br></pre></td></tr></table></figure>
<p>假如我们在<code>v6</code>那一次标记是出错了，应该是一次正确的提交，我们删除v6开始的代码，保存之后，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect replay log.txt</span><br><span class="line">Bisecting: 2 revisions left to test after this (roughly 1 step)</span><br><span class="line">[734216f2df46550948e1f5ff1161d5d6b6860b10] v7</span><br></pre></td></tr></table></figure>
<p>这个时候自动重播到了<code>v7</code>这一次的二分步骤。接下来就可以继续进行标记查找了。</p>
<p>来点恶作剧？既然我们可以自己编辑这个log文件，那么如果我这样编辑它：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect start</span><br><span class="line"># good: [e7bb6dd85abe705972ac4e5ed1626c9893a97627] v1</span><br><span class="line">git bisect good e7bb6dd85abe705972ac4e5ed1626c9893a97627</span><br><span class="line"># bad: [9551544db6aec178b064eeaba33389ea878d5979] v10</span><br><span class="line">git bisect bad 9551544db6aec178b064eeaba33389ea878d5979</span><br><span class="line"># bad: [ed63a6a71bb28939e498f75cbdf27fb22c01ae72] v5</span><br><span class="line">git bisect bad ed63a6a71bb28939e498f75cbdf27fb22c01ae72</span><br><span class="line"># good: [734216f2df46550948e1f5ff1161d5d6b6860b10] v7</span><br><span class="line">git bisect good 734216f2df46550948e1f5ff1161d5d6b6860b10</span><br></pre></td></tr></table></figure>
<p>我认为第一次提交是有问题的，第五次提交是有问题的，第七次提交是正常的，第十次提交又是有问题的，然后我们<code>replay</code>会怎样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git bisect replay log.txt</span><br><span class="line">Some good revs are not ancestor of the bad rev.</span><br><span class="line">git bisect cannot work properly in this case.</span><br><span class="line">Maybe you mistook good and bad revs?</span><br></pre></td></tr></table></figure>
<p>显然，它认为这个是有问题的…</p>
<p>更多命名可以参考 <a href="https://git-scm.com/docs/git-bisect">git-bisect</a></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>利用gulp,browser-sync,workspace更快捷地进行前端开发</title>
    <url>/2016/05/04/gulp-browser-sync-workspace/</url>
    <content><![CDATA[<p>做前端开发的朋友，也许就像我一样，键盘上面的ctrl键和s健估计是磨损是严重的了。因为我们要不断地编辑器中写完代码，然后ctrl+s,接着再浏览器中按下f5刷新查看效果。不断地重复这样辛勤的工作。</p>
<a id="more"></a>
<p>之前用过chrome的一个插件，liveReload,可以实现代码保存之后，自动刷新浏览器的功能。但有一个缺点就是要在chrome中和sublime text中都要安装插件。</p>
<p>后面使用了gulp之后，发现了一个更加NB的node模块，browser-sync，只需要安装这样一个模块，不用在浏览器中和编辑器中再安装插件了，而且自带一个静态服务器，我们纯前端的代码就可以不依赖其它服务环境了，当然，它也可以通过代理的方式，处理我们其它服务环境下面的代码。同时支持跨浏览器，包括手机浏览器，以及同步在多个浏览器上面响应点击，滚动等等事件。一次保存，多处自动刷新。</p>
<p>整个安装过程也是比较简单的，这里大致记录一下：</p>
<p>首先，定位到我们项目的文件夹，运行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure>
<p>这样通过package.json的方式来管理我们项目的依赖包。</p>
<p>接下来输入我们项目的相关信息 比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name: (browsersync) </span><br><span class="line">version: (1.0.0) </span><br><span class="line">description: </span><br><span class="line">entry point: (gulpfile.js) </span><br><span class="line">test command: </span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">Is this ok? (yes) </span><br></pre></td></tr></table></figure>
<p>这里需要注意的两点是：1.项目名字不能用我们要安装依赖模块的名字，比如我们接下来要安装browser-sync,而我们把项目的名字也写成browser-sync的话，那么我们安装broser-sync的时候，可能会报下面这样的错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Refusing to install browser-sync as a dependency of itself</span><br></pre></td></tr></table></figure>
<p>2.entry point的入口文件写成gulpfile.js，因为我们要通过gulp来进行自动化构建。</p>
<p>这个时候我们项目下面就会生成一个package.json文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;browsersync&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;browser-sync demo&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;gulpfile.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;buxuku&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>安装gulp,为了防止gulp升级而导致的一系列的问题，我们不采用全局的方式安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install gulp --save-dev</span><br></pre></td></tr></table></figure>
<p>继续安装browser-sync</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install browser-sync</span><br></pre></td></tr></table></figure>
<p>安装完毕后，创建gulpfile.js入口文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var gulp        &#x3D; require(&#39;gulp&#39;);</span><br><span class="line">var browserSync &#x3D; require(&#39;browser-sync&#39;).create();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 静态服务器</span><br><span class="line">gulp.task(&#39;browser-sync&#39;, function() &#123;</span><br><span class="line">    browserSync.init(&#123;</span><br><span class="line">    	files: &quot;**&quot;,</span><br><span class="line">        server: &#123;</span><br><span class="line">            baseDir: &quot;.&#x2F;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这个时候，我们运行<code>gulp broser-sync</code>这个任务，就会自动创建一个http服务器，并打开我们的默认浏览器，同时监听我们的项目文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ gulp browser-sync</span><br><span class="line">[09:11:00] Using gulpfile D:\phpStudy\WWW\browser-sync\gulpfile.js</span><br><span class="line">[09:11:00] Starting &#39;browser-sync&#39;...</span><br><span class="line">[09:11:00] Finished &#39;browser-sync&#39; after 25 ms</span><br><span class="line">[BS] Access URLs:</span><br><span class="line"> -------------------------------------</span><br><span class="line">       Local: http:&#x2F;&#x2F;localhost:3000</span><br><span class="line">    External: http:&#x2F;&#x2F;192.168.37.1:3000</span><br><span class="line"> -------------------------------------</span><br><span class="line">          UI: http:&#x2F;&#x2F;localhost:3001</span><br><span class="line"> UI External: http:&#x2F;&#x2F;192.168.37.1:3001</span><br><span class="line"> -------------------------------------</span><br><span class="line">[BS] Serving files from: .&#x2F;</span><br><span class="line">[BS] Watching files...</span><br></pre></td></tr></table></figure>
<p>我们来测试看看<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/93188300.jpg"></p>
<p>我时候该我们的workspace上场了。如果你玩的是双屏，一个放浏览器，一个放编辑器，土豪，我们做朋友吧。我们穷逼孩子还是不得不来回在编辑器和浏览器之间切换一下。</p>
<p>我们在html文件中引入一个外部css文件，整个代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>browser-sync<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	原来的内容</span><br><span class="line">	我增加一句 保存一下 测试</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">	<span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">	<span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>首先设置chrome的workspace,还是用一张图片展示一下：<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/18265961.jpg"></p>
<p>这里需要注意的就是要指定Mappings值，这样chrome才知道和本地文件的对应关系。</p>
<p>接下来我们来看看强大的workspace的功能。<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/7876929.jpg"></p>
<p><del>当然，最后我们看到了，我通过外部引入的css，在审查元素面板是不能看到引入文件的，而且对其修改，虽然能够反映到页面上面，但不会反映到本地css文件上面。这主要是因为browser-sync对css文件采用的是注入的方式。这种方式对css进行修改可以不用重新刷新页面，而只需要重新渲染css修改的部分。这也将导致的一个问题就是，我们在审查元素面板看到不所定义的css样式的真实行号。</del></p>
<p><del>我尝试在browser-sync中增加配置<code>injectChanges: false</code>,css依然还是采用的注入方式。并没有起什么作用。</del></p>
<p>在设置中点击<code>Restore defaults and reload</code>就可以。但通过审核元素面板修改css会存在一个问题就是，在输完属性名字是没有问题的，但一开始输入属性值，就会触发workspace保存文件，而文件一更新，又会导致browser-sync重新加载，所以就会无法完整输入具体属性值。配合browser-sync,还是通过审查元素面板点开css文件，进入source面板后修改再手动保存。参看如下操作：<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/6855632.jpg"></p>
<p>最后，我们打开UI地址，就可以对browser-sync进行很多丰富的设置了。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/79609084.jpg"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>gulp</tag>
      </tags>
  </entry>
  <entry>
    <title>如何优雅地在mardown中插入表格</title>
    <url>/2016/05/02/how-creat-tables-into-your-markdown-file/</url>
    <content><![CDATA[<p>非常喜欢用markdown来写文章,但相信大多数在使用markdown的时候会有和我一样的困扰,那就是插入表格是非常不方便的.markdown本来就是让我们专注于写作的,而表格的书写方式确实是反人类的.今天要写一篇文章,不得不插入一些表格,于是寻找了一些解决方法,能够方便地在markdown里面插入表格.</p>
<a id="more"></a>
<h2 id="第一种-最笨的-图片法"><a href="#第一种-最笨的-图片法" class="headerlink" title="第一种 最笨的 图片法"></a>第一种 最笨的 图片法</h2><p>这是这笨的方法,也是最无奈的方法,就是把表格转换成图片,当然,这也是最不想用 方法了,体积大,语义不强等.</p>
<h2 id="第二种-编辑器法"><a href="#第二种-编辑器法" class="headerlink" title="第二种 编辑器法"></a>第二种 编辑器法</h2><p>就是借用markdown编辑器自带的插入表格功能.有一部分markdown已经带有表格插入功能了,比如MarkDownPad,但它需要pro版才带有这个功能的,还有比如小书匠,免费的,带有插入表格的功能.</p>
<p>markdownpro专业版拥有这个功能<br><img src="http://7te946.com1.z0.glb.clouddn.com/markdownpro.png" alt="markdownpro"></p>
<p>小书匠也带有这样的功能<br><img src="http://7te946.com1.z0.glb.clouddn.com/xiaoshujiang.png" alt="小书匠也带有这样的功能"></p>
<p>因为我习惯于直接使用平时写代码的sublime text来写,所以对于markdown编辑器没有多试用,所以其它编辑器大家可以自行查看是否支持表格的插入.</p>
<h2 id="第三种-在线转换法"><a href="#第三种-在线转换法" class="headerlink" title="第三种 在线转换法"></a>第三种 在线转换法</h2><p>如果你像我一样在使用其它编辑器来写markdown,而编辑器又不支持插入表格,同时也不想再安装一个编辑器来单独写markdown,那么可以尝试在线转换的方式.这里推荐几个网站:</p>
<ol>
<li><a href="https://www.tablesgenerator.com/">https://www.tablesgenerator.com/</a>这个网站我一直没有打开过</li>
<li><a href="https://donatstudios.com/CsvToMarkdownTable">https://donatstudios.com/CsvToMarkdownTable</a> 用excel写好表格内容,复制进去,就能够在下面显示出markdown的语法了.<br><img src="http://7te946.com1.z0.glb.clouddn.com/csv.png" alt="enter description here"></li>
<li><a href="http://truben.no/table/#">http://truben.no/table/#</a> 这个网站可以直接在线设计表格,而且可以生成很多种语法,包括markdown,sql等.<br><img src="http://7te946.com1.z0.glb.clouddn.com/truben.png" alt="enter description here"></li>
<li><a href="http://markdown.xiaoshujiang.com/">小书匠web版</a> 和它的本地编辑器很类似的,直接在线设计,并生成markdown语法.</li>
</ol>
<p>PS:我用markdown表格写的一篇博文:<a href="http://blog.linxiaodong.com/2016/05/01/js-type-conversion/">《javascript中数据类型转换那点事 》</a></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>centos下编译安装php出错整理</title>
    <url>/2014/11/17/install-php-erros/</url>
    <content><![CDATA[<h3 id="1-Sorry-I-cannot-run-apxs"><a href="#1-Sorry-I-cannot-run-apxs" class="headerlink" title="1.Sorry, I cannot run apxs"></a>1.Sorry, I cannot run apxs</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;configure --with-apxs2&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apxs --disable-cli --enable-shared --with-libxml-dir --with-gd --with-openssl --enable-mbstring --with-mcrypt --with-mysqli --with-mysql --enable-opcache --enable-mysqlnd --enable-zip --with-zlib-dir --with-pdo-mysql --with-jpeg-dir --with-freetype-dir --with-curl --without-pdo-sqlite --without-sqlite3</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>在编译时报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sorry, I cannot run apxs. ***</span><br><span class="line"></span><br><span class="line">Sorry, I cannot run apxs. Possible reasons follow:</span><br><span class="line"></span><br><span class="line">1. Perl is not installed</span><br><span class="line">2. apxs was not found. Try to pass the path using --with-apxs2&#x3D;&#x2F;path&#x2F;to&#x2F;apxs</span><br><span class="line">3. Apache was not built using --enable-so (the apxs usage page is displayed)</span><br><span class="line"></span><br><span class="line">configure: error: Sorry, I cannot run apxs. Either you need to install Perl or you need to pass the absolute path of apxs by using --with-apxs&#x3D;&#x2F;absolute&#x2F;path&#x2F;to&#x2F;apxs</span><br></pre></td></tr></table></figure>
<p>没有指明正确的perl执行程序的位置</p>
<p>解决办法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;usr&#x2F;local&#x2F;apache&#x2F;bin&#x2F;apxs</span><br></pre></td></tr></table></figure>
<p>把第一行<code>#!/replace/with/path/to/perl/interpreter -w</code>修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;perl -w</span><br></pre></td></tr></table></figure>
<h3 id="2-mcrypt-h-not-found-Please-reinstall-libmcrypt"><a href="#2-mcrypt-h-not-found-Please-reinstall-libmcrypt" class="headerlink" title="2.mcrypt.h not found. Please reinstall libmcrypt"></a>2.mcrypt.h not found. Please reinstall libmcrypt</h3><p>接上一步，重新编译时，又出现如下错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mcrypt.h not found. Please reinstall libmcrypt</span><br></pre></td></tr></table></figure>
<p>这是因为centos源不能安装libmcrypt-devel，由于版权的原因没有自带mcrypt的包</p>
<p>解决办法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget http:&#x2F;&#x2F;softlayer.dl.sourceforge.net&#x2F;sourceforge&#x2F;mcrypt&#x2F;libmcrypt-2.5.8.tar.gz</span><br><span class="line">tar -zxvf libmcrypt-2.5.8.tar.gz</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;libmcrypt-2.5.8</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>javacript中创建对象的几种方式</title>
    <url>/2016/05/02/js-creat-object-method/</url>
    <content><![CDATA[<p>javascript中创建对象有几种方式,工厂模式,构造函数模式,原型模式,构造函数+原型混合模式,动态原型模式,寄生构造函数模式,稳妥构造函数模式.</p>
<a id="more"></a>
<p>针对前几种,记录一下自己的书写笔记,有时间再来整理一下文字版.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="comment">//工厂方法 缺点:对象识别问题.</span></span></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">CreatPerson</span>(<span class="params">name,age</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>;</span></span><br><span class="line">		obj.name = name;</span><br><span class="line">		obj.age = age;</span><br><span class="line"><span class="javascript">		obj.fav = [<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;葡萄&quot;</span>];</span></span><br><span class="line"><span class="javascript">		obj.run = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">return</span> <span class="built_in">this</span>.name+<span class="built_in">this</span>.age+<span class="string">&quot;正在运行中...&quot;</span>;</span></span><br><span class="line">		&#125;;</span><br><span class="line"><span class="javascript">		<span class="keyword">return</span> obj;</span></span><br><span class="line">	&#125;</span><br><span class="line">	/*</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> person1 = CreatPerson(<span class="string">&quot;lxd&quot;</span>,<span class="number">23</span>);</span></span><br><span class="line"><span class="javascript">	person1.fav.push(<span class="string">&quot;橙子&quot;</span>);</span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> person2 = CreatPerson(<span class="string">&quot;tian&quot;</span>,<span class="number">14</span>);</span></span><br><span class="line"><span class="javascript">	person1.name = <span class="string">&quot;xiaodong&quot;</span>; 	</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.run());<span class="comment">//xiaodong23正在运行中...</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.fav);<span class="comment">// [&quot;苹果&quot;, &quot;葡萄&quot;, &quot;橙子&quot;] 引用对象不共享</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person2.run());<span class="comment">//tian14正在运行中...</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person2.fav);<span class="comment">// [&quot;苹果&quot;, &quot;葡萄&quot;]</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1 <span class="keyword">instanceof</span> <span class="built_in">Object</span>);<span class="comment">//true</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1 <span class="keyword">instanceof</span> CreatPerson);<span class="comment">//false 不能获得对象标识</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.run == person2.run);<span class="comment">//false</span></span></span><br><span class="line">	*/</span><br><span class="line"><span class="javascript">	<span class="comment">//构造函数模式 缺点:里面相同任务的function也会被实例化</span></span></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.name = name;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.age = age;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.fav = [<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;葡萄&quot;</span>];</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.run = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">//这里的方法也会被实例化,等同于this.run = new Function(&quot;return this.name+this.age+&#x27;正在运行中...&#x27;;&quot;)</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">return</span> <span class="built_in">this</span>.name+<span class="built_in">this</span>.age+<span class="string">&quot;正在运行中...&quot;</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> person1 = <span class="keyword">new</span> Person(<span class="string">&quot;lxd&quot;</span>,<span class="number">23</span>);</span></span><br><span class="line"><span class="javascript">		person1.fav.push(<span class="string">&quot;橙子&quot;</span>);</span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> person2 = <span class="keyword">new</span> Person(<span class="string">&quot;tian&quot;</span>,<span class="number">14</span>);</span></span><br><span class="line"><span class="javascript">	person1.name = <span class="string">&quot;xiaodong&quot;</span>; 	</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.run());<span class="comment">//xiaodong23正在运行中...</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.fav);<span class="comment">// [&quot;苹果&quot;, &quot;葡萄&quot;, &quot;橙子&quot;] 引用对象不共享</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person2.run());<span class="comment">//tian14正在运行中...</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person2.fav);<span class="comment">// [&quot;苹果&quot;, &quot;葡萄&quot;]</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1 <span class="keyword">instanceof</span> <span class="built_in">Object</span>);<span class="comment">//true</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1 <span class="keyword">instanceof</span> Person);<span class="comment">//true 可以获得对象标识</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.run == person2.run);<span class="comment">//false 实例化对象,里面的方法也会实例化</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	Person(<span class="string">&quot;window&quot;</span>,<span class="number">100</span>);<span class="comment">//当作普通函数使用 添加到window对象中</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(<span class="built_in">window</span>.run());<span class="comment">//window100正在运行中...</span></span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>;</span></span><br><span class="line"><span class="javascript">	Person.call(o,<span class="string">&quot;oooo&quot;</span>,<span class="number">99</span>);<span class="comment">//在另外一个对象的作用域中调用</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(o.run());<span class="comment">//oooo99正在运行中...</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="comment">//针对构造函数的缺点,进行改造,把函数提取出来 缺点:暴躁在全局变量中的方法,却只能在对象中使用,而且如果方法很多,会创建很多这样的全局方法.</span></span></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">NewPerson</span>(<span class="params">name,age</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.name = name;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.age = age;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.fav = [<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;葡萄&quot;</span>];</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.run = run;</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">return</span> <span class="built_in">this</span>.name+<span class="built_in">this</span>.age+<span class="string">&quot;正在运行中...&quot;</span>;</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> newperson1 = <span class="keyword">new</span> NewPerson(<span class="string">&quot;xiaodong&quot;</span>,<span class="number">13</span>);</span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> newperson2 = <span class="keyword">new</span> NewPerson(<span class="string">&quot;tian&quot;</span>,<span class="number">22</span>);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson1.run == newperson2.run);<span class="comment">//true 访问的是同一个方法</span></span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>prototype<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="comment">//原型模式</span></span></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;&#125;;</span></span><br><span class="line"><span class="javascript">	Person.prototype.name = <span class="string">&quot;xiaodong&quot;</span>;</span></span><br><span class="line">	Person.prototype.age = 23;</span><br><span class="line"><span class="javascript">	Person.prototype.job = <span class="string">&quot;do software&quot;</span>;</span></span><br><span class="line"><span class="javascript">	Person.prototype.sayName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">return</span> <span class="built_in">this</span>.name;</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> person2 = <span class="keyword">new</span> Person();</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.sayName());<span class="comment">//&quot;xiaodong&quot;</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person2.sayName());<span class="comment">//&quot;xiaodong&quot;</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.sayName === person2.sayName);<span class="comment">//访问同一个对象指针</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(Person.prototype.isPrototypeOf(person1));<span class="comment">//true person1中包含有指向Person.prototype的指针</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(<span class="built_in">Object</span>.getPrototypeOf(person1) == Person.prototype);<span class="comment">//true page 149 返回prototype的值</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(<span class="built_in">Object</span>.getPrototypeOf(person1).name);<span class="comment">//xiaodong</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	person1.name = <span class="string">&quot;tiantian&quot;</span>; <span class="comment">//只能添加到实例中,不能改变原型的值</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.name);<span class="comment">//&quot;tiantian&quot; 来自实例而非原型</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person2.name);<span class="comment">//&quot;xiaodong&quot; 来自原型而非实例</span></span></span><br><span class="line"><span class="javascript">	<span class="keyword">delete</span> person1.name;</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.name);<span class="comment">//&quot;xiaodong&quot; 来自原型</span></span></span><br><span class="line">	/*</span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.hasOwnProperty(<span class="string">&quot;name&quot;</span>));<span class="comment">//false 检测是实例属性还是原型属性</span></span></span><br><span class="line"><span class="javascript">	person1.name = <span class="string">&quot;tian&quot;</span>;</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(person1.hasOwnProperty(<span class="string">&quot;name&quot;</span>));<span class="comment">//ture 实例中包含name属性</span></span></span><br><span class="line">	*/</span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(<span class="string">&quot;name&quot;</span> <span class="keyword">in</span> person1);<span class="comment">//true 可枚举原型中的属性 来自原型</span></span></span><br><span class="line"><span class="javascript">	person1.name = <span class="string">&quot;okok&quot;</span>;</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(<span class="string">&quot;name&quot;</span> <span class="keyword">in</span> person1);<span class="comment">//true //来自实例</span></span></span><br><span class="line"><span class="javascript">	<span class="comment">//利用hasOwnProperty和in可以判断属性是来自实例还是原型例如</span></span></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">hasPrototypeProperty</span>(<span class="params">object,name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">return</span> !object.hasOwnProperty(name) &amp;&amp; (name <span class="keyword">in</span> object);</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="javascript">	<span class="keyword">delete</span> person1.name;</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(hasPrototypeProperty(person1,<span class="string">&quot;name&quot;</span>));<span class="comment">//ture</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	person1.name = <span class="string">&quot;test&quot;</span>;</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(hasPrototypeProperty(person1,<span class="string">&quot;name&quot;</span>));<span class="comment">//false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> person1)&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">if</span> (i == <span class="string">&quot;age&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(<span class="string">&quot;1234&quot;</span>);<span class="comment">//&quot;1234&quot;</span></span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> keys = <span class="built_in">Object</span>.keys(Person.prototype);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(keys);<span class="comment">//[&quot;name&quot;, &quot;age&quot;, &quot;job&quot;, &quot;sayName&quot;]</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> keys = <span class="built_in">Object</span>.keys(person1);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(keys);<span class="comment">// [&quot;name&quot;] 实例属性</span></span></span><br><span class="line"><span class="javascript">	Person.prototype.toString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> keys = <span class="built_in">Object</span>.getOwnPropertyNames(Person.prototype);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(keys);<span class="comment">//  [&quot;constructor&quot;, &quot;name&quot;, &quot;age&quot;, &quot;job&quot;, &quot;sayName&quot;, &quot;toString&quot;] 包含不可枚举的 注意还有tostring;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> keys = <span class="built_in">Object</span>.getOwnPropertyNames(person1);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(keys);<span class="comment">//  [&quot;name&quot;] 证明只有构造函数才有constructor等方法</span></span></span><br><span class="line"><span class="javascript">	<span class="comment">//person1.prototype.name = &quot;dfsa&quot;; //TypeError: person1.prototype is undefined</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">NewPerson</span>(<span class="params"></span>)</span>&#123;&#125;;</span></span><br><span class="line"><span class="javascript">	NewPerson.prototype = &#123;<span class="comment">//采用字面量的方式书写;</span></span></span><br><span class="line"><span class="javascript">		name:<span class="string">&quot;xiaodong&quot;</span>,</span></span><br><span class="line">		age: 23,</span><br><span class="line"><span class="javascript">		sayName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">return</span> <span class="built_in">this</span>.name;</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> newperson = <span class="keyword">new</span> NewPerson();</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson <span class="keyword">instanceof</span> <span class="built_in">Object</span>);<span class="comment">//ture</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson <span class="keyword">instanceof</span> NewPerson);<span class="comment">//ture</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson.constructor == NewPerson);<span class="comment">//false 重写了默认的prototype,所以其constructor属性变成了新对象的constructor属性(指向Object);</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson.constructor == <span class="built_in">Object</span>);<span class="comment">//ture</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">NewPerson2</span>(<span class="params"></span>)</span>&#123;&#125;;</span></span><br><span class="line"><span class="javascript">	NewPerson2.prototype = &#123;<span class="comment">//采用字面量的方式书写;</span></span></span><br><span class="line">		constructor:NewPerson2,//显式指定</span><br><span class="line"><span class="javascript">		name:<span class="string">&quot;xiaodong&quot;</span>,</span></span><br><span class="line">		age: 23,</span><br><span class="line"><span class="javascript">		sayName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">return</span> <span class="built_in">this</span>.name;</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> newperson2 = <span class="keyword">new</span> NewPerson2();</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson2.constructor == NewPerson2);<span class="comment">//ture;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	NewPerson2.prototype.name = <span class="string">&quot;tiantian&quot;</span>;</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson2.name);<span class="comment">//原型的动态性 对其修改会在所有的对象实例中反映出来</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	NewPerson2.prototype = &#123;<span class="comment">//但如果重写的话,就会切断构造函数与最初原型的关系 page156 实例中的指针仅指向原型,而不是构造函数</span></span></span><br><span class="line"><span class="javascript">		name : <span class="string">&quot;other&quot;</span></span></span><br><span class="line">	&#125;;</span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson2.name);<span class="comment">//tiantian</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(newperson2.constructor === NewPerson2)<span class="comment">//true</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="comment">//原型模式的缺点:所有的属性都是共享的.</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">Friend</span>(<span class="params"></span>)</span>&#123;&#125;;</span></span><br><span class="line">	Friend.prototype=&#123;</span><br><span class="line"><span class="javascript">		name:<span class="string">&quot;jack&quot;</span>,</span></span><br><span class="line"><span class="javascript">		fav:[<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;葡萄&quot;</span>],</span></span><br><span class="line"><span class="javascript">		run:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">return</span> <span class="built_in">this</span>.fav;</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> friend1 = <span class="keyword">new</span> Friend();</span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> friend2 = <span class="keyword">new</span> Friend();</span></span><br><span class="line"><span class="javascript">	friend1.fav.push(<span class="string">&quot;梨子&quot;</span>);<span class="comment">//引用类型</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(friend1.fav);<span class="comment">// [&quot;苹果&quot;, &quot;葡萄&quot;, &quot;梨子&quot;] 引用类型</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(friend2.fav);<span class="comment">// [&quot;苹果&quot;, &quot;葡萄&quot;, &quot;梨子&quot;] 引用类型</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">	<span class="comment">//组合使用构造函数模式和原型模式 目前最常用的方式</span></span></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">Base</span>(<span class="params">name,age</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.name = name;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">this</span>.age = age;</span></span><br><span class="line">	&#125;;</span><br><span class="line"><span class="javascript">	Base.prototype.run =  <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">return</span> <span class="built_in">this</span>.name;</span></span><br><span class="line">	&#125;;</span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> base1 = <span class="keyword">new</span> Base(<span class="string">&quot;xiaodong&quot;</span>,<span class="number">23</span>);</span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> base2 = <span class="keyword">new</span> Base(<span class="string">&quot;tiantian&quot;</span>,<span class="number">22</span>);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(base1.run());<span class="comment">//&quot;xiaodong&quot;</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(base2.run());<span class="comment">//&quot;tiantian&quot;</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(base1.run === base2.run);<span class="comment">//true</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript中继承的几种方式</title>
    <url>/2016/05/03/js-extend-method/</url>
    <content><![CDATA[<p>和创建对象的几个方式类似,javascript也产生了几种不同的实现继承的方式.</p>
<a id="more"></a>

<h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">SuperType</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="built_in">this</span>.property = <span class="literal">true</span>;</span><br><span class="line">		<span class="built_in">this</span>.color = [<span class="string">&quot;yellow&quot;</span>,<span class="string">&quot;red&quot;</span>];</span><br><span class="line">		<span class="built_in">this</span>.name = <span class="string">&quot;xiaodong&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	SuperType.prototype.getSuperTypeValue = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">this</span>.property;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">SubType</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="built_in">this</span>.subproperty = <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">/*	SubType.prototype.getSubValue = function()&#123; //添加属性和方法必须在替换原型之后</span></span><br><span class="line"><span class="comment">		return this.subproperty;</span></span><br><span class="line"><span class="comment">	&#125;*/</span></span><br><span class="line">	SubType.prototype = <span class="keyword">new</span> SuperType();</span><br><span class="line">	<span class="keyword">var</span> instance = <span class="keyword">new</span> SubType();</span><br><span class="line">	<span class="built_in">console</span>.log(instance.getSuperTypeValue());<span class="comment">//true</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance <span class="keyword">instanceof</span> <span class="built_in">Object</span>);<span class="comment">//true 原型和实例的关系</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance <span class="keyword">instanceof</span> SubType);<span class="comment">//true</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance <span class="keyword">instanceof</span> SuperType);<span class="comment">//true</span></span><br><span class="line">	<span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.isPrototypeOf(instance));<span class="comment">//true</span></span><br><span class="line">	<span class="built_in">console</span>.log(SuperType.prototype.isPrototypeOf(instance));<span class="comment">//true</span></span><br><span class="line">	<span class="built_in">console</span>.log(SubType.prototype.isPrototypeOf(instance));<span class="comment">//true</span></span><br><span class="line">	<span class="comment">/*console.log(SubType.getSubValue());//TypeError: SubType.getSubValue is not a function*/</span></span><br><span class="line">	SubType.prototype.getSubValue = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">//添加属性和方法必须在替换原型之后</span></span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">this</span>.subproperty;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="built_in">console</span>.log(instance.getSubValue());<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*	SubType.prototype = &#123; //不能再使用对象字面量的方式来重写原型,这样会断开最初的原型链</span></span><br><span class="line"><span class="comment">		getSubValue : function()&#123;</span></span><br><span class="line"><span class="comment">			return this.subproperty;</span></span><br><span class="line"><span class="comment">		&#125;</span></span><br><span class="line"><span class="comment">	&#125;</span></span><br><span class="line"><span class="comment">	var instance2 = new SubType();</span></span><br><span class="line"><span class="comment">	console.log(instance2.getSuperTypeValue());//TypeError: instance2.getSuperTypeValue is not a function*/</span></span><br><span class="line">	<span class="comment">//原型链继承的问题 :包含超级类的属性值 并且对实例中引用类型的值的修改,会反映到超级类的所有实例上面 并且子类的实例没有办法向超级类传递参数 即使通过子类的参数间接传递也不行</span></span><br><span class="line">	<span class="keyword">var</span> instance2 = <span class="keyword">new</span> SubType();</span><br><span class="line">	instance.name = <span class="string">&quot;tiantian&quot;</span>;</span><br><span class="line">	<span class="comment">//instance.color = [&quot;black&quot;];</span></span><br><span class="line">	instance.color.push(<span class="string">&quot;black&quot;</span>);<span class="comment">//如果使用instance.color=[&quot;black&quot;],就不会影响到其它实例,因为改变了对象的引用</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance2.color);<span class="comment">// [&quot;yellow&quot;, &quot;red&quot;, &quot;black&quot;]</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance2.name);<span class="comment">//xiaodong</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/gufavatule/edit?js,console">view code</a></p>
<h2 id="借用构造函数"><a href="#借用构造函数" class="headerlink" title="借用构造函数"></a>借用构造函数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	function SuperType(name)&#123;</span><br><span class="line">		this.color &#x3D; [&quot;yellow&quot;,&quot;green&quot;];</span><br><span class="line">		this.name  &#x3D; name;</span><br><span class="line">		this.getName &#x3D; function()&#123;</span><br><span class="line">			return this.name;</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">	function SubType(name)&#123;</span><br><span class="line">		SuperType.call(this,name);</span><br><span class="line">	&#125;</span><br><span class="line">	var instance  &#x3D; new SubType(&quot;xiaodong&quot;);</span><br><span class="line">	instance.color.push(&quot;black&quot;);</span><br><span class="line">	var instance2 &#x3D; new SubType();</span><br><span class="line">	console.log(instance.color);&#x2F;&#x2F;[&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;]</span><br><span class="line">	console.log(instance.name);&#x2F;&#x2F;xiaodong</span><br><span class="line">	console.log(instance2.color);&#x2F;&#x2F; [&quot;yellow&quot;, &quot;green&quot;]</span><br><span class="line">	console.log(instance.getName &#x3D;&#x3D; instance2.getName);&#x2F;&#x2F;false 方法没有达到共用</span><br><span class="line">	&#x2F;&#x2F;借用构造函数解决了属性值共享的问题,以及实例向超级类传递参数的问题. 缺点 方法也是在函数中定义 无法解决函数共用的问题</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/viladal/edit?js,console">view code</a></p>
<h2 id="组合方式"><a href="#组合方式" class="headerlink" title="组合方式"></a>组合方式</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="comment">//最常用的继承模式</span></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">SuperType</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">		<span class="built_in">this</span>.name = name;</span><br><span class="line">		<span class="built_in">this</span>.color = [<span class="string">&quot;yellow&quot;</span>,<span class="string">&quot;green&quot;</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	SuperType.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">SubType</span> (<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">		SuperType.call(<span class="built_in">this</span>,name);</span><br><span class="line">	&#125;</span><br><span class="line">	SubType.prototype = <span class="keyword">new</span> SubType();</span><br><span class="line">	SubType.prototype.constructor = SubType;</span><br><span class="line">	SubType.prototype.getAge = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">this</span>.age;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="keyword">var</span> instance = <span class="keyword">new</span> SubType(<span class="string">&quot;xiaodong&quot;</span>,<span class="number">22</span>);</span><br><span class="line">	instance.color.push(<span class="string">&quot;black&quot;</span>);</span><br><span class="line">	<span class="keyword">var</span> instance2 = <span class="keyword">new</span> SubType(<span class="string">&quot;tiantian&quot;</span>,<span class="number">11</span>);</span><br><span class="line">	<span class="built_in">console</span>.log(instance.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;]</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance2.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;]</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance.getName == instance2.getName);<span class="comment">//true 实现了方法共享</span></span><br><span class="line">	<span class="built_in">console</span>.log(instance.getAge == instance2.getAge);<span class="comment">//true 实现了方法共享</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/tiwukab/edit?js,console">view code</a></p>
<h2 id="原型式继承"><a href="#原型式继承" class="headerlink" title="原型式继承"></a>原型式继承</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="comment">//基本模型 缺点:引用类型值共享</span></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">object</span>(<span class="params">o</span>)</span>&#123;<span class="comment">//o传入一个基本对象</span></span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">		F.prototype = <span class="built_in">Object</span>(o);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> F();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> person = &#123;</span><br><span class="line">		name:<span class="string">&quot;xiaodong&quot;</span>,</span><br><span class="line">		color:[<span class="string">&quot;yellow&quot;</span>,<span class="string">&quot;green&quot;</span>],</span><br><span class="line">		getName:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="keyword">var</span> person1 = object(person);</span><br><span class="line">	person1.name = <span class="string">&quot;tiantian&quot;</span>;</span><br><span class="line">	person1.color.push(<span class="string">&quot;black&quot;</span>);</span><br><span class="line">	<span class="keyword">var</span> person2 = object(person);</span><br><span class="line">	<span class="built_in">console</span>.log(person1.name);<span class="comment">//tiantian</span></span><br><span class="line">	<span class="built_in">console</span>.log(person2.name);<span class="comment">//xiaodong</span></span><br><span class="line">	<span class="built_in">console</span>.log(person1.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;]</span></span><br><span class="line">	<span class="built_in">console</span>.log(person2.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;]</span></span><br><span class="line">	<span class="built_in">console</span>.log(person1.getName == person2.getName);<span class="comment">//true 实现了函数共享</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//ES5中新增了Object.create()方法来更加规范地实现这一类继承</span></span><br><span class="line">	<span class="keyword">var</span> newperson = &#123;</span><br><span class="line">		name:<span class="string">&quot;xiaodong&quot;</span>,</span><br><span class="line">		color:[<span class="string">&quot;yellow&quot;</span>,<span class="string">&quot;green&quot;</span>],</span><br><span class="line">		getName:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="keyword">var</span> newperson1 = <span class="built_in">Object</span>.create(newperson);</span><br><span class="line">	newperson1.name = <span class="string">&quot;tiantian&quot;</span>;</span><br><span class="line">	newperson1.color.push(<span class="string">&quot;black&quot;</span>);</span><br><span class="line">	<span class="keyword">var</span> newperson2 = <span class="built_in">Object</span>.create(newperson);</span><br><span class="line">	<span class="built_in">console</span>.log(newperson1.name);<span class="comment">//tiantian</span></span><br><span class="line">	<span class="built_in">console</span>.log(newperson2.name);<span class="comment">//xiaodong</span></span><br><span class="line">	<span class="built_in">console</span>.log(newperson1.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;]</span></span><br><span class="line">	<span class="built_in">console</span>.log(newperson2.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;]</span></span><br><span class="line">	<span class="built_in">console</span>.log(newperson1.getName == newperson2.getName);<span class="comment">//true 实现了函数共享</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/zoqahi/edit?js,console">view code</a></p>
<h2 id="寄生式继承"><a href="#寄生式继承" class="headerlink" title="寄生式继承"></a>寄生式继承</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">	&lt;script&gt;</span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">object</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">			F.prototype = o;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> F();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">creatAnother</span> (<span class="params">origin</span>) </span>&#123;</span><br><span class="line">			<span class="keyword">var</span> clone = object(origin);</span><br><span class="line">			clone.sayHi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="string">&quot;hi&quot;</span>;</span><br><span class="line">			&#125;;</span><br><span class="line">			<span class="keyword">return</span> clone;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">var</span> origin = &#123;</span><br><span class="line">			name:<span class="string">&quot;xiaodong&quot;</span>,</span><br><span class="line">			color:[<span class="string">&quot;yellow&quot;</span>,<span class="string">&quot;green&quot;</span>],</span><br><span class="line">			getName:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		<span class="keyword">var</span> other = creatAnother(origin);</span><br><span class="line">		other.name = <span class="string">&quot;tian&quot;</span>;</span><br><span class="line">		other.color.push(<span class="string">&quot;black&quot;</span>);</span><br><span class="line">		<span class="keyword">var</span> other2 = creatAnother(origin);</span><br><span class="line">		<span class="built_in">console</span>.log(other.name);<span class="comment">//tian</span></span><br><span class="line">		<span class="built_in">console</span>.log(other.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;] 引用类型共享</span></span><br><span class="line">		<span class="built_in">console</span>.log(other2.name);<span class="comment">// xiaodong</span></span><br><span class="line">		<span class="built_in">console</span>.log(other2.color);<span class="comment">// [&quot;yellow&quot;, &quot;green&quot;, &quot;black&quot;]</span></span><br><span class="line">		<span class="built_in">console</span>.log(other.getName == other2.getName);<span class="comment">//true</span></span><br><span class="line">		<span class="built_in">console</span>.log(other.sayHi == other2.sayHi);<span class="comment">//false 使用寄生式继承来为对象添加函数,函数不能共享而降低效率</span></span><br><span class="line">	&lt;/script&gt;</span><br><span class="line"><span class="string">``</span><span class="string">``</span></span><br><span class="line">[view code](http:<span class="comment">//jsbin.com/wovaka/edit?js,console)</span></span><br><span class="line"></span><br><span class="line">## 寄生组合式继承</span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">`javascript</span></span><br><span class="line"><span class="string">	&lt;script&gt;</span></span><br><span class="line"><span class="string">		/*//组合式继承的缺点:超类会调用两次</span></span><br><span class="line"><span class="string">		function SuperType(name)&#123;</span></span><br><span class="line"><span class="string">			this.name = name;</span></span><br><span class="line"><span class="string">			this.color = [&quot;yellow&quot;,&quot;green&quot;];</span></span><br><span class="line"><span class="string">			this.age = 23;</span></span><br><span class="line"><span class="string">		&#125;;</span></span><br><span class="line"><span class="string">		SuperType.prototype.getName = function()&#123;</span></span><br><span class="line"><span class="string">			return this.name;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		function SubType(name,age)&#123;</span></span><br><span class="line"><span class="string">			SuperType.call(this,name);//第二次调用超类</span></span><br><span class="line"><span class="string">			this.age= age;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		SubType.prototype = new SuperType();//第一次调用超类</span></span><br><span class="line"><span class="string">		SubType.constructor = SubType;</span></span><br><span class="line"><span class="string">		SubType.prototype.getAge = function()&#123;</span></span><br><span class="line"><span class="string">			return this.age;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		var instance = new SubType(&quot;xiaodong&quot;,23);</span></span><br><span class="line"><span class="string">		console.log(instance.getName());//xiaodong*/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">		//寄生组合式继承 只调用一次SuerType构造函数,同时避免了在SubType.prototype上面创建不必要的,多余的属性.同时原型链保值不变.</span></span><br><span class="line"><span class="string">		function inheritPrototype(subType,superType)&#123;</span></span><br><span class="line"><span class="string">			var prototype = Object(superType.prototype);//创建对象</span></span><br><span class="line"><span class="string">			prototype.constructor = SubType;//增强对象</span></span><br><span class="line"><span class="string">			subType.prototype = prototype;//指定对象</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		function SuperType(name)&#123;</span></span><br><span class="line"><span class="string">			this.name = name;</span></span><br><span class="line"><span class="string">			this.color = [&quot;yellow&quot;,&quot;green&quot;];</span></span><br><span class="line"><span class="string">			this.age = 23;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		SuperType.prototype.getName = function()&#123;</span></span><br><span class="line"><span class="string">			return this.name;</span></span><br><span class="line"><span class="string">		&#125;;</span></span><br><span class="line"><span class="string">		function SubType(name,age)&#123;</span></span><br><span class="line"><span class="string">			SuperType.call(this,name);</span></span><br><span class="line"><span class="string">			this.age = age;</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">		inheritPrototype(SubType,SuperType);</span></span><br><span class="line"><span class="string">		SubType.prototype.getAge = function()&#123;</span></span><br><span class="line"><span class="string">			return this.age;</span></span><br><span class="line"><span class="string">		&#125;;</span></span><br><span class="line"><span class="string">		var instance = new SubType(&quot;xiaodong&quot;,23);</span></span><br><span class="line"><span class="string">		console.log(instance.getName());//xiaodong</span></span><br><span class="line"><span class="string">	&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="http://jsbin.com/jumufo/edit?js,console">view code</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>理解js中函数参数是按值传递而非按引用传递</title>
    <url>/2016/05/02/js-function-arguments/</url>
    <content><![CDATA[<p>在javascript中的函数参数传值中,对于基本数字类型,我们都能够很好理解,它是按值传递的.比如下面这样:</p>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> num+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(add(num));<span class="comment">//11</span></span><br><span class="line"><span class="built_in">console</span>.log(num);<span class="comment">//10</span></span><br></pre></td></tr></table></figure>
<p>而对于对象的传递,我们可能就不太好理解了,因为如果是同基本类型一样,按值传递,但其实际表现又像引用类型一样.比如下面这样</p>
<p>情形一:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a=[],</span><br><span class="line">	b=&#123;&#125;,</span><br><span class="line">	c=&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">a,b,c</span>)</span>&#123;</span><br><span class="line">	a.push(<span class="number">1</span>);</span><br><span class="line">	b.name = <span class="string">&quot;my name&quot;</span>;</span><br><span class="line">	c.age = <span class="number">23</span>;</span><br><span class="line">&#125;</span><br><span class="line">change(a,b,c);</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//[1]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">// Object &#123; name=&quot;my name&quot;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(c.age);<span class="comment">//23</span></span><br></pre></td></tr></table></figure>
<p>如果是按值传递,为什么函数把外面的值给改变了呢?我们又继续看下面这个例子:<br>情形二:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a=[],</span><br><span class="line">	b=&#123;&#125;,</span><br><span class="line">	c=&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">a,b,c</span>)</span>&#123;</span><br><span class="line">	a = [<span class="number">1</span>];</span><br><span class="line">	b = [<span class="number">2</span>];</span><br><span class="line">	c = &#123;<span class="attr">age</span>:<span class="number">3</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">change(a,b,c);</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//[]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//object</span></span><br><span class="line"><span class="built_in">console</span>.log(c.age);<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure>
<p>同样是进行操作,为什么这次又 没有任何变化呢?</p>
<p>其实深入理解,我们必须相信的是,在javascript中,函数的参数确实是按值传递的.对于以上现象,我们可以这样理解:</p>
<p>变量a保存的是一个对象,而我们又知道,对象类型的变化保存的其实是对象引用的一个地址,当把变化a传递的函数的参数a的时候,函数参数a复制了变量a,实际上也就是复制了变量a引用对象的地址,因为是同一个地址,所以指向的是同一个变量.所以对函数中变量a进行的操作,都会反映到这个地址引用的对象上面.这就是情形1的执行结果.</p>
<p>而在函数中,当我们把变量a赋值给另外一个对象后,它保存的就是另外一个对象的引用地址,所以对它进行任何操作,都不会反映到最开始变量a的对象上面.</p>
<p>通过以上两种情形,我们就能够很好地理解下面这种情况了:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> person =&#123;</span><br><span class="line">	name : <span class="string">&quot;my name&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">person</span>)</span>&#123;</span><br><span class="line">	person.name = <span class="string">&quot;your name&quot;</span>;</span><br><span class="line">	person = &#123;</span><br><span class="line">		name : <span class="string">&quot;her name&quot;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">change(person);</span><br><span class="line"><span class="built_in">console</span>.log(person.name);<span class="comment">//your name</span></span><br></pre></td></tr></table></figure>
<p>这里画一张图,不知道能不能加深我们的理解:<br><img src="http://7te946.com1.z0.glb.clouddn.com/arguments.png" alt="函数参数按值传递"></p>
<p>所以,当有一天,我们能够改变<code>var person</code>里面的引用地址的时候,我们才敢说是按照引用传值的.</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript中当数字遇上了字符</title>
    <url>/2016/05/02/js-number-string/</url>
    <content><![CDATA[<p>我们始终记住一句话:除了加性操作符之外,其它操作符中遇上字符的时候,javascript都会尝试在后台采用Number对字符串进行转换.于是我们可以看到如下的结果:</p>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;15&quot;</span>+<span class="number">5</span>);<span class="comment">//&quot;155&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;15&quot;</span>-<span class="number">5</span>);<span class="comment">//10</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;abc&quot;</span>+<span class="number">5</span>);<span class="comment">//&quot;abc5&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;abc&quot;</span>-<span class="number">5</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;15&quot;</span>*<span class="number">5</span>);<span class="comment">//75</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;15&quot;</span>/<span class="number">5</span>);<span class="number">3</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;5&quot;</span>==<span class="number">5</span>);<span class="comment">//ture</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;5abc&quot;</span>==<span class="number">5</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;23&quot;</span>&lt;<span class="string">&quot;3&quot;</span>);<span class="comment">//true 没有数字,比较第一个字符&quot;2&quot;和&quot;2&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;23&quot;</span>&lt;<span class="number">33</span>);<span class="comment">//true &quot;23&quot;转换为23</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;a&quot;</span>&lt;<span class="number">33</span>);<span class="comment">//false &quot;a&quot;转换为NaN</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>不使用var就不是声明变量</title>
    <url>/2016/05/17/js-out-of-use-var/</url>
    <content><![CDATA[<p>我们知道,在js中采用<code>var</code>就可以声明一个变量了,同时我们也可能会很自豪地告诉自己,如果不使用<code>var</code>就会在全局变量中声明一个全局变量.</p>
<p>可是问题真的是如此吗?正如本文的标题一样,我们来一次大胆的尝试:没有使用<code>var</code>就不是声明变量!!!</p>
<a id="more"></a>

<p>关于不使用<code>var</code>的方式实现的效果相信都知道了,这里就不演示了,我们主要来说明他不是在声明一个变量.</p>
<h3 id="理由一-没有变量声明提升"><a href="#理由一-没有变量声明提升" class="headerlink" title="理由一:没有变量声明提升"></a>理由一:没有变量声明提升</h3><p>我们知道,js引擎会对声明进行提升,如果不使用<code>var</code>的话,我们可以当作是在全局执行环境中进行的变量声明,那它也应该进行变量声明提升了.我们来测试:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//ReferenceError</span></span><br><span class="line"></span><br><span class="line">b = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<p>我们发现,打印a是<code>undefined</code>,说明变量a是正常提升了的,但b呢,是<code>ReferenceError</code>,引用错误,说明b的声明并没有提升.</p>
<p>我们先假设一下,b在这里并不是在进行变量声明.</p>
<h3 id="理由二-拥有了delete特性"><a href="#理由二-拥有了delete特性" class="headerlink" title="理由二:拥有了delete特性"></a>理由二:拥有了<code>delete</code>特性</h3><p>我们知道,变量是不是被删除了,而对象的属性是可以被删除的.我们再来测试:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">b = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> b);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//ReferenceError</span></span><br></pre></td></tr></table></figure>
<p>我们发现,这里的变量b是可以被删除的.那么再添加一个声明呢:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">b = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> b);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//10</span></span><br><span class="line"><span class="keyword">var</span> b;</span><br></pre></td></tr></table></figure>
<p>我们发现,仅仅是多了这么一句声明,变量b就不能被删除了.</p>
<p>这里我们可以看得出,不使用<code>var</code>不仅仅是在全局作用域中创建变量那么简单.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">b = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.b);<span class="comment">//10</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> <span class="built_in">window</span>.b);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//ReferenceError</span></span><br></pre></td></tr></table></figure>
<p>通过上面这个代码,我们发现,变量b可以通过全局变量window的一个属性来访问,而它也可以通过删除window这样的一个属性来删除它.</p>
<p>因此,我们有理由相信: </p>
<blockquote class="blockquote-center">
<p><em>不使用<code>var</code>并不是在声明一个变量,而是在为全局变量window添加一个对应的属性!</em> </p>

</blockquote>

<h3 id="注意点一"><a href="#注意点一" class="headerlink" title="注意点一"></a>注意点一</h3><p>我们看以下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  a = <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">delete</span> a);</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">foo();<span class="comment">//false,10</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">20</span>;</span><br></pre></td></tr></table></figure>
<p>虽然foo函数声明以及执行都在var之前,但因为存在变量提升的原因,所以foo内部的a只是在进行重新赋值了.</p>
<p>我们再看</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">boo();<span class="comment">//false , 20</span></span><br><span class="line">foo();<span class="comment">//ture  , ReferenceError</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  a = <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">delete</span> a);</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">boo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">delete</span> a);</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为boo里面的var声明只是在boo这个函数的内部执行环境中,所以并不会影响到foo函数.</p>
<p>我们再来测试</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">foo();<span class="comment">//false  , 20</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">boo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    a = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">delete</span> a);</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">  &#125;</span><br><span class="line">  boo();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过变量作用域名相信我们是能够很容易理解上面这段代码的执行结果的.</p>
<p>继续coding</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">  name : <span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">  change:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    name = <span class="string">&quot;php&quot;</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">delete</span> <span class="built_in">window</span>.name);</span><br><span class="line">    <span class="built_in">console</span>.log(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">foo.change();<span class="comment">//ture , ReferenceError</span></span><br></pre></td></tr></table></figure>
<p>我们发现,对象里面的方法,不使用<code>var</code>的话也是在window对象上面添加属性来实现的.</p>
<p>如果在闭包中，又会是怎样的呢?</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  	<span class="built_in">console</span>.log(a);</span><br><span class="line">    a=<span class="number">20</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">delete</span> a);</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> bar;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> boo = foo();</span><br><span class="line">boo();<span class="comment">//10 , false , 20</span></span><br></pre></td></tr></table></figure>
<p>我们发现，在闭包中，因为bar中保留对foo的引用，所以虽然在外部执行了bar函数，但闭包中对a的引用会保留<code>var a = 10</code>的有效性的。</p>
<h3 id="注意二"><a href="#注意二" class="headerlink" title="注意二"></a>注意二</h3><p>我们知道,我们可以利用<code>eval</code>来进行变量欺骗,那如果我们用<code>eval</code>来进行变量声明,会怎样呢呢</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;var a = 10&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.a);<span class="comment">//10</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> <span class="built_in">window</span>.a);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//ReferenceError</span></span><br></pre></td></tr></table></figure>
<p>我们发现,通过eval声明的变量,是拥有delete特性呢.我们来测试代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//ReferenceError</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;var a = 10&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>我们发现eval里面的变量声明,是不会进行声明提升的.因为引擎发初始化的时候,是不会扫描里面的具体的内容的,只有当执行到这一步的时候,才会执行里面具体的代码.也许这种情况下声明的变量也不应该叫作真正的变量声明吧.具体的原因还需要进一步深入了解.</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript中数据类型转换那点事</title>
    <url>/2016/05/01/js-type-conversion/</url>
    <content><![CDATA[<p>javascript的神奇之一就是其变量是松散类型的,具有动态性,所以只需要五种基本类型的和一种复杂类型,就可以轻松地保存所有的数据类型了.在使用的过程中,javascript可能会自动地转换我们的数据类型,有时我们也可能会强制地进行数据的转换.那么在转换过程中,是有一些规则需要遵循的.</p>
<a id="more"></a>
<h2 id="一-对于Boolean"><a href="#一-对于Boolean" class="headerlink" title="一.对于Boolean"></a>一.对于Boolean</h2><p>对于Boolean类型,我们在使用if进行判断或者使用Boolean进行转换的时候,其结果会有<code>true</code>和<code>false</code>两种.<br>其规则是:</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>转换为true的值</th>
<th>转换为false的值</th>
</tr>
</thead>
<tbody><tr>
<td>Boolean</td>
<td>true</td>
<td>flase</td>
</tr>
<tr>
<td>Strin</td>
<td>任何非空字符串</td>
<td>“”(空字符串)</td>
</tr>
<tr>
<td>Number</td>
<td>任何非零数字(包括无穷大)</td>
<td>0和NaN</td>
</tr>
<tr>
<td>Object</td>
<td>任何对象</td>
<td>null</td>
</tr>
<tr>
<td>Undefined</td>
<td>不适用</td>
<td>undefined</td>
</tr>
</tbody></table>
<h2 id="二-对于Number"><a href="#二-对于Number" class="headerlink" title="二.对于Number"></a>二.对于Number</h2><p>对于Number我们可能会用到<code>Number</code>,<code>parseInt</code>,<code>parseFlost</code>三种,我们对接用实例来展示</p>
<h4 id="Number-方法"><a href="#Number-方法" class="headerlink" title="Number()方法"></a>Number()方法</h4><table>
<thead>
<tr>
<th>代码</th>
<th>结果</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>Number(“Hello world”)</td>
<td>Nan</td>
<td>flase</td>
</tr>
<tr>
<td>Number(“”)</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Number(“0000123”)</td>
<td>123</td>
<td></td>
</tr>
<tr>
<td>Number(true)</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>Number(undefined)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>Number(null)</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Number(1.23)</td>
<td>1.23</td>
<td></td>
</tr>
<tr>
<td>Number(“1.34”)</td>
<td>1.34</td>
<td>只包含浮点数字</td>
</tr>
<tr>
<td>Number(“1.34abc”)</td>
<td>NaN</td>
<td>包含了数字以外的字符</td>
</tr>
</tbody></table>
<h4 id="parseInt-方法"><a href="#parseInt-方法" class="headerlink" title="parseInt()方法"></a>parseInt()方法</h4><table>
<thead>
<tr>
<th>代码</th>
<th>结果</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>parseInt(“Hello world”)</td>
<td>NaN</td>
<td>没有找到数字</td>
</tr>
<tr>
<td>parseInt(“”)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>parseInt(“123abc”)</td>
<td>123</td>
<td></td>
</tr>
<tr>
<td>parseInt(true)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>parseInt(undefined)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>parseInt(null)</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>parseInt(1.23)</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>parseInt(“1.34abc”)</td>
<td>1</td>
<td>只包含浮点数字</td>
</tr>
<tr>
<td>parseInt(“10”,10)</td>
<td>10</td>
<td>尽量指定第二个参数,以10进制的方式转换</td>
</tr>
<tr>
<td>parseInt(“def123abc”)</td>
<td>NaN</td>
<td>不是以数字或者(空字符加数字)开头</td>
</tr>
<tr>
<td>parseInt(“0xf”)</td>
<td>15</td>
<td>16进制</td>
</tr>
</tbody></table>
<h4 id="parseFloat-方法"><a href="#parseFloat-方法" class="headerlink" title="parseFloat()方法"></a>parseFloat()方法</h4><table>
<thead>
<tr>
<th>代码</th>
<th>结果</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>parseFloat(“Hello world”)</td>
<td>NaN</td>
<td>没有找到数字</td>
</tr>
<tr>
<td>parseFloat(“”)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>parseFloat(“123abc”)</td>
<td>123</td>
<td></td>
</tr>
<tr>
<td>parseFloat(true)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>parseFloat(undefined)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>parseFloat(null)</td>
<td>NaN</td>
<td></td>
</tr>
<tr>
<td>parseFloat(1.23)</td>
<td>1.23</td>
<td></td>
</tr>
<tr>
<td>parseFloat(“1.34abc”)</td>
<td>1.34</td>
<td>只包含浮点数字</td>
</tr>
<tr>
<td>parseFloat(“def123abc”)</td>
<td>NaN</td>
<td>不是以数字或者(空字符加数字)开头</td>
</tr>
<tr>
<td>parseFloat(“3.125e7”)</td>
<td>31250000</td>
<td></td>
</tr>
<tr>
<td>parseFloat(“0908.7.2”)</td>
<td>908.7</td>
<td></td>
</tr>
<tr>
<td>parseFloat(“0xA”)</td>
<td>0</td>
<td>16进制的字符串始终转换为0</td>
</tr>
</tbody></table>
<h2 id="三-对于String"><a href="#三-对于String" class="headerlink" title="三.对于String"></a>三.对于String</h2><table>
<thead>
<tr>
<th>代码</th>
<th>结果</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>String(10)</td>
<td>“10”</td>
<td></td>
</tr>
<tr>
<td>String(1.23)</td>
<td>“1.23”</td>
<td></td>
</tr>
<tr>
<td>String(00011)</td>
<td>11</td>
<td></td>
</tr>
<tr>
<td>String(0001.23)</td>
<td>报错</td>
<td>missing ) after argument list</td>
</tr>
<tr>
<td>String(null)</td>
<td>“null”</td>
<td></td>
</tr>
<tr>
<td>String(undefined)</td>
<td>“undefined”</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript中的undefined null</title>
    <url>/2016/05/01/js-undefined-null/</url>
    <content><![CDATA[<p>在javascript的五种基本数据类型中,有两和数据类型可能会经常给我们带来一些困惑,他们就是<code>undefined</code>和<code>null</code>了.</p>
<a id="more"></a>
<h2 id="对于undefined来说"><a href="#对于undefined来说" class="headerlink" title="对于undefined来说"></a>对于undefined来说</h2><p>我们先来看一种情况:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//&quot;undefined&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//报错</span></span><br></pre></td></tr></table></figure>
<p>然后有</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);<span class="comment">//&quot;undefined&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> b);<span class="comment">//&quot;undefined&quot;</span></span><br></pre></td></tr></table></figure>
<p>这里我们可以得出结论就是:未定义的变量,未初始化的变量,使用typeof的时候,他们的结果都是’undefined’;而对于未定义的变量,他也只能使用typeof操作符,执行其它操作都将报错.(调用delete也不会报错,但没有任何意义);</p>
<p>从上面也可以看出,未初始化变量的默认值就是<code>undefined</code>,所以<code>console.log(a == undefined)</code>将会打印出<code>true</code>.</p>
<p>因此,良好的编程习惯应该这样:没必要显式地声明<code>a = undefined</code>;而对于任何变量,我们都应该显式的初始化一个除<code>undefined</code>外我们想要的值,这样当我们在应用typeof的时候,我们将可以很容易地知道<code>undefined</code>结果代表的是变量未声明.</p>
<h2 id="对于null"><a href="#对于null" class="headerlink" title="对于null"></a>对于null</h2><p>我们也是先看一种情况</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="literal">null</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> a); <span class="comment">//object;</span></span><br></pre></td></tr></table></figure>
<p>这里我们可以看出,<code>null</code>是以一种空对象的形式保存的.所以对于任何我们即将要以对象的形式保存的变量,我们都可以使用<code>null</code>来进行初始化;</p>
<p>有一点不好理解的就是,当<code>conslole.log(null == undefined)</code>的时候,结果竟然返回的是<code>true</code>,其中的原因就是<code>undefined</code>是派生至<code>null</code>的.那么<code>console.log(null === undefined)</code>的结果肯定是<code>false</code>,因为他们是两种数据类型.</p>
<p>因为我们也就能够理解下面这段代码了:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">null</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">undefined</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure>
<p>对于<code>undefined</code>和<code>null</code>它们将存在于以下区别</p>
<p>1.在使用Boolean进行转换的时候,<code>undefined</code>和<code>null</code>都为<code>false</code>,而<code>null</code>所赋于的变量,拥有任何对象后都将会是<code>true</code>值.</p>
<p>2.在使用Number进行转换的时候,<code>Number(null)</code>的值为0,而<code>Number(undefined)</code>为<code>NaN</code>.</p>
<p>3.在合作String进行转换的时候,<code>String(null)</code>的结果是<code>&quot;null&quot;</code>,而<code>String(undefined)</code>的结果是<code>&quot;undefined&quot;</code>.</p>
<p>我们还需要注意的一点就是,<code>typeof</code>操作符返回的结果是字符串.所以<code>console.log(typeof undefined == undefined);</code>的结果是<code>false</code>,所以<code>typeof undefined</code>返回的<code>&quot;undefined&quot;</code>非此<code>undefined</code>.</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>jsbin神一般地在线书写，测试，分享代码</title>
    <url>/2016/05/04/jsbin/</url>
    <content><![CDATA[<p>有些时候，我们往往有这样的需求：</p>
<a id="more"></a>
<ol>
<li>临时测试一个代码片段，不想打开编辑器来新建一个文件，测试完毕又删除</li>
<li>想给别人分享一个代码，html文件,css文件，js文件，打个包？</li>
<li>向别人展个某个效果，发个文件过去？把代码部署到自己服务器上面？</li>
</ol>
<p>针对这些需求，我们使用在线的代码片段测试工具，也许来得更加简单和方便了。<br>针对前端的在线代码片段工具很多，比较常见的有<a href="http://jsbin.com/">jsbin</a>和<a href="https://jsfiddle.net/">jsfiddle</a>以及<a href="http://codepen.io/">codepen</a>.</p>
<p>而我最喜欢的就是jsbin了，它有着更多的特性给我带来了极大的方便：</p>
<ol>
<li><p>任意控制要展示的窗口<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/19860620.jpg"><br>点击这些标签，就可以控制对应的窗口的显示与隐藏，让我们获得更大的编辑区域，减少不需要的窗口的干扰。</p>
</li>
<li><p>支持console面板，因为我调试代码习惯于用console面板来调试，所以它的这个面板一下子就吸引了我。</p>
</li>
<li><p>代码检测功能，哪怕是js中一个分号错误，也会实时提醒出来<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/56235513.jpg"></p>
</li>
</ol>
<h3 id="神一样的功能，最大的特性，把sublime-text搬到线上"><a href="#神一样的功能，最大的特性，把sublime-text搬到线上" class="headerlink" title="神一样的功能，最大的特性，把sublime text搬到线上"></a>神一样的功能，最大的特性，把sublime text搬到线上</h3><p>直接支持在线用书写sublime text的快捷键来书写代码，而且是支持emmet的哦。不需要在自己的编辑器里面写好，再复制过去了，直接在线流畅地进行书写，</p>
<p>开启方法：Account-&gt;Editor settings-&gt;Addons 里面，Key bindings勾选Sublime就可以了。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/96521463.jpg"></p>
<h3 id="一些小tips"><a href="#一些小tips" class="headerlink" title="一些小tips"></a>一些小tips</h3><ol>
<li><p>分享链接设置最新版，快照<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/4691611.jpg"><br>不仅仅可以设置分享最新版的代码，还是当前代码的快照。还可以设置分享后展示的窗口信息，甚至可以只展示运行的结果。</p>
</li>
<li><p>保存的代码设置描述，方便查找代码</p>
</li>
</ol>
<p>我们在书写了代码之后，可以通过File-&gt;Save snapshot来保存当前的代码片段，但默认保存的很难让我们区分出这段代码是干什么用的。就像下面这样：<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/14204181.jpg"></p>
<p>这里面的信息我们是不能编辑的，我们可以在编辑窗口，点击File-&gt;Add description来添加描述。<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-5-4/81115496.jpg"><br>这下子就非常清晰了。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>javascript</tag>
        <tag>css</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>mockjs使用的一些技巧</title>
    <url>/2017/10/12/mockjs-skills/</url>
    <content><![CDATA[<p>整理一下自己在项目用使用mockjs时的一些小技巧</p>
<a id="more"></a>

<h1 id="生成固定两位数的金额式数字"><a href="#生成固定两位数的金额式数字" class="headerlink" title="生成固定两位数的金额式数字"></a>生成固定两位数的金额式数字</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@float(1, 100,2,2)</span><br></pre></td></tr></table></figure>
<p>=&gt; <code>69.32</code></p>
<h1 id="生成一张随机图片，图片颜色随机，图片上显示随机汉字"><a href="#生成一张随机图片，图片颜色随机，图片上显示随机汉字" class="headerlink" title="生成一张随机图片，图片颜色随机，图片上显示随机汉字"></a>生成一张随机图片，图片颜色随机，图片上显示随机汉字</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@image(50x50,@color,@cword)</span><br></pre></td></tr></table></figure>
<p>=&gt;<code>http://dummyimage.com/50x50/f27979&amp;text=量</code></p>
<h1 id="生成时间戳"><a href="#生成时间戳" class="headerlink" title="生成时间戳"></a>生成时间戳</h1><p>这个可以巧妙地使用mockjs的function功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function() &#123;</span><br><span class="line">      return new Date().getTime()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>=&gt; <code>1507804275240</code></p>
<h1 id="生成固定格式的数据，如有一定生成规则的单号"><a href="#生成固定格式的数据，如有一定生成规则的单号" class="headerlink" title="生成固定格式的数据，如有一定生成规则的单号"></a>生成固定格式的数据，如有一定生成规则的单号</h1><p>这个可以巧妙地使用mockjs的正则功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;PO\d&#123;19&#125;&#x2F;</span><br></pre></td></tr></table></figure>
<p>=&gt;<code>PO5478965874589658741</code></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>mock</tag>
      </tags>
  </entry>
  <entry>
    <title>在react-router v4中实现多个布局模板</title>
    <url>/2017/09/30/multiple-layouts-with-react-router-v4/</url>
    <content><![CDATA[<p>在前端发过迁移React-router v4的踩坑记录：<a href="http://blog.linxiaodong.com/2017/09/28/Migrating-react-route-v3-to-v4/">《react-route从v3迁移到v4(折腾+踩坑)》</a>,整个升级需要有很多坑，但我觉得都还比较好，可以一步一步地去填这些坑，不外乎就是一个工作量的问题。</p>
<p>但在最后解决我之前项目中处理404页面的时候，遇到了一个头痛的问题：</p>
<a id="more"></a>

<p>在我的项目中，所有页面共用了一套Layout,除了404页面是完全独立的一套Layout,这个实现在v3中是很方便的，比如用下面这套route配置就可以完成了</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;Route path=<span class="string">&quot;/&quot;</span> component=&#123;Layouts&#125; &gt;</span><br><span class="line">        &lt;IndexRoute component=&#123;Home&#125;/&gt;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/goods/add&quot;</span> component=&#123;GoodsAdd&#125;/&gt;</span><br><span class="line">&lt;/Route&gt;</span><br><span class="line">&lt;Route path=<span class="string">&quot;*&quot;</span> component=&#123;NotFoundPage&#125; /&gt;</span><br></pre></td></tr></table></figure>
<p>但到了react-router v4就行不通了，因为在v4中，要实现这样的Layout，path=”/“的匹配规则就不能添加<code>exec</code>了，而对于404的那个链接，刚会首先进入path=”/“这个里面去，从而导致Layouts的渲染。不管是否使用<code>Switch</code>均无法解决这个问题。</p>
<p>一直在想办法解决404页面的问题，刚网上搜索出来的解决方法均一样：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;Switch&gt;</span><br><span class="line">  &lt;Route exact path=<span class="string">&quot;/&quot;</span> component=&#123;Home&#125;/&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;/about&quot;</span> component=&#123;About&#125;/&gt;</span><br><span class="line">  &lt;Route component=&#123;NoMatch&#125;/&gt;</span><br><span class="line">&lt;/Switch&gt;</span><br></pre></td></tr></table></figure>
<p>这个确实是一个实现方式，但却不能实现我需要的Layout功能了，Home和About是完全独立的两个页面当然是没问题的。</p>
<p>后来转念一想，我的需求不再于404页面的问题，而在于如何实现多套Layout的问题，如何通过简单的方式来实现多套Layout,那么404页面做为完全独立的一个页面，也就能够简单的实现的。</p>
<p>因为我大多数页面都会是同一个Layout,而极个别的可能会是另外的一套，所以我还是想通过v3的方式那样，通过根路由来渲染这个主要的Layout,这样我不用再去处理那大部分的，而只需要去处理那及个别的即可。</p>
<p>后来通过阅读react-router v4的文档，发现有一个render的api,通过render的方式，我们就有了更多的自定义渲染控制权了，包括怎么渲染，额外传递一些参数等等。</p>
<p>有了这个api,问题就好解决了，我们可以自己再封装一个实现router v4中onEnter功能的高组组件类似的一个组件，通过这个组件来决定利用哪个Layout来渲染这个页面，这样就可以实现任意多套的Layout了。</p>
<p>最终我封装了一个<code>ARoute</code>的组件，这个组件实现onEnter的功能，同时加载Layout.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Route <span class="keyword">from</span> <span class="string">&#x27;react-router-dom/Route&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Redirect <span class="keyword">from</span> <span class="string">&#x27;react-router-dom/Redirect&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;Layout&#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Layouts <span class="keyword">from</span> <span class="string">&#x27;./Layout&#x27;</span></span><br><span class="line"><span class="keyword">import</span> SideBar <span class="keyword">from</span> <span class="string">&#x27;./SideBar&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style/layout.less&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123;Content&#125; = Layout;</span><br><span class="line"><span class="keyword">const</span> SideBarLayout = <span class="function">(<span class="params">&#123;component: Component, ...rest&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;layout&#125; = rest;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;Route &#123;...rest&#125; render=&#123;<span class="function"><span class="params">matchProps</span> =&gt;</span> (</span><br><span class="line">      !layout || layout==<span class="string">&quot;main&quot;</span></span><br><span class="line">      ?&lt;Layouts&gt;</span><br><span class="line">          &lt;Layout className=&#123;!layout?<span class="string">&quot; ant-layout-has-sider&quot;</span>:<span class="string">&quot;&quot;</span>&#125;&gt;</span><br><span class="line">          &#123;!layout?<span class="xml"><span class="tag">&lt;<span class="name">SideBar</span> /&gt;</span></span>:<span class="literal">null</span>&#125;</span><br><span class="line">          &lt;Content </span><br><span class="line">                style=&#123;&#123;</span><br><span class="line">                minHeight: <span class="number">680</span>,</span><br><span class="line">                overflow:<span class="string">&quot;visible&quot;</span>,</span><br><span class="line">                width:!layout?<span class="string">&quot;1028px&quot;</span>:<span class="string">&quot;1200px&quot;</span></span><br><span class="line">                &#125;&#125;</span><br><span class="line">            &gt;</span><br><span class="line">               &lt;Component &#123;...matchProps&#125; /&gt;</span><br><span class="line">            &lt;<span class="regexp">/Content&gt;&lt;/</span>Layout&gt;</span><br><span class="line">      &lt;/Layouts&gt;</span><br><span class="line">      :<span class="xml"><span class="tag">&lt;<span class="name">Component</span> &#123;<span class="attr">...matchProps</span>&#125; /&gt;</span></span></span><br><span class="line">    )&#125; /&gt;</span><br><span class="line">  )</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (&#123; <span class="attr">component</span>: Component, ...rest &#125;) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;path&#125;=rest;</span><br><span class="line">    <span class="keyword">const</span> status=sessionStorage.getItem(<span class="string">&quot;suppliers&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> out=(!status || <span class="built_in">JSON</span>.parse(status).status&lt;<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">const</span> inEnter=path &amp;&amp; path.indexOf(<span class="string">&quot;enter&quot;</span>)&gt;-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> entered=status &amp;&amp; <span class="built_in">JSON</span>.parse(status).status==<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">return</span> (!out &amp;&amp; !inEnter) || (out &amp;&amp; inEnter)? <span class="xml"><span class="tag">&lt;<span class="name">SideBarLayout</span> &#123;<span class="attr">...rest</span>&#125; <span class="attr">component</span>=<span class="string">&#123;Component&#125;</span> /&gt;</span></span> :entered &amp;&amp; inEnter?<span class="xml"><span class="tag">&lt;<span class="name">Redirect</span> <span class="attr">to</span>=<span class="string">&#123;&#123;</span> <span class="attr">pathname:</span> &#x27;/&#x27; &#125;&#125; /&gt;</span></span>: <span class="xml"><span class="tag">&lt;<span class="name">Redirect</span> <span class="attr">to</span>=<span class="string">&#123;&#123;</span> <span class="attr">pathname:</span> &#x27;/<span class="attr">enter</span>/<span class="attr">write</span>/<span class="attr">fullPage</span>&#x27; &#125;&#125; /&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我的路由就可以写成这样的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;BrowserRouter&gt;</span><br><span class="line">    &lt;Switch&gt;</span><br><span class="line">        &lt;ARoute exact  path=<span class="string">&quot;/&quot;</span> component=&#123;Home&#125; /&gt;</span><br><span class="line">        &lt;ARoute exact  path=<span class="string">&quot;/goods/add&quot;</span> component=&#123;GoodsAdd&#125; /&gt;</span><br><span class="line">        &lt;ARoute layout=<span class="string">&quot;404&quot;</span> component=&#123;NotFoundPage&#125; /&gt;</span><br><span class="line">    &lt;/Switch&gt;</span><br><span class="line">&lt;/BrowserRouter&gt;</span><br></pre></td></tr></table></figure>
<p>我原本是想把这里面的所有ARoute封装在一起，但发现这样路由会去匹配里面的所有ARoute.</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>react-router</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql LPAD RPAD 字符串前后补全</title>
    <url>/2016/04/07/mysql-lpad/</url>
    <content><![CDATA[<p>一个客户的项目中，在表中有个字段<code>card_no</code>是保存的会员编号，客户采用的是四位数的方式来记录的，0001~9999这样的，字段采用的字符串的方式来保存的。</p>
<a id="more"></a>
<p>现在客户有一个这样的需求，在一个搜索应用中，中需要输入会员的后面的编号，比如<code>0001</code>号的，只需要输入<code>1</code>就可以直接搜索出这个会员。</p>
<p>当然，我们可以在采用sql搜索之前通过程序进行这个值的判断补全。</p>
<p>而更简单的方法就是通过mysql的LPAD函数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LPAD(str,len,padstr)</span><br></pre></td></tr></table></figure>
<p>使用这个函数的结果就是对str字符串判断len长度，如果超过就从左边开始截取指定len的长度，如果不足len长度就使用padstr在str前面进行补全。</p>
<p>对于客户这需求，我们就可以写出这样的sql语句了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT * FROM ecs_users WHERE card_no &#x3D; LPAD(88,4,0);&#x2F;&#x2F;88为传入的数值</span><br></pre></td></tr></table></figure>
<p>同时还有一个函数RPAD，使用方法也是一样的。这个只是进行后补全的。</p>
]]></content>
      <categories>
        <category>LAMP</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs之npm包管理不完全手记</title>
    <url>/2016/10/23/nodejs-npm/</url>
    <content><![CDATA[<h2 id="单独更新npm"><a href="#单独更新npm" class="headerlink" title="单独更新npm"></a>单独更新npm</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">varsu@DESKTOP-V7HEGUG MINGW64 &#x2F;d&#x2F;temp&#x2F;npm</span><br><span class="line">$ npm -v</span><br><span class="line">2.15.1</span><br><span class="line"></span><br><span class="line">varsu@DESKTOP-V7HEGUG MINGW64 &#x2F;d&#x2F;temp&#x2F;npm</span><br><span class="line">$ npm install npm --global</span><br><span class="line">C:\Users\varsu\AppData\Roaming\npm\npm -&gt; C:\Users\varsu\AppData\Roaming\npm\node_modules\npm\bin\npm-cli.js</span><br><span class="line">npm@3.10.9 C:\Users\varsu\AppData\Roaming\npm\node_modules\npm</span><br><span class="line"></span><br><span class="line">varsu@DESKTOP-V7HEGUG MINGW64 &#x2F;d&#x2F;temp&#x2F;npm</span><br><span class="line">$ npm -v</span><br><span class="line">3.10.9</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="全局安装和卸载npm包"><a href="#全局安装和卸载npm包" class="headerlink" title="全局安装和卸载npm包"></a>全局安装和卸载npm包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">varsu@DESKTOP-V7HEGUG MINGW64 &#x2F;d&#x2F;temp&#x2F;npm</span><br><span class="line">$ npm install forever -g</span><br><span class="line">varsu@DESKTOP-V7HEGUG MINGW64 &#x2F;d&#x2F;temp&#x2F;npm</span><br><span class="line">$ npm uninstall forever -g</span><br></pre></td></tr></table></figure>
<h2 id="在当前项目中安装卸载包"><a href="#在当前项目中安装卸载包" class="headerlink" title="在当前项目中安装卸载包"></a>在当前项目中安装卸载包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm install underscore</span><br><span class="line">D:\temp\npm</span><br><span class="line">&#96;-- underscore@1.8.3</span><br><span class="line"></span><br><span class="line">npm WARN enoent ENOENT: no such file or directory, open &#39;D:\temp\npm\package.json&#39;</span><br><span class="line">npm WARN npm No description</span><br><span class="line">npm WARN npm No repository field.</span><br><span class="line">npm WARN npm No README data</span><br><span class="line">npm WARN npm No license field.</span><br><span class="line"></span><br><span class="line">D:\temp\npm&gt;tree</span><br><span class="line">文件夹 PATH 列表</span><br><span class="line">卷序列号为 000000B9 8841:2A63</span><br><span class="line">D:.</span><br><span class="line">└─node_modules</span><br><span class="line">    └─underscore</span><br><span class="line"></span><br><span class="line">D:\temp\npm&gt;npm uninstall underscore</span><br><span class="line">- underscore@1.8.3 node_modules\underscore</span><br><span class="line">npm WARN enoent ENOENT: no such file or directory, open &#39;D:\temp\npm\package.json&#39;</span><br><span class="line">npm WARN npm No description</span><br><span class="line">npm WARN npm No repository field.</span><br><span class="line">npm WARN npm No README data</span><br><span class="line">npm WARN npm No license field.</span><br></pre></td></tr></table></figure>
<h2 id="查看已经安装的包"><a href="#查看已经安装的包" class="headerlink" title="查看已经安装的包"></a>查看已经安装的包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm ls</span><br><span class="line">D:\temp\npm</span><br><span class="line">&#96;-- underscore@1.8.3</span><br></pre></td></tr></table></figure>
<p>或者加上参数<code>-g</code>查看全局范围安装的包</p>
<h2 id="安装指定版本的包"><a href="#安装指定版本的包" class="headerlink" title="安装指定版本的包"></a>安装指定版本的包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm info underscore</span><br><span class="line"></span><br><span class="line">&#123; name: &#39;underscore&#39;,</span><br><span class="line">  description: &#39;JavaScript\&#39;s functional programming helper library.&#39;,</span><br><span class="line">  &#39;dist-tags&#39;: &#123; latest: &#39;1.8.3&#39;, stable: &#39;1.8.3&#39; &#125;,</span><br><span class="line">  versions:</span><br><span class="line">   [ &#39;1.0.3&#39;,</span><br><span class="line">     &#39;1.0.4&#39;,</span><br><span class="line">     &#39;1.1.0&#39;,</span><br><span class="line">     &#39;1.1.1&#39;,</span><br><span class="line">     &#39;1.1.2&#39;,</span><br><span class="line">     &#39;1.1.3&#39;,</span><br><span class="line">     &#39;1.1.4&#39;,</span><br><span class="line">     &#39;1.1.5&#39;,</span><br><span class="line">     &#39;1.1.6&#39;,</span><br><span class="line">     &#39;1.1.7&#39;,</span><br><span class="line">     &#39;1.2.0&#39;,</span><br><span class="line">     &#39;1.2.1&#39;,</span><br><span class="line">     &#39;1.2.2&#39;,</span><br><span class="line">     &#39;1.2.3&#39;,</span><br><span class="line">     &#39;1.2.4&#39;,</span><br><span class="line">     &#39;1.3.0&#39;,</span><br><span class="line">     &#39;1.3.1&#39;,</span><br><span class="line">     &#39;1.3.2&#39;,</span><br><span class="line">     &#39;1.3.3&#39;,</span><br><span class="line">     &#39;1.4.0&#39;,</span><br><span class="line">     &#39;1.4.1&#39;,</span><br><span class="line">     &#39;1.4.2&#39;,</span><br><span class="line">     &#39;1.4.3&#39;,</span><br><span class="line">     &#39;1.4.4&#39;,</span><br><span class="line">     &#39;1.5.0&#39;,</span><br><span class="line">     &#39;1.5.1&#39;,</span><br><span class="line">     &#39;1.5.2&#39;,</span><br><span class="line">     &#39;1.6.0&#39;,</span><br><span class="line">     .............</span><br><span class="line"></span><br><span class="line">D:\temp\npm&gt;npm install underscore@1.6.0</span><br><span class="line">D:\temp\npm</span><br><span class="line">&#96;-- underscore@1.6.0</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="使用package-json进行包管理"><a href="#使用package-json进行包管理" class="headerlink" title="使用package.json进行包管理"></a>使用package.json进行包管理</h2><p>初始化一个项目，生成package.json 项目名不能有空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm init</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;my_npm&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;&#125;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;&#125;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;buxuku&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在package.json中安装npm包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm install underscore --save</span><br><span class="line">my_npm@1.0.0 D:\temp\npm</span><br><span class="line">&#96;-- underscore@1.8.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">D:\temp\npm&gt;npm install babel-cli --save-dev</span><br><span class="line">my_npm@1.0.0 D:\temp\npm</span><br><span class="line">&#96;-- babel-cli@6.16.0</span><br></pre></td></tr></table></figure>
<p>卸载package.json中的包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm uninstall underscore --save</span><br><span class="line">- underscore@1.8.3 node_modules\underscore</span><br></pre></td></tr></table></figure>
<h2 id="更新package-json中包的版本"><a href="#更新package-json中包的版本" class="headerlink" title="更新package.json中包的版本"></a>更新package.json中包的版本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm install gulp@2.0.0 --save-dev</span><br></pre></td></tr></table></figure>
<p>检查更新</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm outdated</span><br><span class="line">Package  Current  Wanted  Latest  Location</span><br><span class="line">gulp       2.0.0   2.7.0   3.9.1  my_npm</span><br></pre></td></tr></table></figure>
<p>Wanted表示可以更新到的版本号，但它最新的却是3.9.1，打开package.json,我们可以看到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;devDependencies&quot;: &#123;</span><br><span class="line">  &quot;babel-cli&quot;: &quot;^6.16.0&quot;,</span><br><span class="line">  &quot;gulp&quot;: &quot;^2.0.0&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>包后面的<code>^</code>表示只更新第二位数据的版本号，如果改成<code>~</code>则表示只更新最后一位的版本号，如果版本号全部改成<code>*</code>,刚表示更新全部的版本号.</p>
<p>改成<code>~</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm outdated</span><br><span class="line">Package  Current  Wanted  Latest  Location</span><br><span class="line">gulp       2.0.0   2.0.1   3.9.1  my_npm</span><br></pre></td></tr></table></figure>
<p>改成<code>*</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm outdated</span><br><span class="line">Package  Current  Wanted  Latest  Location</span><br><span class="line">gulp       2.0.0   3.9.1   3.9.1  my_npm</span><br></pre></td></tr></table></figure>
<p>注意，一般在开发项目中最好不要改成<code>*</code>,因为大的版本号的更新可能会导致原来的功能不能正常使用。</p>
<h2 id="使用cnpm或者nrm修改npm源"><a href="#使用cnpm或者nrm修改npm源" class="headerlink" title="使用cnpm或者nrm修改npm源"></a>使用cnpm或者nrm修改npm源</h2><p>cnpm的使用参见淘宝的cnpm,这里主要使用nrm来管理切换npm使用的源</p>
<p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;npm install nrm -g</span><br></pre></td></tr></table></figure>
<p>查看可以使用的源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;nrm ls</span><br><span class="line"></span><br><span class="line">* npm ---- https:&#x2F;&#x2F;registry.npmjs.org&#x2F;</span><br><span class="line">  cnpm --- http:&#x2F;&#x2F;r.cnpmjs.org&#x2F;</span><br><span class="line">  taobao - https:&#x2F;&#x2F;registry.npm.taobao.org&#x2F;</span><br><span class="line">  nj ----- https:&#x2F;&#x2F;registry.nodejitsu.com&#x2F;</span><br><span class="line">  rednpm - http:&#x2F;&#x2F;registry.mirror.cqupt.edu.cn&#x2F;</span><br><span class="line">  npmMirror  https:&#x2F;&#x2F;skimdb.npmjs.com&#x2F;registry&#x2F;</span><br><span class="line">  edunpm - http:&#x2F;&#x2F;registry.enpmjs.org&#x2F;</span><br></pre></td></tr></table></figure>
<p>测试各个源的连接速度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;nrm test</span><br><span class="line"></span><br><span class="line">* npm ---- 1520ms</span><br><span class="line">  cnpm --- 300ms</span><br><span class="line">  taobao - 445ms</span><br><span class="line">  nj ----- Fetch Error</span><br><span class="line">  rednpm - Fetch Error</span><br><span class="line">  npmMirror  12046ms</span><br><span class="line">  edunpm - Fetch Error</span><br></pre></td></tr></table></figure>
<p>切换npm的源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\temp\npm&gt;nrm use cnpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   Registry has been set to: http:&#x2F;&#x2F;r.cnpmjs.org&#x2F;</span><br><span class="line"></span><br><span class="line"> D:\temp\npm&gt;nrm ls</span><br><span class="line"></span><br><span class="line">   npm ---- https:&#x2F;&#x2F;registry.npmjs.org&#x2F;</span><br><span class="line"> * cnpm --- http:&#x2F;&#x2F;r.cnpmjs.org&#x2F;</span><br><span class="line">   taobao - https:&#x2F;&#x2F;registry.npm.taobao.org&#x2F;</span><br><span class="line">   nj ----- https:&#x2F;&#x2F;registry.nodejitsu.com&#x2F;</span><br><span class="line">   rednpm - http:&#x2F;&#x2F;registry.mirror.cqupt.edu.cn&#x2F;</span><br><span class="line">   npmMirror  https:&#x2F;&#x2F;skimdb.npmjs.com&#x2F;registry&#x2F;</span><br><span class="line">   edunpm - http:&#x2F;&#x2F;registry.enpmjs.org&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>转photoshop下去除水印的六种方法</title>
    <url>/2014/12/25/photoshop-remove-vatermark/</url>
    <content><![CDATA[<h3 id="1、使用仿制图章工具去除文字。"><a href="#1、使用仿制图章工具去除文字。" class="headerlink" title="1、使用仿制图章工具去除文字。"></a>1、使用仿制图章工具去除文字。</h3><p>这是比较常用的方法。具体的操作是，选取仿制图章工具，按住Alt键，在无文字区域点击相似的色彩或图案采样， 然后在文字区域拖动鼠标复制以复盖文字。要注意的是，采样点即为复制的起始点。选择不同的笔刷直径会影响绘制的范围，而不同的笔刷硬度会影响绘制区域的边缘融合效果。 </p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/blog1.gif"></p>
<a id="more"></a>
<h3 id="2、使用修补工具去除文字。"><a href="#2、使用修补工具去除文字。" class="headerlink" title="2、使用修补工具去除文字。"></a>2、使用修补工具去除文字。</h3><p>如果图片的背景色彩或图案比较一致，使用修补工具就比较方便。具体的操作是，选取修补工具，在公共栏中选择修补项为“源”，关闭“透明”选项。然后用修补工具框选文字，拖动到无文字区域中色彩或图案相似的位置，松开鼠标就完成复制。修补工具具有自动匹配颜色的功能，复制出的效果与周围的色彩较为融合，这是仿制图章工具所不具备的。 </p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/blog2.gif"></p>
<h3 id="3、使用修复画笔工具去除文字。"><a href="#3、使用修复画笔工具去除文字。" class="headerlink" title="3、使用修复画笔工具去除文字。"></a>3、使用修复画笔工具去除文字。</h3><p>操作的方法与仿制图章工具相似。按住Alt键，在无文字区域点击相似的色彩或图案采样，然后在文字区域拖动鼠标复制以复盖文字。只是修复画笔工具与修补工具一样，也具有自动匹配颜色的功能，可根据需要进行选用。 </p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/blog3.gif"></p>
<h3 id="4、某些情况下，框选无文字区域的相似图形（或图案），按Ctrl-j键将其复制成新的图层，再利用变形工具将其变形，直接用以复盖文字会更为快捷。"><a href="#4、某些情况下，框选无文字区域的相似图形（或图案），按Ctrl-j键将其复制成新的图层，再利用变形工具将其变形，直接用以复盖文字会更为快捷。" class="headerlink" title="4、某些情况下，框选无文字区域的相似图形（或图案），按Ctrl+j键将其复制成新的图层，再利用变形工具将其变形，直接用以复盖文字会更为快捷。"></a>4、某些情况下，框选无文字区域的相似图形（或图案），按Ctrl+j键将其复制成新的图层，再利用变形工具将其变形，直接用以复盖文字会更为快捷。</h3><p><img src="http://7te946.com1.z0.glb.clouddn.com/blog4.gif"></p>
<h3 id="5、对于一些透视效果较强的画面（如地板），可以应用“消失点”滤镜进行处理。"><a href="#5、对于一些透视效果较强的画面（如地板），可以应用“消失点”滤镜进行处理。" class="headerlink" title="5、对于一些透视效果较强的画面（如地板），可以应用“消失点”滤镜进行处理。"></a>5、对于一些透视效果较强的画面（如地板），可以应用“消失点”滤镜进行处理。</h3><p>图例中的操作的方法是，框选要处理的文字区域（防止选区以外的部分也被覆盖）执行菜单命令：滤镜→消失点，进入消失点滤镜编辑界面。然后：（1）选取左边工具栏中的创建面板工具，由地板砖缝交汇处开始，沿着缝隙，依次点四个点，连成一个有透视效果的矩形。然后拖动其边线向右方及下方扩展，令面板完全复盖文字。（2）选取左边工具栏中的图章工具, 按住Alt键点击选取源图像点，绿色十字变红后，在文字区域拖动便完成复制。 </p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/blog5.gif"></p>
<h3 id="6、某些背景色为垂直线性渐变颜色的图标，有一个方便的方法去除文字。"><a href="#6、某些背景色为垂直线性渐变颜色的图标，有一个方便的方法去除文字。" class="headerlink" title="6、某些背景色为垂直线性渐变颜色的图标，有一个方便的方法去除文字。"></a>6、某些背景色为垂直线性渐变颜色的图标，有一个方便的方法去除文字。</h3><p>用矩形选框工具在无文字区域中作一个选区，选区不宜太宽，高度应高于文字。然后按住Ctrl+Alt键，连续按方向键（→或←），直至完全复盖文字则可。<br><img src="http://7te946.com1.z0.glb.clouddn.com/blog6.gif"></p>
]]></content>
      <tags>
        <tag>photoshop</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式速记口诀</title>
    <url>/2021/01/17/regexp-memonic/</url>
    <content><![CDATA[<h4 id="这是一个正则的助记口诀-顺口溜-让我们用30分钟时间来轻松背下难记的正则"><a href="#这是一个正则的助记口诀-顺口溜-让我们用30分钟时间来轻松背下难记的正则" class="headerlink" title="这是一个正则的助记口诀/顺口溜,让我们用30分钟时间来轻松背下难记的正则"></a>这是一个正则的助记口诀/顺口溜,让我们用30分钟时间来轻松背下难记的正则</h4><p>欢迎通过issue提交更好的口诀或者补充未提到的正则表达式</p>
<h2 id="首先先奉上口诀"><a href="#首先先奉上口诀" class="headerlink" title="首先先奉上口诀:"></a>首先先奉上口诀:</h2><blockquote>
<p>从前有个傻大三,</p>
</blockquote>
<blockquote>
<p>哇塞,日子过得特别难 <code>\w\s\r\z\d\t\b\n</code></p>
</blockquote>
<blockquote>
<p>人傻人穷只有捡破烂</p>
</blockquote>
<blockquote>
<p>做梦都想变成大富豪,就不用再出来捡破烂 <code>\W\S\D\B</code></p>
</blockquote>
<blockquote>
<p>每天哼着歌儿出去捡破烂</p>
</blockquote>
<blockquote>
<p>两手叉着腰,左手捡了右手又捡 <code>a|b</code></p>
</blockquote>
<blockquote>
<p>你问他捡到钱没 <code>?</code></p>
</blockquote>
<blockquote>
<p>左手回答得还行,右手被问得头冒金星 <code>+</code> <code>*</code></p>
</blockquote>
<blockquote>
<p>只有装进袋子把数字标 <code>&#123;n&#125;</code></p>
</blockquote>
<blockquote>
<p>关上门来把金银财宝往屋里搬 <code>[abc]</code></p>
</blockquote>
<blockquote>
<p>脑袋儿被门夹了不知道啥东西要选 <code>[^abc]</code></p>
</blockquote>
<blockquote>
<p>钢镚儿一碗,铁镚儿一碗 <code>(abc)</code></p>
</blockquote>
<blockquote>
<p>没问题的打个标记,好知道有好多钱 <code>(?&lt;name&gt;)</code></p>
</blockquote>
<blockquote>
<p>有问题的放一边,挤破脑袋也还要向前再看一眼 <code>(?=exp)</code> <code>(?!exp)</code> <code>(?&lt;=)</code> <code>(?&lt;!)</code></p>
</blockquote>
<blockquote>
<p>剩下的铜钱儿用线串 <code>[a-zA-Z0-9]</code></p>
</blockquote>
<blockquote>
<p>一不小心遇到地头蛇,一顿拷问被吓得赶紧溜回家 <code>+?</code> <code>*?</code></p>
</blockquote>
<h2 id="释义"><a href="#释义" class="headerlink" title="释义"></a>释义</h2><h3 id="嘴巴儿尖尖-句句都是钱"><a href="#嘴巴儿尖尖-句句都是钱" class="headerlink" title="嘴巴儿尖尖,句句都是钱"></a>嘴巴儿尖尖,句句都是钱</h3><p>尖尖代表<code>^</code>符号,钱代表<code>$</code>符号</p>
<p>傻大三这个人一张嘴说话,句句都是以钱收尾</p>
<p><strong>所以我们get到了</strong></p>
<table>
<thead>
<tr>
<th>正则表达式</th>
<th>描述</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>^</code></td>
<td>匹配字符串的开始</td>
<td><code>^acb</code> 匹配以abc开头的字符串</td>
</tr>
<tr>
<td><code>$</code></td>
<td>匹配字符串结尾</td>
<td><code>abc$</code>匹配以abc结尾的字符串</td>
</tr>
</tbody></table>
<h3 id="哇塞-日子过得特别难"><a href="#哇塞-日子过得特别难" class="headerlink" title="哇塞,日子过得特别难."></a>哇塞,日子过得特别难.</h3><p>在正则里面有许多的元字符,这里收集了比较常用的一些,取元字符的来当声母,用来助记这些元字符,当然,我们更明白元字符所对应的英文单词,就无须死背元字符所对应的的内容了.</p>
<p><strong>所以我们get到了一大串的元字符</strong></p>
<table>
<thead>
<tr>
<th>代码</th>
<th>描述</th>
<th>对应文字</th>
<th>对应单词</th>
</tr>
</thead>
<tbody><tr>
<td><code>\w</code></td>
<td>匹配一个单词的组成部分,字符,数字,下划线.(是否匹配中文视操作系统和应用环境而定)</td>
<td>哇</td>
<td>Word</td>
</tr>
<tr>
<td><code>\s</code></td>
<td>匹配空白符</td>
<td>塞</td>
<td>Space</td>
</tr>
<tr>
<td><code>\r</code></td>
<td>回车</td>
<td>日</td>
<td>Enter</td>
</tr>
<tr>
<td><code>\z</code></td>
<td>字符串结尾(类似$，但不受处理多行选项的影响)</td>
<td>子</td>
<td>?</td>
</tr>
<tr>
<td></td>
<td>过</td>
<td>过</td>
<td></td>
</tr>
<tr>
<td><code>\d</code></td>
<td>数字</td>
<td>得</td>
<td>Digital</td>
</tr>
<tr>
<td><code>\t</code></td>
<td>tab制表符</td>
<td>特</td>
<td>Tabulator key</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>边界,单词分界位置</td>
<td>别</td>
<td>Boundary</td>
</tr>
<tr>
<td><code>\n</code></td>
<td>换行符</td>
<td>难</td>
<td>Line feed</td>
</tr>
<tr>
<td><code>.</code></td>
<td>点号(相当于句号),在一个段落中,以它结尾,它包括了前的各种符号,但不匹配换行符.因为换行就是新段落了</td>
<td>.</td>
<td></td>
</tr>
</tbody></table>
<h3 id="做梦都想变成大富豪-就不用再出来捡破烂"><a href="#做梦都想变成大富豪-就不用再出来捡破烂" class="headerlink" title="做梦都想变成大富豪,就不用再出来捡破烂"></a>做梦都想变成大富豪,就不用再出来捡破烂</h3><p>变成大富豪,表示元字符变成了大写字母</p>
<p>就不用再出来破烂,表示不再匹配,相当于对以上小写的元字符取反</p>
<p><strong>所以我们get到了</strong></p>
<table>
<thead>
<tr>
<th>代码</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>\W</code></td>
<td>匹配一个非单词的组成部分,字符,数字,下划线.(是否匹配中文视操作系统和应用环境而定)</td>
</tr>
<tr>
<td><code>\S</code></td>
<td>匹配非空白符</td>
</tr>
<tr>
<td><code>\D</code></td>
<td>非数字</td>
</tr>
<tr>
<td><code>\B</code></td>
<td>非边界,单词分界位置</td>
</tr>
</tbody></table>
<h3 id="两手叉着腰-左手捡了右手又捡"><a href="#两手叉着腰-左手捡了右手又捡" class="headerlink" title="两手叉着腰,左手捡了右手又捡"></a>两手叉着腰,左手捡了右手又捡</h3><p>这一表示正则里面的分枝匹配,形如<code>a|b</code>表示两边或的匹配关系,即可以匹配<code>a</code>也可以匹配<code>b</code></p>
<p>傻大三捡垃圾,左边有就左手捡到,右边有,就右手捡起来.</p>
<h3 id="你问他捡到钱没-左手回答得还行-右手被问得头冒金星-只有装进袋子把数字标"><a href="#你问他捡到钱没-左手回答得还行-右手被问得头冒金星-只有装进袋子把数字标" class="headerlink" title="你问他捡到钱没?左手回答得还行,右手被问得头冒金星,只有装进袋子把数字标"></a>你问他捡到钱没?左手回答得还行,右手被问得头冒金星,只有装进袋子把数字标</h3><p>问到捡到钱没,这是一个问句,回答应该是是与否,代表0或者1,所以有正则<code>?</code>匹配0次或者1次</p>
<p>因为他左手刚刚捡到了一块垃圾,所以他傻傻地也知道左手捡到有东西,在数学里面就是用正号<code>+</code>表示,至少有一个.</p>
<p>被问得头冒金星,他也不知道右手到底有没有捡到有东西了.金星用<code>*</code>表示,可能没有捡到有,也可能捡到很多</p>
<p>只好数一下装进袋子里面,用数字标上有多少.袋子用<code>&#123;&#125;</code>表示,数字用<code>n</code>表示有多少个.得到完整的正则表达式<code>&#123;n&#125;</code>即表示前面的匹配<code>n</code>次</p>
<p><strong>于是我们get到的正则的匹配模式</strong></p>
<table>
<thead>
<tr>
<th>代码</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>+</code></td>
<td>匹配至少一次</td>
</tr>
<tr>
<td><code>*</code></td>
<td>匹配0次或者多次</td>
</tr>
<tr>
<td><code>?</code></td>
<td>匹配零次或者一次</td>
</tr>
<tr>
<td><code>&#123;n&#125;</code></td>
<td>匹配n次</td>
</tr>
<tr>
<td><code>&#123;n,m&#125;</code></td>
<td>匹配n到m次</td>
</tr>
<tr>
<td><code>&#123;n,&#125;</code></td>
<td>匹配n次或者更多次,没有m代表无穷尽</td>
</tr>
</tbody></table>
<h3 id="关上门来把金银财宝往屋里搬-脑袋儿被门夹了不知道啥东西要选"><a href="#关上门来把金银财宝往屋里搬-脑袋儿被门夹了不知道啥东西要选" class="headerlink" title="关上门来把金银财宝往屋里搬,脑袋儿被门夹了不知道啥东西要选"></a>关上门来把金银财宝往屋里搬,脑袋儿被门夹了不知道啥东西要选</h3><p>关上门表示<code>[]</code>符号,关在里面的金银财宝,都可以往屋里搬,所以表达式<code>[abc]</code>表示匹配<code>abc</code>任意一个.</p>
<p>结果傻大三的头<code>^</code>不小心被门给夹住了,不知道要这些金银财宝了.所以表达式<code>[^abc]</code>表示匹配不是<code>abc</code>这些字符的.</p>
<h3 id="钢镚儿一碗-铁镚儿一碗"><a href="#钢镚儿一碗-铁镚儿一碗" class="headerlink" title="钢镚儿一碗,铁镚儿一碗"></a>钢镚儿一碗,铁镚儿一碗</h3><p>碗用<code>()</code>表示,傻大三还是知道对这些垃圾进行分类,也就是正则里面的分组,分组之后,不仅可以用于前面的匹配模式,也可以用于后面的反向引用和零宽匹配及更多的功能.</p>
<p>比如<code>(abc)&#123;2&#125;</code>表示匹配连续的两个<code>abc</code>即<code>abcabc</code></p>
<h3 id="没问题的打个标记-好知道有好多钱"><a href="#没问题的打个标记-好知道有好多钱" class="headerlink" title="没问题的打个标记,好知道有好多钱"></a>没问题的打个标记,好知道有好多钱</h3><p>傻大三对碗打个标记,以免有疑问<code>?</code>时才好知道有好多钱,所以有正则表达式形式<code>(?&lt;name&gt;exp)</code>,打好标记之后,在后续就可以通过这个标记来识别引用了.</p>
<p>比如<code>\b(?&lt;Word&gt;\w+)\b\s+\k&lt;Word&gt;\b</code>表示匹配连续重复的单词,比如<code>go go</code>.如果不打标记,默认使用数字来识别,每个分组会自动拥有一个<strong>组号</strong>，规则是：从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2，以此类推。所以这个表达式不打标记的写法就是<code>\b(\w+)\b\s+\1\b</code></p>
<h3 id="有问题的放一边-挤破脑袋也还要向前再看一眼"><a href="#有问题的放一边-挤破脑袋也还要向前再看一眼" class="headerlink" title="有问题的放一边,挤破脑袋也还要向前再看一眼"></a>有问题的放一边,挤破脑袋也还要向前再看一眼</h3><p>有问题<code>?</code>的,有可能是真钢镚,即等号<code>=</code>表示,有可能不是真钢镚,即非<code>!</code>表示</p>
<p>放一边,表示只匹配了,但不参与捕获.和前面的<code>^</code>,<code>$</code>,<code>\b</code>一样,是属于零宽断言,它们 本身不匹配任何字符,只是对 “字符串的两头” 或者 “字符之间的缝隙” 附加了一个条件.</p>
<p>于是有正预测先行断言<code>(?=exp)</code>,表示断言自身出现的位置后面能匹配表达式,比如<code>\b\w+(?=ed\b)</code>表示匹配以<code>ed</code>结尾的单词,但不包含<code>ed</code>;</p>
<p>同理有负预测先行断言<code>(?!exp)</code>,和上面的意思相反,即不能满足表达式.比如<code>\b\w*e(?!d)\w*\b</code>表示匹配包含<code>e</code>的单词,但同时<code>e</code>后面不能跟着字符<code>d</code>.它和<code>\b\w*e[^d]\w*\b</code>的区别是,后者的<code>[^d]</code>会参与一次匹配,比如它会匹配上<code>e,abc</code>,因为里面的<code>,</code>参与了<code>[^d]</code>的匹配.</p>
<p>挤破脑袋向前<code>&lt;</code>,前面说的是先行断言,即先匹配上前面的表达式.相反的,挤破脑袋往前面去就变成了后发断言.即有</p>
<p>正预测后发断言<code>(?&lt;=exp)</code>表示断言自身出现的位置前端能匹配表达式<code>exp</code></p>
<p>负预测后发断言<code>(?&lt;!exp)</code>表示断言自身出现的位置前面不匹配表达式<code>exp</code></p>
<p>零宽断言是先满足匹配其自身表达式后,再获取断言里面的表达式是否满足. 比如<code>(?&lt;=\d&#123;4&#125;)\d+(?=\d&#123;4&#125;)</code>去匹配<code>1234567890</code>,先匹配上<code>\d+</code>,再判断<code>(?&lt;=\d&#123;4&#125;</code>和<code>(?=d&#123;4&#125;)</code>,于是最终的匹配结果是<code>56</code>.</p>
<p><strong>综合以上三条,我们对于正则分组,可以再总结一下</strong></p>
<table>
<thead>
<tr>
<th>代码</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>(exp)</code></td>
<td>分组匹配,后续可以通过<code>\n</code>进行反向引用</td>
</tr>
<tr>
<td><code>(?&lt;word&gt;exp)</code></td>
<td>分组匹配命名,后续可以通过<code>\k&lt;word&gt;</code>进行反向引用</td>
</tr>
<tr>
<td><code>(?:exp)</code></td>
<td>只分组,不生成分组编号,也不捕获.相当于只看一眼<code>:</code>而已</td>
</tr>
<tr>
<td><code>(?=exp)</code></td>
<td>匹配<code>exp</code>前面的位置</td>
</tr>
<tr>
<td><code>(?!exp)</code></td>
<td>匹配后面不是跟的<code>exp</code>的位置</td>
</tr>
<tr>
<td><code>(?&lt;=exp)</code></td>
<td>匹配<code>exp</code>后面的后面</td>
</tr>
<tr>
<td><code>(?&lt;!exp)</code></td>
<td>匹配前面不是跟的<code>exp</code>的位置</td>
</tr>
</tbody></table>
<h3 id="剩下的铜钱儿用线串"><a href="#剩下的铜钱儿用线串" class="headerlink" title="剩下的铜钱儿用线串"></a>剩下的铜钱儿用线串</h3><p>用线<code>-</code>串,表示把铜钱儿都串起来了,就是正则里面的<code>[a-zA-Z0-9]</code>这种表示方法,表示<code>a</code>到<code>z</code>的全部大小写字母和<code>0</code>到<code>9</code>的全部数字.</p>
<h3 id="一顿拷问被吓得赶紧溜回家"><a href="#一顿拷问被吓得赶紧溜回家" class="headerlink" title="一顿拷问被吓得赶紧溜回家"></a>一顿拷问被吓得赶紧溜回家</h3><p>遇到地头蛇拷问<code>?</code>,溜回家不再捡垃圾,就是正则里面的遇到<code>?</code>由默认的贪婪匹配变成了非贪婪(惰性)匹配.</p>
<p>比如对于字符串<code>aabaab</code>用正则<code>a.*b</code>会匹配上整个字符串,因为它是贪婪匹配的,里面的<code>.*</code>会尽可能长的进行匹配.</p>
<p>而<code>a.*?b</code>则只会匹配<code>aab</code>.因为对于<code>.*</code>遇到了<code>?</code>号,就被变成了非贪婪匹配了.</p>
<p><strong>于是结合前面的匹配模式,我们可以get到</strong></p>
<table>
<thead>
<tr>
<th>代码</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>+?</code></td>
<td>匹配至少一次,但尽可能少地匹配</td>
</tr>
<tr>
<td><code>*?</code></td>
<td>匹配0次或者多次,但尽可能少地匹配</td>
</tr>
<tr>
<td><code>??</code></td>
<td>匹配零次或者一次,但尽可能少地匹配</td>
</tr>
<tr>
<td><code>&#123;n,m&#125;?</code></td>
<td>匹配n到m次,但尽可能少地匹配</td>
</tr>
<tr>
<td><code>&#123;n,&#125;?</code></td>
<td>匹配n次或者更多次,没有m代表无穷尽,但尽可能少地匹配</td>
</tr>
</tbody></table>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://u.jd.com/t0YyaYQ">《正则表达式必知必会》</a></p>
<p><a href="https://deerchao.cn/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">正则表达式MDN</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>regexp</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript中的词法作用域</title>
    <url>/2016/05/18/scop/</url>
    <content><![CDATA[<p>有一个例子可以很好地展示javascript中的语法作用域的特性:</p>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line">  foo();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">bar();<span class="comment">//2</span></span><br></pre></td></tr></table></figure>
<p>同大多数语言一样,javascript也是采用的词法作用域.</p>
<p>作用域分为两种,一种就是词法作用域(Lexical Scope),一种是动态作用域(Dynamic Scope).</p>
<p>词法作用域是属静态作用域模型,也就是变量,函数的声明,引用都是在编译阶段就完成了,它们不会受到执行上下文,调用方式的影响.比如上面定义的函数foo,它里面对a的RHS查询，是基于它本身内部变量定义，函数参数以及全局变量中进行查询的，所以就算在bar中进行执行,它的静态模型也是不会被改变的.因此是正常地输出2.</p>
<p>相反的,如果是动态作用域,则RHS查询是在当前的执行环境中进行查询，所以它是动态改变的，它会受到执行上下文，调用方式的改变，如上面这个例子，如果采用动态作用域的方式来执行的话，在bar内部执行foo,foo对a进行RHS查询时，自己内部作用域中进行查询，没有查询到，继续向当前执行环境中进行查询，于是查询到了bar中定义的a,所以最终输出了结果3.</p>
<p>总结下来就是:</p>
<blockquote class="blockquote-center">
<p>遇到既不是形参也不是函数内部定义的局部变量的变量时，词法作用域的函数去函数定义时的环境中查询,动态域的函数到函数调用时的环境中查询。 </p>

</blockquote>


<h3 id="词法作用域的欺骗"><a href="#词法作用域的欺骗" class="headerlink" title="词法作用域的欺骗"></a>词法作用域的欺骗</h3><h4 id="eval欺骗法"><a href="#eval欺骗法" class="headerlink" title="eval欺骗法"></a>eval欺骗法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">eval</span>(str);</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  foo(<span class="string">&quot;var a = 3&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">bar();<span class="comment">//3</span></span><br></pre></td></tr></table></figure>
<p>我们知道,javascript中分词阶段,只会对变量进行声明.在对foo进行分词时,首先会忽略eval内部的执行代码,这个时候对a的静态引用还是基于函数内部定义,参数和全局变量的,但这个时候没有进行”a = 2”这个赋值操作,因为它应该是在执行环节进行的.</p>
<p>接下来在执行环节就会出现问题了,因为eval是立即执行内部代码的,我们在”a = 2”赋值操作之前,执行了”var a = 3”这句操作,它覆盖了原来的”var a = 2”操作,所以完成了一次词法作用域的欺骗,最终输出结果3.</p>
<h4 id="with欺骗法"><a href="#with欺骗法" class="headerlink" title="with欺骗法"></a>with欺骗法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">with</span>(<span class="params">obj</span>)</span> &#123;</span><br><span class="line">        a = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">&#125;,</span><br><span class="line">    bar = &#123;</span><br><span class="line">    b: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">go(foo);</span><br><span class="line"><span class="built_in">console</span>.log(foo.a); <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(a);     <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line">go(bar);</span><br><span class="line"><span class="built_in">console</span>.log(bar.a); <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(a);        <span class="comment">// 2(对头，a变成了一枚金闪闪的全局变量)</span></span><br></pre></td></tr></table></figure>
<p>我们常常不喜欢with的原因就是这样的:当bar对象中没有a这个属性的时候,with不是给它新增一个a的属性,而是在全局变量中新增了一个属性,也正因为这样的特性,导致它改变了原来定义的”var a = 10”这个值.</p>
<p>和之前的一篇文章<a href="http://blog.linxiaodong.com/2016/05/17/js-out-of-use-var/">《不使用var就不是声明变量》</a>一样,这里不是声明一个变量,而是给window新增加了一个属性.通过代码可以测试出.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">with</span>(<span class="params">obj</span>)</span> &#123;</span><br><span class="line">        a = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> bar = &#123;</span><br><span class="line">    b: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">go(bar);</span><br><span class="line"><span class="built_in">console</span>.log(bar.a); <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(a);        <span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> a); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>利用autohotkey打开TotalCommander并自动点击123</title>
    <url>/2015/01/17/tc-ahk/</url>
    <content><![CDATA[<p>根据网上的代码优化而来，可以实现</p>
<blockquote>
<p>快捷打开TotalCommander<br>如果已经打开TotalCommander则激活TotalCommander<br>如果是未注册版本就自动点击数字1，2，3<br>未注册窗口设置为透明</p>
</blockquote>
<a id="more"></a>
<p>实现的代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#t:: </span><br><span class="line">IfWinExist ahk_class TTOTAL_CMD</span><br><span class="line">&#123;</span><br><span class="line">	WinActivate</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">	Run &quot;c:\totalcmd\TOTALCMD64.EXE&quot;  ;设置为自己TC所在位置 </span><br><span class="line">	WinWait,ahk_class TNASTYNAGSCREEN,,1 ;探测NagPage，若机器慢，1可改为3、4、5 </span><br><span class="line">	If ErrorLevel&#x3D;0 ;如果有NagPage，需要模拟发送1、2、3 </span><br><span class="line">		&#123; </span><br><span class="line">		WinSet,Transparent,0,ahk_class TNASTYNAGSCREEN ;设置NagPage为透明 </span><br><span class="line">		WinActivate,ahk_class TNASTYNAGSCREEN ;抢焦点 </span><br><span class="line">		WinGetText,NagTextStr ;获取NagPage信息并处理 </span><br><span class="line">		StringMid,NagSendChar,NagTextStr,1,1 </span><br><span class="line">		WinActivate,ahk_class TNASTYNAGSCREEN ;再抢焦点 </span><br><span class="line">		Send,%NagSendChar% ;模拟发送1、2、3 </span><br><span class="line">		&#125; </span><br><span class="line">	WinActivate,ahk_class TTOTAL_CMD </span><br><span class="line">&#125;</span><br><span class="line">return </span><br></pre></td></tr></table></figure>
<p>注：代码中第15行<code>       StringMid,NagSendChar,NagTextStr,1,1</code>网上的代码最后数字全部设置的为10，1,经过测试，发现都无法运行，最终获取到的是全部的窗口内容，只有设置为1,1才能正确截取到相应的数字。不知道是不是和我的运行环境有关？win7 x64+TotalCommander 8.51a x64</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>TotalCommander</tag>
      </tags>
  </entry>
  <entry>
    <title>通过call轻松理解this</title>
    <url>/2016/05/27/this/</url>
    <content><![CDATA[<p>在javascript中的一个重大的难点就是对this的理解，因为javascript虽然是一种词法作用域的语言，但里面的this却似乎总是在变化中的，我们很难有一个既定的规则来描述在表示的是什么。同时它也未非像它的字面意思那样，表示指向当前函数。</p>
<a id="more"></a>
<p>比如</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="built_in">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line">test();<span class="comment">//1</span></span><br></pre></td></tr></table></figure>
<p>从字面上来理解，也许this.a表示test中的a更容易让我们授受，反而结果却并不是这样的。这也就是为什么在ES6中会出现<code>=&gt;</code>符号的原因了。</p>
<p>借力，也许是最轻松的办法，在这里，也许我们通过借力js中的call方法能够让我们更轻松地弄清楚js中的this在各种情况之下的指向。</p>
<p>一.call的本来面目</p>
<p>我们知道，js中的call就是改变一个对象的引用，它可以修改函数中的this引用。这点就可以让我们很轻松地明白了，你call了什么，this就是代表的什么了。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">b</span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&quot;a:&quot;</span>+<span class="built_in">this</span>.a+<span class="string">&quot; b:&quot;</span>+b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">	a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">	a:<span class="number">3</span></span><br><span class="line">&#125;;</span><br><span class="line">show.call(obj1,<span class="number">4</span>);<span class="comment">//a:2 b:4</span></span><br><span class="line">show.call(obj2,<span class="number">4</span>);<span class="comment">//a:3 b:4</span></span><br></pre></td></tr></table></figure>
<p>二.没有call，call依然存在</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">b</span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&quot;a:&quot;</span>+<span class="built_in">this</span>.a+<span class="string">&quot; b:&quot;</span>+b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">	a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">	a:<span class="number">3</span></span><br><span class="line">&#125;;</span><br><span class="line">show(<span class="number">4</span>);<span class="comment">//a:1 b:4</span></span><br><span class="line">show.call(<span class="built_in">window</span>,<span class="number">4</span>);<span class="comment">//a:1 b:4</span></span><br></pre></td></tr></table></figure>
<p>换一个思路来理解这段代码，其实<code>show(4)</code>也就是相当于<code>show.call(window,4)</code>;<br>也就是说，直接执行函数的时候，其实就是call了一个window对象进去。只是我们把它给简写了而已。</p>
<p>三.隐式调用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">b</span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&quot;a:&quot;</span>+<span class="built_in">this</span>.a+<span class="string">&quot; b:&quot;</span>+b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">	a:<span class="number">2</span>,</span><br><span class="line">	show:show</span><br><span class="line">&#125;</span><br><span class="line">obj.show(<span class="number">3</span>);<span class="comment">//a:2 b:3</span></span><br><span class="line">show.call(obj,<span class="number">3</span>);<span class="comment">//a:2 b:3</span></span><br></pre></td></tr></table></figure>
<p>看得出，在对象的执行上下方下中的代码，其<code>obj.show(3)</code>也就相当于<code>show.call(obj.3)</code></p>
<p>四.当有了new</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">	<span class="built_in">this</span>.a = a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> show(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(b.a);<span class="comment">//2</span></span><br></pre></td></tr></table></figure>
<p>我们知道，new操作符是新生成一个实例对象出来，这里的操作其实也就是有点类似于<code>var b = &#123;&#125;</code>，当new了之后，其执行上下文也就是在b中了，所以它的指向也就是b了，和上面第三点的隐似调用非常类似。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>react从v15升级到v16</title>
    <url>/2017/09/29/update-react-from-v15-to-v16/</url>
    <content><![CDATA[<p>react已经发布了v16的正式版，同时也把license从<code>BSD</code>修改为<code>MIT</code>了，在折腾了router4之后，也来继续折腾react v16了，react的升级不像router那样变化之大，网上说的只要react v15在控制台里面没有什么wraning之类的，就可以直接升级到v16了，但在实际升级过程中，可能因为实际项目的差异，可能还需要做一些调整的地方。</p>
<a id="more"></a>

<h1 id="一-需要同时升级react和react-dom"><a href="#一-需要同时升级react和react-dom" class="headerlink" title="一.需要同时升级react和react-dom"></a>一.需要同时升级<code>react</code>和<code>react-dom</code></h1><p>如果你只是升级了react的话，肯定去运行出一大堆错误出来的，必须同时把<code>react-dom</code>也升级到v16版本。<br>比如下面这个错误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cannot find module &quot;react&#x2F;lib&#x2F;ReactComponentTreeHook&quot;</span><br></pre></td></tr></table></figure>
<h1 id="二-需要移除contextTypes"><a href="#二-需要移除contextTypes" class="headerlink" title="二.需要移除contextTypes"></a>二.需要移除<code>contextTypes</code></h1><p>因为在我之前的代码的，路由的跳转用的是下面这种方式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static contextTypes &#x3D; &#123;</span><br><span class="line">    router: React.PropTypes.object</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>升级之后，将不再支持<code>React.PropTypes.object</code>了，而我的项目也使用了router v4了，所以全部移除这部分代码，改为history的方式</p>
<h1 id="三-升级第三方包"><a href="#三-升级第三方包" class="headerlink" title="三.升级第三方包"></a>三.升级第三方包</h1><p>一些奇怪的错误，可能是第三方包没有兼容react v16而引起的，我们尽可能把第三方包升级到最新版。以及删除之前所有的模块再来重新包装一些包，因为单独升级一个包，不一定能同时升级与它相关的依赖包。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -rf node_modules</span><br><span class="line">npm cache clean</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure>
<h1 id="四-Stateless-function-components-cannot-be-given-refs-Attempts-to-access-this-ref-will-fail-null"><a href="#四-Stateless-function-components-cannot-be-given-refs-Attempts-to-access-this-ref-will-fail-null" class="headerlink" title="四.Stateless function components cannot be given refs. Attempts to access this ref will fail.null"></a>四.<code>Stateless function components cannot be given refs. Attempts to access this ref will fail.null</code></h1><p>目前看来应该是UI库antd的一个兼容问题 <a href="https://github.com/ant-design/ant-design/issues/7784">https://github.com/ant-design/ant-design/issues/7784</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>利用git webhook 来同步更新代码</title>
    <url>/2017/09/22/use-git-webhook-to-update-website/</url>
    <content><![CDATA[<h1 id="一-安装git"><a href="#一-安装git" class="headerlink" title="一.安装git"></a>一.安装git</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="二-给zjjidelu用户添加用户目录"><a href="#二-给zjjidelu用户添加用户目录" class="headerlink" title="二.给zjjidelu用户添加用户目录"></a>二.给zjjidelu用户添加用户目录</h1><p>因为我们需要通过ssh的方式来连接git,这里我是用zijidelu来安装的控制面板，通过在php中执行<code>echo shell_exec(&#39;whoami&#39;)</code>能够看到php脚本是以zijidelu用户来执行的，所以网站的文件权限和用户组我设置的是<code>zijidelu:zijideluGroup</code>,我需要用<code>zijidelu</code>这个用户来执行git以避免文件权限的变化。运行git的时候。会从当前用户目录中去查找ssh key;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;home&#x2F;</span><br><span class="line">mkdir zijidelu_home</span><br><span class="line">cd zijidelu_home</span><br><span class="line">mkdir .ssh</span><br><span class="line">cd ..&#x2F;</span><br><span class="line">cd ..&#x2F;</span><br><span class="line">chown -R zijidelu:zijideluGroup zijidelu_home</span><br></pre></td></tr></table></figure>
<h1 id="三-生成ssh-key"><a href="#三-生成ssh-key" class="headerlink" title="三.生成ssh key"></a>三.生成ssh key</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -u zijidelu ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>ssh保存的路径就是我们上一步创建的目录</p>
<p>接下来把这个目录设置成<code>zijidelu</code>这个用户的主目录。<code>vi /etc/passwd</code>修改<code>zijidelu</code>用户为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zijidelu:x:1520:1520::&#x2F;home&#x2F;zijidelu_home:&#x2F;sbin&#x2F;nologin</span><br></pre></td></tr></table></figure>

<h1 id="四-撰写webhook执行的php脚本"><a href="#四-撰写webhook执行的php脚本" class="headerlink" title="四.撰写webhook执行的php脚本"></a>四.撰写webhook执行的php脚本</h1><p>这个是用于<code>gitee</code>的脚本，其它如coding也类似，只是取得的参数可能有变化。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$access_token</span> = <span class="string">&#x27;******&#x27;</span>;</span><br><span class="line"><span class="variable">$access_ip</span> = <span class="keyword">array</span>(<span class="string">&#x27;*.*.*.*&#x27;</span>);</span><br><span class="line"><span class="comment">/* get user token and ip address */</span></span><br><span class="line"><span class="variable">$client_ip</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="comment">/* create open log */</span></span><br><span class="line"><span class="variable">$fs</span> = fopen(<span class="string">&#x27;./webhook.log&#x27;</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">fwrite(<span class="variable">$fs</span>, <span class="string">&#x27;Request on [&#x27;</span>.date(<span class="string">&quot;Y-m-d H:i:s&quot;</span>).<span class="string">&#x27;] from [&#x27;</span>.<span class="variable">$client_ip</span>.<span class="string">&#x27;]&#x27;</span>.PHP_EOL);</span><br><span class="line"><span class="comment">/* test token */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* test ip */</span></span><br><span class="line"><span class="comment">// if ( ! in_array($client_ip, $access_ip))</span></span><br><span class="line"><span class="comment">//      &#123;</span></span><br><span class="line"><span class="comment">//     echo &quot;error 503&quot;;</span></span><br><span class="line"><span class="comment">//     fwrite($fs, &quot;Invalid ip [&#123;$client_ip&#125;]&quot;.PHP_EOL);</span></span><br><span class="line"><span class="comment">//     exit(0);</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">/* get json data */</span></span><br><span class="line"><span class="variable">$json</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="variable">$data</span> = json_decode(<span class="variable">$json</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="variable">$client_token</span> = <span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$client_token</span> !== <span class="variable">$access_token</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;error 403&quot;</span>;</span><br><span class="line">    fwrite(<span class="variable">$fs</span>, <span class="string">&quot;Invalid token [<span class="subst">&#123;$client_token&#125;</span>]&quot;</span>.PHP_EOL);</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* get branch */</span></span><br><span class="line"><span class="variable">$branch</span> = <span class="variable">$data</span>[<span class="string">&quot;ref&quot;</span>];</span><br><span class="line">fwrite(<span class="variable">$fs</span>, <span class="string">&#x27;=======================================================================&#x27;</span>.PHP_EOL);</span><br><span class="line"><span class="comment">/* if you need get full json input */</span></span><br><span class="line"><span class="comment">//fwrite($fs, &#x27;DATA: &#x27;.print_r($data, true).PHP_EOL);</span></span><br><span class="line"><span class="comment">/* branch filter */</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$branch</span> === <span class="string">&#x27;refs/heads/master&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">/* if master branch*/</span></span><br><span class="line">        fwrite(<span class="variable">$fs</span>, <span class="string">&#x27;BRANCH: &#x27;</span>.print_r(<span class="variable">$branch</span>, <span class="literal">true</span>).PHP_EOL);</span><br><span class="line">        fwrite(<span class="variable">$fs</span>, <span class="string">&#x27;=======================================================================&#x27;</span>.PHP_EOL);</span><br><span class="line">        <span class="variable">$fs</span> <span class="keyword">and</span> fclose(<span class="variable">$fs</span>);</span><br><span class="line">        <span class="comment">/* then pull master */</span></span><br><span class="line">        exec(<span class="string">&quot;/home/deploy/deploy.sh&quot;</span>);</span><br><span class="line">        &#125; </span><br><span class="line"><span class="comment">// else </span></span><br><span class="line"><span class="comment">//      &#123;</span></span><br><span class="line"><span class="comment">//      /* if devel branch */</span></span><br><span class="line"><span class="comment">//      fwrite($fs, &#x27;BRANCH: &#x27;.print_r($branch, true).PHP_EOL);</span></span><br><span class="line"><span class="comment">//      fwrite($fs, &#x27;=======================================================================&#x27;.PHP_EOL);</span></span><br><span class="line"><span class="comment">//      $fs and fclose($fs);</span></span><br><span class="line"><span class="comment">//      /* pull devel branch */</span></span><br><span class="line"><span class="comment">//      exec(&quot;/home/deploy/devel_deploy.sh&quot;);</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="五-撰写sh脚本"><a href="#五-撰写sh脚本" class="headerlink" title="五.撰写sh脚本"></a>五.撰写sh脚本</h1><p>这一步通过<code>#echo $USER &gt;&gt; /home/deploy/deploy.log</code>通过查到sh脚本是以<code>zijidelu</code>这个用户来执行的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash </span><br><span class="line">cd &#x2F;home&#x2F;wwwroot&#x2F;518zst</span><br><span class="line">#echo $USER &gt;&gt; &#x2F;home&#x2F;deploy&#x2F;deploy.log</span><br><span class="line">#sudo -u zijidelu echo &quot;OKOK4&quot; &gt;&gt; &#x2F;home&#x2F;deploy&#x2F;deploy.log </span><br><span class="line">git reset --hard HEAD &gt;&gt; &#x2F;home&#x2F;deploy&#x2F;deploy.log</span><br><span class="line">git pull origin master &gt;&gt; &#x2F;home&#x2F;deploy&#x2F;deploy.log</span><br><span class="line">#chmod 777 data&#x2F;order_print_seller.html</span><br><span class="line">#chmod 777 data&#x2F;order_print_vendor.html</span><br></pre></td></tr></table></figure>
<p>这个脚本这最近一次的部署中是正常运行的，因为他是以<code>zijidelu</code>这个用户来执行的。<br>但在我以前的编写中是加了一条<code>sudo -u zijidelu</code>,像：<code>sudo -u zijidelu git reset --hard HEAD</code>，同时<code>vi /etc/soduers</code>在root用户下面添加了这一句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">daemon  ALL&#x3D;(ALL)       NOPASSWD:ALL</span><br></pre></td></tr></table></figure>
<p>表示deamon用户可以在非终端模式下执行命令，这样在以前的部署中正常执行的。<br>反而在这一次这样设置后没能正常执行，<code>sudo -u</code>这条命令没有任何的结果</p>
<p>经测试，这是因为php执行的模式的问题，当php以<code>FastCGI</code>执行的时候，我们可以按照上面的脚本来写即可。但如果以非<code>FastCGI</code>模式来运行的时候，<code>echo $USER &gt;</code>只是一行空白，这个时候执行的命令前面就需要加上<code>sudo -u</code>，并且在sudoers中添加<code>deamon</code>这个用户的脚本执行。</p>
<h1 id="六-测试"><a href="#六-测试" class="headerlink" title="六.测试"></a>六.测试</h1><p>第一次最好在服务器端通过<code>sudo -u zijidelu git pull origin master</code>来运行一次，因为首次通过ssh方式来连接git的话，在know_host里面没有记录，会弹出确认信息，如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The authenticity of host &#39;git.coding.net (123.59.83.79)&#39; can&#39;t be established.</span><br><span class="line">RSA key fingerprint is 98:ab:2b:30:60:00:82:86:bb:85:db:87:22:c4:4f:b1.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)? </span><br></pre></td></tr></table></figure>
<p>我们输入yes之后，以后就不用再确认了，这个时候通过exec来执行git也能成功执行了。<br>否则如果我们直接通过exec来执行的话，git pull这一步是不会执行的，也不会抛出任何信息的。</p>
<p>测试可以分步测试，在php文件中通过写入文件来查看php是否正常执行，然后通过sh脚本的输出看sh脚本是否正常执行。<br>同时也可以在终端下测试sh执行是否正确。</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>一些前端学习中好的书籍，整理</title>
    <url>/2015/01/26/w3c-good-book/</url>
    <content><![CDATA[<p>都是一些正在看和准备看的前端书籍，偶然在一位大牛的博客里找到整理出来的。</p>
<a id="more"></a>
<h3 id="一、Javascript方面的书籍："><a href="#一、Javascript方面的书籍：" class="headerlink" title="一、Javascript方面的书籍："></a>一、Javascript方面的书籍：</h3><p>1 JavaScript权威指南（第6版）：号称javascript圣经，前端必备；前端程序员学习核心JavaScript语言和由Web浏览器定义的JavaScript API的指南和综合参考手册；</p>
<p>2 JavaScript高级程序设计(第3版) ：前端必备书，如果你想真正进入前端世界，这是一本不可多得的进阶书，没什么好说的，必须细细品读；</p>
<p>3 JavaScript语言精粹 ：这是一本值得任何正在或准备从事JavaScript开发的人阅读，并且需要反复阅读的js书籍；</p>
<p>4 基于MVC的JavaScript Web富应用开发 ：这不是一本适合初学者看的书籍，更适合具有一定前端开发经验的从业人员看的框架书，如果你想构建一个复杂的前端应用，你会如获至宝；</p>
<p>5 JavaScript DOM编程艺术(第2版)：好书主要是dom操作和兼容方面的知识，值得一看；</p>
<p>6 JavaScript经典实例 ：可以看看，主要是有关javascript一些典型小工具，有些剖析的并不深入，总体来说可以看看；</p>
<p>7 JavaScript设计模式 ：写js不难。如何编写优美、结构化和可维护的代码呢？反复的揣摩这本书吧；</p>
<p>8 JavaScript编程精解 ： 了解一下可以；</p>
<p>9 JavaScript模式 ： 又一本设计模式的好书，如果你想让自身的Javascript技巧提高到一个新层次，成为专业的开发人员和程序员，反复阅读吧；</p>
<p>10 JavaScript高效图形编程： 是一本具有很强实操性的JavaScript图书，主要涉及JavaScript性能优化、高级UI设计、Web游戏开发、面向移动设备的开发、图形编程知识等</p>
<p>11 JavaScript RIA开发实战——最佳实践、性能、表现：主要介绍如何采用最合理的方式为RIA编写可靠的、易于维护的HTML、CSS和JavaScript代码，以及如何使用Ajax技术在后台实现浏览器与Web服务器的动态通信。可以细细读一下；</p>
<p>12 高性能JavaScript ： 又一本好书，涵盖了当今JavaScript开发者需要了解的所有性能问题，毫无疑问，它已加入我的性能最佳实践列表；值得细细品读并实践；</p>
<p>13 悟透JavaScript（美绘本）： 这是一本可以让你轻松加愉快的阅读的一本好书，读完你可能会领悟：哦原还可以这样；</p>
<p>14 Ajax权威指南 : 详细的展示了ajax技术的发展以及应用，对于了解ajax技术很不错的一本详尽书籍；</p>
<p>15 Node.js开发指南 : Node.js是一种新兴的开源技术，它将JavaScript从Web浏览器移植到常规的服务器端，使用Chrome的V8虚拟机来解释和执行JavaScript代码，能用于构建高性能、高可扩展的服务器和客户端应用，以实现真正“实时的Web应用”；</p>
<p>16 Node Web开发 : 雅虎架构师精准解读最炙手可热的Web开发技术；</p>
<p>17 jQuery Mobile权威指南：是系统学习jQuery Mobile的权威参考书；</p>
<p>18 数据可视化实战：使用D3设计交互式图表 ：web矢量图类库d3.js的工具书；</p>
<p>19 jQuery权威指南 : 学习jquery的入门书籍；</p>
<p>20 精彩绝伦的jQuery ： 名字起的不错，能忽悠不少人，入门级书籍；</p>
<p>21 锋利的jQuery ： 不错的一本jquery应用书籍；</p>
<h3 id="二、Html和Css方面书书籍："><a href="#二、Html和Css方面书书籍：" class="headerlink" title="二、Html和Css方面书书籍："></a>二、Html和Css方面书书籍：</h3><p>1 HTML 5与CSS 3权威指南 ：html5和css3入级好书；详尽讲解了HTML5与CSS 3的所有功能和特性；</p>
<p>2 HTML5移动Web开发指南：介绍了一下移动端的web开发技术，以及一些移动端框架：QueryMobile、Sencha Touch，以及PhoneGap；</p>
<p>3 响应式Web设计：HTML5和CSS3实战 ：有关响应式设计的知识并不是很多，大量篇幅写了html5和css3，这本书比较一般；</p>
<p>4 HTML5程序设计(第2版) ： 很全面的介绍了一下html5技术，前端人员都应该看一看；</p>
<p>5 编写高质量代码:Web前端开发修炼之道 ： 不可多得的一本前端开发规范书，前端开发人员的必读书；</p>
<p>6 精通CSS：高级Web标准解决方案 ：css兼容性解决方案汇总，好书；</p>
<p>7 CSS禅意花园 ：主要的Web设计原则以及它们运用的CSS布局技巧；</p>
<p>8 CSS权威指南 ： css经典工具书；</p>
<p>9 高性能网站建设进阶指南：Web开发者性能优化最佳实践 ： 好书啊！网站性能优化，浏览器加载渲染详细解析；</p>
<p>10 网站重构——应用Web标准进行设计 : 前端开发人员必读书，一本可以帮助网页设计师快速了解和掌握web标准设计的书；</p>
<p>11 变幻之美 DIV+CSS网页布局揭秘 ： 详细的介绍了从效果图到web布局实现的整个过程；</p>
<p>12 HTML5 Canvas基础教程 : canvas入门书籍；</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>前端</tag>
        <tag>javascript</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack一步一步深入学习应用</title>
    <url>/2017/02/08/webpack-step-by-step/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>全局安装webpack</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i webpack -g </span><br></pre></td></tr></table></figure>
<h2 id="第一步：最简使用"><a href="#第一步：最简使用" class="headerlink" title="第一步：最简使用"></a>第一步：最简使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir webpack-step &#x2F;&#x2F;新建一个目录并初始化它</span><br><span class="line">cd webpack-step</span><br><span class="line">npm init -y &#x2F;&#x2F;加y参数全部使用默认值快速初始化</span><br><span class="line">npm i webpack@1.14.0 -D &#x2F;&#x2F;项目中再安装一次webpack,webpack现在已经有2.0版本了，有些配置文件修改了，还是先安装1.0以上的版本吧</span><br><span class="line">touch test.js &#x2F;&#x2F;新建一个文件</span><br><span class="line">vi test.js &#x2F;&#x2F;编辑文件 写入console.log(&quot;hello world&quot;);并保存</span><br><span class="line">webpack test.js bundle.js &#x2F;&#x2F;运行webpack进行打包</span><br></pre></td></tr></table></figure>
<p>执行到这一步，就会在项目中打包生成一个bundle.js的打包文件<br>这就是webpack的最简使用方法了。</p>
<a id="more"></a>
<h2 id="第二步-开始使用webpack-config-js"><a href="#第二步-开始使用webpack-config-js" class="headerlink" title="第二步 开始使用webpack.config.js"></a>第二步 开始使用webpack.config.js</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch webpack.config.js</span><br><span class="line">vi webpack.config.js</span><br></pre></td></tr></table></figure>
<p>输入以下内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);<span class="comment">//载入webpack模块</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	entry :[<span class="string">&#x27;./test.js&#x27;</span>],<span class="comment">//设置打包入口文件</span></span><br><span class="line">	output :&#123;</span><br><span class="line">		path:__dirname,<span class="comment">//设置打包的输出文件夹</span></span><br><span class="line">		filename:<span class="string">&#x27;bundle.js&#x27;</span><span class="comment">//打包后的文件</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个时候再直接执行<code>webpack</code>命令就可以直接打包了。</p>
<h2 id="第三步-开始使用一个插件"><a href="#第三步-开始使用一个插件" class="headerlink" title="第三步 开始使用一个插件"></a>第三步 开始使用一个插件</h2><p>webpack有很多内置的插件及npm安装众多的插件，插件使用在webpack中的plugins配置项中,它是一个数组项，可以配置多个</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);<span class="comment">//载入webpack模块</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	entry :[<span class="string">&#x27;./test.js&#x27;</span>],<span class="comment">//设置打包入口文件</span></span><br><span class="line">	output :&#123;</span><br><span class="line">		path:__dirname,<span class="comment">//设置打包的输出文件夹</span></span><br><span class="line">		filename:<span class="string">&#x27;bundle.js&#x27;</span><span class="comment">//打包后的文件</span></span><br><span class="line">	&#125;,</span><br><span class="line">	plugins :[</span><br><span class="line">		<span class="keyword">new</span> Webpack.BannerPlugin(<span class="string">&quot;打包后文件的头部注释&quot;</span>)<span class="comment">//打包后文件的头部注释..</span></span><br><span class="line">	]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行打包后就会在bundle.js文件的头部生成一条注释信息</p>
<h2 id="第四步-开始作用loaders功能"><a href="#第四步-开始作用loaders功能" class="headerlink" title="第四步 开始作用loaders功能"></a>第四步 开始作用loaders功能</h2><p>比如我们要编译es6到es5,我们就需要用到babel这个工具，首先需要至少安装它的插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i babel-core -D &#x2F;&#x2F;babel核心库</span><br><span class="line">npm i babel-loader -D &#x2F;&#x2F;babel用于loader</span><br><span class="line">npm i babel-preset-es2015 -D &#x2F;&#x2F;babel转码规则</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">	entry :[<span class="string">&#x27;./test.js&#x27;</span>],</span><br><span class="line">	output :&#123;</span><br><span class="line">		path:__dirname,</span><br><span class="line">		filename:<span class="string">&#x27;bundle.js&#x27;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="built_in">module</span> :&#123;</span><br><span class="line">		loaders :[&#123;</span><br><span class="line">				test:<span class="regexp">/\.js$/</span>, <span class="comment">//匹配js文件</span></span><br><span class="line">				loader:<span class="string">&#x27;babel-loader&#x27;</span>,<span class="comment">//使用bable进行转码</span></span><br><span class="line">				query:&#123;</span><br><span class="line">					presets:[<span class="string">&#x27;es2015&#x27;</span>] <span class="comment">//转换成es5</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		]</span><br><span class="line">	&#125;,</span><br><span class="line">	plugins :[</span><br><span class="line">		<span class="keyword">new</span> webpack.BannerPlugin(<span class="string">&quot;打包后文件的头部注释&quot;</span>)<span class="comment">//打包后文件的头部注释..</span></span><br><span class="line">	]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改一下test.js文件，写入一句es6的语法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let a &#x3D; &quot;hello world!&quot;;</span><br><span class="line">console.log(a);</span><br></pre></td></tr></table></figure>
<p>运行webpack打包之后，打开bundle.js就会发现代码会转换成es5中的<code>var</code>方法了。</p>
<p>这里的配置里面的’query’部分也可以提取出来，把它写入package.json中也可以。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;webpack-step&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;babel-core&quot;: &quot;^6.22.1&quot;,</span><br><span class="line">    &quot;babel-loader&quot;: &quot;^6.2.10&quot;,</span><br><span class="line">    &quot;babel-preset-es2015&quot;: &quot;^6.22.0&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^1.14.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">    &quot;babel&quot;: &#123;</span><br><span class="line">    &quot;presets&quot;: [</span><br><span class="line">      &quot;es2015&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;plugins&quot;: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样和新建一个<code>.babelrc</code>文件效果是一致的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;: [</span><br><span class="line">    &quot;es2015&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;plugins&quot;: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接下来就采用最后一种独立文件的方式吧，来得直观一些。</p>
<h2 id="第五步-使用npm脚本"><a href="#第五步-使用npm脚本" class="headerlink" title="第五步 使用npm脚本"></a>第五步 使用npm脚本</h2><p>以上所有的运行我们都是使用webpack来运行的，接下来我们把它配置进npm的脚本中，以方便直接使用以及添加参数等</p>
<p>在package.json中的scripts节点中新增脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;webpack&quot;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<p>接下来运行<code>npm run build</code>就可以执行打包文件了</p>
<p>比如我们在配置中添加<code>-w</code>参数，就可以让webpack自动监听文件的修改并重新打包了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;webpack -w&quot;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<h2 id="第六步-使用webpack-dev-sever"><a href="#第六步-使用webpack-dev-sever" class="headerlink" title="第六步 使用webpack-dev-sever"></a>第六步 使用webpack-dev-sever</h2><p>webpack-dev-server也升级到2.0以上了，安装2.0以上版本在package.json中不能使用脚本启动，所以还是先安装1.0以上的版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i webpack-dev-server@1.16.2</span><br></pre></td></tr></table></figure>
<p>然后在package.json中添加启动脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;server&quot;:&quot;webpack-dev-server&quot;</span><br></pre></td></tr></table></figure>
<p>运行<code>npm run server</code>就会默认启动一个本地localhost:8080的服务</p>
<p>让浏览器实现热加载，只需要给webpack-dev-server添加<code>--inline</code>参数就可以了</p>
<p>是时候让我们新建一个html文件并引入bundle.js文件在这个index.html了，这个时候，打开控制台，修改test.js文件，就能看到自动刷新的效果。</p>
<p>默认情况下，webpack-dev-server会采用webpack.config.js这个配置文件的，所以当文件修改之后，它会自动调用这个文件进行打包。</p>
<p>webpack-dev-server可以以指定文件夹来运行服务，比如我们新建一个build文件夹，然后把index.html放进去，并删除bundle.js文件，在启动脚本中新增参数<code>--content-base build/</code>,变成如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;server&quot;: &quot;webpack-dev-server --inline --content-base build&#x2F;&quot;</span><br></pre></td></tr></table></figure>
<p>重新运行服务，会发现现在是从build目录启动服务了，这个时候并没有bundle.js文件，因为webpack-dev-server是把它打包在内存当中的。</p>
<p>TODO<br>我们修改之后，发现浏览器是全部刷新一次的，这个时候可以通过<code>--hot</code>参数来实现热加载功能。</p>
<h2 id="第七步-是时候react上场了"><a href="#第七步-是时候react上场了" class="headerlink" title="第七步 是时候react上场了"></a>第七步 是时候react上场了</h2><p>首先安装React包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i react --save</span><br><span class="line">npm i react-dom --dave</span><br></pre></td></tr></table></figure>
<p>安装babel插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i babel-preset-react -D</span><br><span class="line">npm i babel-preset-react-hmre -D</span><br></pre></td></tr></table></figure>
<p>在.babelrc中添加react转码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;: [</span><br><span class="line">    &quot;es2015&quot;,</span><br><span class="line">    &quot;react&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;plugins&quot;: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改test.js文件，写一个最简单的无状态组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import React from &#39;react&#39;;</span><br><span class="line">import ReactDOM from &#39;react-dom&#39;;</span><br><span class="line"></span><br><span class="line">function HelloComponent(props) &#123;</span><br><span class="line">  return &lt;div&gt;Hello &#123;props.name&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&#125;</span><br><span class="line">ReactDOM.render(&lt;HelloComponent name&#x3D;&quot;12345&quot; &#x2F;&gt;, document.body)</span><br></pre></td></tr></table></figure>
<p>运行一下，OK，我们的React也跑起来了。</p>
<h2 id="第八步-继续添加loaders"><a href="#第八步-继续添加loaders" class="headerlink" title="第八步 继续添加loaders"></a>第八步 继续添加loaders</h2><p>webpack最强大的地方就是loaders，我们再来添加一个css-loader以支持在js中import css文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i css-loader -D</span><br><span class="line">npm i style-loader -D</span><br></pre></td></tr></table></figure>
<p>安装好这两个插件之后，再修改webpack.config.js配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module :&#123;</span><br><span class="line">	loaders :[&#123;</span><br><span class="line">			test:&#x2F;\.js$&#x2F;,</span><br><span class="line">			loader:&#39;babel-loader&#39;</span><br><span class="line">		&#125;,</span><br><span class="line">		&#123;</span><br><span class="line">			test: &#x2F;\.css$&#x2F;, </span><br><span class="line">			loader: &#39;style-loader!css-loader&#39;</span><br><span class="line">		&#125;</span><br><span class="line">	]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>这个时候我们新建一个app.css的文件，里面写入一句背景颜色的设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">	background-color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在test.js中添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &quot;.&#x2F;app.css&quot;;</span><br></pre></td></tr></table></figure>
<p>运行一下，我们的css文件已效了。</p>
<p>继续修改一个index.html文件，添加一个容器和输入框，容器用来放我们的react组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>稍微修改一下test.js里面的组件渲染位置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./app.css&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HelloComponent</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello &#123;props.name&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line">ReactDOM.render(<span class="xml"><span class="tag">&lt;<span class="name">HelloComponent</span> <span class="attr">name</span>=<span class="string">&quot;world&quot;</span> /&gt;</span></span>, <span class="built_in">document</span>.getElementById(<span class="string">&quot;container&quot;</span>))</span><br></pre></td></tr></table></figure>
<p>运行之后，我们在输入框里面随便输入内容，然后修改一个app.css文件，发现热加载功能也生效了。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>记录一次微擎的云检测破解之道</title>
    <url>/2016/04/28/microenine-crack/</url>
    <content><![CDATA[<p>其实做为开发人员，我们都应该尊重别人的劳动成果的，但互联网的免费性，开源性，分享性，而更多的是码农的穷逼性，不知是被逼使用一些盗版软件，破解一些东西什么的。</p>
<a id="more"></a>
<p>以前手头上微信框架用的是某X力的，虽然知道也是破解的微擎的，但人家便宜呀，模块多呀。</p>
<p>不过真的是一分钱一分货，bug太多，更新不行，以至后来我升级到他们的新版本后根本就不能更新了。</p>
<p>最后想了想，还是和微擎吧，毕竟是官方的，而且免费更新框架，至少框架这一块是稳定了。</p>
<p>但用免费版的微擎有一个比较大的问题就是，很多模块都是要收费的，这样可免费用的模块就比较少了。</p>
<p>网上会有很多微擎的模块盗版出来的，但安装会有一个问题就是，微擎的模块都是在线安装的，就算我们拿到模块进行本地安装时，也会通过模块名进行云检测，如果商城中有这个模块，就会提示盗版，而站点就可能会被记录黑名单，这样就不能再使用微擎的一切云服务了，比如安装微擎商城中的模块，更新框架等。</p>
<p>网上主流的解决方法就是屏蔽云服务，但是这样所有模块就只能本地安装了，框架也不能更新了。</p>
<p>我希望能够得到完美的解决方案就是，我能够正常使用微擎的免费服务，包括更新框架，安装商城免费的模块，更新商城的免费模块，同时，我也可以安装自己盗版的模块。</p>
<p>通过分析微擎云服务文件，弄清楚了每个函数的用途，最后终于完美解决了我的问题，达到了我上面想要的效果。当然，具体解决方法就不公布了，毕竟这是一个不友好的行为。在此只是记录一下解决思路：让云服务不知道你安装了哪些盗版的模块。</p>
<p>现在的效果就是这样的：<br><img src="http://7te946.com1.z0.glb.clouddn.com/16-4-28/62063731.jpg"></p>
<p>人人商城肯定是盗版的，而微商城是正常从商城里面安装的，后期也是可以免费升级的。</p>
<p><img src="http://7te946.com1.z0.glb.clouddn.com/16-4-28/91641646.jpg"><br>一键更新，毫无影响。</p>
<p>分享一份自己备注的微擎cloud.mod.php函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * [WeEngine System] Copyright (c) 2014 WE7.CC</span></span><br><span class="line"><span class="comment"> * WeEngine is NOT a free software, it under the license terms, visited http://www.we7.cc/ for more details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">defined(<span class="string">&#x27;IN_IA&#x27;</span>) <span class="keyword">or</span> <span class="keyword">exit</span>(<span class="string">&#x27;Access Denied&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_client_define</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">		<span class="string">&#x27;/framework/function/communication.func.php&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;/framework/model/cloud.mod.php&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;/web/source/cloud/upgrade.ctrl.php&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;/web/source/cloud/process.ctrl.php&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;/web/source/cloud/dock.ctrl.php&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;/web/themes/default/cloud/upgrade.html&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;/web/themes/default/cloud/process.html&#x27;</span></span><br><span class="line">	);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_prepare</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line">	setting_load();</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]) || <span class="keyword">empty</span>(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;token&#x27;</span>])) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="string">&#x27;-1&#x27;</span>, <span class="string">&quot;您的程序需要在微擎云服务平台注册你的站点资料, 来接入云平台服务后才能使用相应功能.&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_m_prepare</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;<span class="comment">//模块验证 传入模块名字，通过云平台验证是否受版权保护 仅用于模块安装 批量安装模块的时候使用</span></span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;module.check&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;module&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="keyword">if</span> (is_error(<span class="variable">$dat</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$dat</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>] == <span class="string">&#x27;install-module-protect&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="string">&#x27;-1&#x27;</span>, <span class="string">&#x27;此模块已设置版权保护，您只能通过云平台来安装。&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_cloud_build_params</span>(<span class="params"></span>) </span>&#123;<span class="comment">//云服务变量数组</span></span><br><span class="line">	<span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line">	<span class="variable">$pars</span> = <span class="keyword">array</span>();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;host&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>];</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;family&#x27;</span>] = IMS_FAMILY;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;version&#x27;</span>] = IMS_VERSION;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;release&#x27;</span>] = IMS_RELEASE_DATE;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;key&#x27;</span>] = <span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;password&#x27;</span>] = md5(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;key&#x27;</span>] . <span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">	<span class="variable">$clients</span> = cloud_client_define();</span><br><span class="line">	<span class="variable">$string</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="keyword">foreach</span>(<span class="variable">$clients</span> <span class="keyword">as</span> <span class="variable">$cli</span>) &#123;</span><br><span class="line">		<span class="variable">$string</span> .= md5_file(IA_ROOT . <span class="variable">$cli</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;client&#x27;</span>] = md5(<span class="variable">$string</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$pars</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_m_build</span>(<span class="params"><span class="variable">$modulename</span>, <span class="variable">$type</span> = <span class="string">&#x27;&#x27;</span></span>) </span>&#123;<span class="comment">//云平台安装 卸载模块 更新模块</span></span><br><span class="line">	<span class="variable">$type</span> = in_array(<span class="variable">$type</span>, <span class="keyword">array</span>(<span class="string">&#x27;uninstall&#x27;</span>)) ? <span class="variable">$type</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">&#x27;SELECT * FROM &#x27;</span> . tablename(<span class="string">&#x27;modules&#x27;</span>) . <span class="string">&#x27; WHERE `name`=:name&#x27;</span>;</span><br><span class="line">	<span class="variable">$module</span> = pdo_fetch(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&#x27;:name&#x27;</span> =&gt; <span class="variable">$modulename</span>));</span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;module.build&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;module&#x27;</span>] = <span class="variable">$modulename</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;type&#x27;</span>] = <span class="variable">$type</span>;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$module</span>)) &#123;</span><br><span class="line">		<span class="variable">$pars</span>[<span class="string">&#x27;module_version&#x27;</span>] = <span class="variable">$module</span>[<span class="string">&#x27;version&#x27;</span>];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/module.build&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);<span class="comment">//云服务结果处理</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!is_error(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">		<span class="variable">$dir</span> = IA_ROOT . <span class="string">&#x27;/addons/&#x27;</span> . <span class="variable">$modulename</span>;</span><br><span class="line">		<span class="variable">$files</span> = <span class="keyword">array</span>();</span><br><span class="line">		<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>])) &#123;</span><br><span class="line">			<span class="keyword">foreach</span> (<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>] <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">				<span class="variable">$entry</span> = <span class="variable">$dir</span> . <span class="variable">$file</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">				<span class="keyword">if</span> (!is_file(<span class="variable">$entry</span>) || md5_file(<span class="variable">$entry</span>) != <span class="variable">$file</span>[<span class="string">&#x27;checksum&#x27;</span>]) &#123;</span><br><span class="line">					<span class="variable">$files</span>[] = <span class="string">&#x27;/&#x27;</span> . <span class="variable">$modulename</span> . <span class="variable">$file</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>] = <span class="variable">$files</span>;</span><br><span class="line">		<span class="variable">$schemas</span> = <span class="keyword">array</span>();</span><br><span class="line">		<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>])) &#123;</span><br><span class="line">			load()-&gt;func(<span class="string">&#x27;db&#x27;</span>);</span><br><span class="line">			<span class="keyword">foreach</span> (<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>] <span class="keyword">as</span> <span class="variable">$remote</span>) &#123;</span><br><span class="line">				<span class="variable">$name</span> = substr(<span class="variable">$remote</span>[<span class="string">&#x27;tablename&#x27;</span>], <span class="number">4</span>);</span><br><span class="line">				<span class="variable">$local</span> = db_table_schema(pdo(), <span class="variable">$name</span>);</span><br><span class="line">				<span class="keyword">unset</span>(<span class="variable">$remote</span>[<span class="string">&#x27;increment&#x27;</span>]);</span><br><span class="line">				<span class="keyword">unset</span>(<span class="variable">$local</span>[<span class="string">&#x27;increment&#x27;</span>]);</span><br><span class="line">				<span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$local</span>)) &#123;</span><br><span class="line">					<span class="variable">$schemas</span>[] = <span class="variable">$remote</span>;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="variable">$diffs</span> = db_table_fix_sql(<span class="variable">$local</span>, <span class="variable">$remote</span>);</span><br><span class="line">					<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$diffs</span>)) &#123;</span><br><span class="line">						<span class="variable">$schemas</span>[] = <span class="variable">$remote</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;upgrade&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;type&#x27;</span>] = <span class="string">&#x27;module&#x27;</span>;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>] = <span class="variable">$schemas</span>;</span><br><span class="line">				<span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$module</span>)) &#123;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;install&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_m_query</span>(<span class="params"></span>) </span>&#123;<span class="comment">//非系统模块发送到服务端 a=module&amp;do=check 已经安装模块 检查更新 安装模块 检查已经购买但没有安装的</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;module.query&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;module&#x27;</span>] = cloud_extra_module();<span class="comment">//获取非系统模块</span></span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/module.query&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_m_info</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;<span class="comment">//获取指定模块信息 安装模块 更新模块时进行检查</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;module.info&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;module&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/module.info&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_m_upgradeinfo</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;<span class="comment">//在线检测模块更新 仅用于module.ctrl.php 469 $do == &#x27;upgrade&#x27; 参数 传入模块名</span></span><br><span class="line">	<span class="variable">$module</span> = pdo_fetch(<span class="string">&quot;SELECT name, version FROM &quot;</span>.tablename(<span class="string">&#x27;modules&#x27;</span>).<span class="string">&quot; WHERE name = &#x27;<span class="subst">&#123;$name&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;module.info&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;module&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;curversion&#x27;</span>] = <span class="variable">$module</span>[<span class="string">&#x27;version&#x27;</span>];</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;isupgrade&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/module.info&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_t_prepare</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;<span class="comment">//模板云检测</span></span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;theme.check&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;theme&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="keyword">if</span> (is_error(<span class="variable">$dat</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$dat</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>] == <span class="string">&#x27;install-theme-protect&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="string">&#x27;-1&#x27;</span>, <span class="string">&#x27;此模板已设置版权保护，您只能通过云平台来安装。&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_t_query</span>(<span class="params"></span>) </span>&#123;<span class="comment">//获取在线安装的模板</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;theme.query&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;theme&#x27;</span>] = cloud_extra_theme();</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/theme.query&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_t_info</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;<span class="comment">//在线获取指定模板信息</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;theme.info&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;theme&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/theme.info&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_t_build</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;<span class="comment">//在线安装模板</span></span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">&#x27;SELECT * FROM &#x27;</span> . tablename(<span class="string">&#x27;site_templates&#x27;</span>) . <span class="string">&#x27; WHERE `name`=:name&#x27;</span>;</span><br><span class="line">	<span class="variable">$theme</span> = pdo_fetch(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&#x27;:name&#x27;</span> =&gt; <span class="variable">$name</span>));</span><br><span class="line">	</span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;theme.build&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;theme&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line">	<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$theme</span>)) &#123;</span><br><span class="line">		<span class="variable">$pars</span>[<span class="string">&#x27;themeversion&#x27;</span>] = <span class="variable">$theme</span>[<span class="string">&#x27;version&#x27;</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/theme.build&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">if</span>(!is_error(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">		<span class="variable">$dir</span> = IA_ROOT . <span class="string">&#x27;/app/themes/&#x27;</span> . <span class="variable">$name</span>;</span><br><span class="line">		<span class="variable">$files</span> = <span class="keyword">array</span>();</span><br><span class="line">		<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>])) &#123;</span><br><span class="line">			<span class="keyword">foreach</span>(<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>] <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">				<span class="variable">$entry</span> = <span class="variable">$dir</span> . <span class="variable">$file</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">				<span class="keyword">if</span>(!is_file(<span class="variable">$entry</span>) || md5_file(<span class="variable">$entry</span>) != <span class="variable">$file</span>[<span class="string">&#x27;checksum&#x27;</span>]) &#123;</span><br><span class="line">					<span class="variable">$files</span>[] = <span class="string">&#x27;/&#x27;</span>. <span class="variable">$name</span> . <span class="variable">$file</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>] = <span class="variable">$files</span>;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;upgrade&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;type&#x27;</span>] = <span class="string">&#x27;theme&#x27;</span>;</span><br><span class="line">				<span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$theme</span>)) &#123;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;install&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_t_upgradeinfo</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;<span class="comment">//在线获取模板更新</span></span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">&#x27;SELECT `name`, `version` FROM &#x27;</span> . tablename(<span class="string">&#x27;site_templates&#x27;</span>) . <span class="string">&#x27; WHERE `name` = :name&#x27;</span>;</span><br><span class="line">	<span class="variable">$theme</span> = pdo_fetch(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&#x27;:name&#x27;</span> =&gt; <span class="variable">$name</span>));</span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;theme.upgrade&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;theme&#x27;</span>] = <span class="variable">$theme</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;version&#x27;</span>] = <span class="variable">$theme</span>[<span class="string">&#x27;version&#x27;</span>];</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;isupgrade&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/module.info&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_sms_send</span>(<span class="params"><span class="variable">$mobile</span>, <span class="variable">$content</span></span>) </span>&#123;<span class="comment">//在线短信接口</span></span><br><span class="line">	<span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line">	<span class="variable">$log</span> = <span class="keyword">array</span>(</span><br><span class="line">		<span class="string">&#x27;mobile&#x27;</span> =&gt; <span class="variable">$mobile</span>,</span><br><span class="line">		<span class="string">&#x27;content&#x27;</span> =&gt; <span class="variable">$content</span>,</span><br><span class="line">		<span class="string">&#x27;result&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;uniacid&#x27;</span> =&gt; <span class="variable">$_W</span>[<span class="string">&#x27;uniacid&#x27;</span>],</span><br><span class="line">		<span class="string">&#x27;createtime&#x27;</span> =&gt; TIMESTAMP</span><br><span class="line">	);</span><br><span class="line">	<span class="variable">$row</span> = pdo_get(<span class="string">&#x27;uni_settings&#x27;</span> , <span class="keyword">array</span>(<span class="string">&#x27;uniacid&#x27;</span> =&gt; <span class="variable">$_W</span>[<span class="string">&#x27;uniacid&#x27;</span>]), <span class="keyword">array</span>(<span class="string">&#x27;notify&#x27;</span>));</span><br><span class="line">	<span class="variable">$row</span>[<span class="string">&#x27;notify&#x27;</span>] = @iunserializer(<span class="variable">$row</span>[<span class="string">&#x27;notify&#x27;</span>]);</span><br><span class="line">	<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$row</span>[<span class="string">&#x27;notify&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$row</span>[<span class="string">&#x27;notify&#x27;</span>][<span class="string">&#x27;sms&#x27;</span>])) &#123;</span><br><span class="line">		<span class="variable">$config</span> = <span class="variable">$row</span>[<span class="string">&#x27;notify&#x27;</span>][<span class="string">&#x27;sms&#x27;</span>];</span><br><span class="line">		<span class="variable">$balance</span> = intval(<span class="variable">$config</span>[<span class="string">&#x27;balance&#x27;</span>]);</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$balance</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="variable">$log</span>[<span class="string">&#x27;result&#x27;</span>] = <span class="string">&#x27;发送短信失败, 请联系系统管理人员. 错误详情: 短信余额不足&#x27;</span>;</span><br><span class="line">			pdo_insert(<span class="string">&#x27;core_sendsms_log&#x27;</span>, <span class="variable">$log</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="variable">$log</span>[<span class="string">&#x27;result&#x27;</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$sign</span> = <span class="variable">$config</span>[<span class="string">&#x27;signature&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$sign</span>) &amp;&amp; IMS_FAMILY == <span class="string">&#x27;x&#x27;</span>) &#123;</span><br><span class="line">			<span class="variable">$sign</span> = <span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;copyright&#x27;</span>][<span class="string">&#x27;sitename&#x27;</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$sign</span>)) &#123;</span><br><span class="line">			<span class="variable">$sign</span> = <span class="string">&#x27;微擎&#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$log</span>[<span class="string">&#x27;content&#x27;</span>] = <span class="variable">$content</span> . <span class="string">&quot; 【<span class="subst">&#123;$sign&#125;</span>】&quot;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">		<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;sms.send&#x27;</span>;</span><br><span class="line">		<span class="variable">$pars</span>[<span class="string">&#x27;mobile&#x27;</span>] = <span class="variable">$mobile</span>;</span><br><span class="line">		<span class="variable">$pars</span>[<span class="string">&#x27;content&#x27;</span>] = <span class="variable">$content</span> . <span class="string">&quot; 【<span class="subst">&#123;$sign&#125;</span>】&quot;</span>;</span><br><span class="line">		<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">		<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/sms.send&#x27;</span>;</span><br><span class="line">		<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">		<span class="keyword">if</span> (is_error(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">			<span class="variable">$log</span>[<span class="string">&#x27;result&#x27;</span>] = <span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line">			pdo_insert(<span class="string">&#x27;core_sendsms_log&#x27;</span>, <span class="variable">$log</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">error</span>(<span class="variable">$ret</span>[<span class="string">&#x27;errno&#x27;</span>], <span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$ret</span> == <span class="string">&#x27;success&#x27;</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="variable">$log</span>[<span class="string">&#x27;result&#x27;</span>] = <span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line">			pdo_insert(<span class="string">&#x27;core_sendsms_log&#x27;</span>, <span class="variable">$log</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="variable">$ret</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	pdo_insert(<span class="string">&#x27;core_sendsms_log&#x27;</span>, <span class="variable">$log</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;发送短信失败, 请联系系统管理人员. 错误详情: 没有设置短信配额或参数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_build</span>(<span class="params"></span>) </span>&#123;<span class="comment">//程序更新入口</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;application.build&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;extra&#x27;</span>] = cloud_extra_account();</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/application.build&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">if</span>(!is_error(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$ret</span>[<span class="string">&#x27;state&#x27;</span>] == <span class="string">&#x27;warning&#x27;</span>) &#123;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>] = cloud_client_define();</span><br><span class="line">			<span class="keyword">unset</span>(<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>]);</span><br><span class="line">			<span class="keyword">unset</span>(<span class="variable">$ret</span>[<span class="string">&#x27;scripts&#x27;</span>]);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="variable">$files</span> = <span class="keyword">array</span>();</span><br><span class="line">			<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>])) &#123;</span><br><span class="line">				<span class="keyword">foreach</span>(<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>] <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">					<span class="variable">$entry</span> = IA_ROOT . <span class="variable">$file</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">					<span class="keyword">if</span>(!is_file(<span class="variable">$entry</span>) || md5_file(<span class="variable">$entry</span>) != <span class="variable">$file</span>[<span class="string">&#x27;checksum&#x27;</span>]) &#123;</span><br><span class="line">						<span class="variable">$files</span>[] = <span class="variable">$file</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>] = <span class="variable">$files</span>;</span><br><span class="line"></span><br><span class="line">			<span class="variable">$schemas</span> = <span class="keyword">array</span>();</span><br><span class="line">			<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>])) &#123;</span><br><span class="line">				load()-&gt;func(<span class="string">&#x27;db&#x27;</span>);</span><br><span class="line">				<span class="keyword">foreach</span>(<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>] <span class="keyword">as</span> <span class="variable">$remote</span>) &#123;</span><br><span class="line">					<span class="variable">$name</span> = substr(<span class="variable">$remote</span>[<span class="string">&#x27;tablename&#x27;</span>], <span class="number">4</span>);</span><br><span class="line">					<span class="variable">$local</span> = db_table_schema(pdo(), <span class="variable">$name</span>);</span><br><span class="line">					<span class="keyword">unset</span>(<span class="variable">$remote</span>[<span class="string">&#x27;increment&#x27;</span>]);</span><br><span class="line">					<span class="keyword">unset</span>(<span class="variable">$local</span>[<span class="string">&#x27;increment&#x27;</span>]);</span><br><span class="line">					<span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$local</span>)) &#123;</span><br><span class="line">						<span class="variable">$schemas</span>[] = <span class="variable">$remote</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="variable">$sqls</span> = db_table_fix_sql(<span class="variable">$local</span>, <span class="variable">$remote</span>);</span><br><span class="line">						<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$sqls</span>)) &#123;</span><br><span class="line">							<span class="variable">$schemas</span>[] = <span class="variable">$remote</span>;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>] = <span class="variable">$schemas</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$ret</span>[<span class="string">&#x27;family&#x27;</span>] == <span class="string">&#x27;x&#x27;</span> &amp;&amp; IMS_FAMILY == <span class="string">&#x27;v&#x27;</span>) &#123;</span><br><span class="line">			load()-&gt;model(<span class="string">&#x27;setting&#x27;</span>);</span><br><span class="line">			setting_upgrade_version(<span class="string">&#x27;x&#x27;</span>, IMS_VERSION, IMS_RELEASE_DATE);</span><br><span class="line">			message(<span class="string">&#x27;您已经购买了商业授权版本, 系统将转换为商业版, 并重新运行自动更新程序.&#x27;</span>, <span class="string">&#x27;refresh&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;upgrade&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;files&#x27;</span>]) || !<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>]) || !<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;scripts&#x27;</span>])) &#123;</span><br><span class="line">			<span class="variable">$ret</span>[<span class="string">&#x27;upgrade&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$upgrade</span> = <span class="keyword">array</span>();</span><br><span class="line">		<span class="variable">$upgrade</span>[<span class="string">&#x27;upgrade&#x27;</span>] = <span class="variable">$ret</span>[<span class="string">&#x27;upgrade&#x27;</span>];</span><br><span class="line">		<span class="variable">$upgrade</span>[<span class="string">&#x27;lastupdate&#x27;</span>] = TIMESTAMP;</span><br><span class="line">		cache_write(<span class="string">&#x27;upgrade&#x27;</span>, <span class="variable">$upgrade</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_schema</span>(<span class="params"></span>) </span>&#123;<span class="comment">//数据库整理</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;application.schema&#x27;</span>;</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="variable">$file</span> = IA_ROOT . <span class="string">&#x27;/data/application.schema&#x27;</span>;</span><br><span class="line">	<span class="variable">$ret</span> = _cloud_shipping_parse(<span class="variable">$dat</span>, <span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">if</span>(!is_error(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">		<span class="variable">$schemas</span> = <span class="keyword">array</span>();</span><br><span class="line">		<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>])) &#123;</span><br><span class="line">			load()-&gt;func(<span class="string">&#x27;db&#x27;</span>);</span><br><span class="line">			<span class="keyword">foreach</span>(<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>] <span class="keyword">as</span> <span class="variable">$remote</span>) &#123;</span><br><span class="line">				<span class="variable">$name</span> = substr(<span class="variable">$remote</span>[<span class="string">&#x27;tablename&#x27;</span>], <span class="number">4</span>);</span><br><span class="line">				<span class="variable">$local</span> = db_table_schema(pdo(), <span class="variable">$name</span>);</span><br><span class="line">				<span class="keyword">unset</span>(<span class="variable">$remote</span>[<span class="string">&#x27;increment&#x27;</span>]);</span><br><span class="line">				<span class="keyword">unset</span>(<span class="variable">$local</span>[<span class="string">&#x27;increment&#x27;</span>]);</span><br><span class="line">				<span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$local</span>)) &#123;</span><br><span class="line">					<span class="variable">$schemas</span>[] = <span class="variable">$remote</span>;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="variable">$diffs</span> = db_schema_compare(<span class="variable">$local</span>, <span class="variable">$remote</span>);</span><br><span class="line">					<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$diffs</span>)) &#123;</span><br><span class="line">						<span class="variable">$schemas</span>[] = <span class="variable">$remote</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;schemas&#x27;</span>] = <span class="variable">$schemas</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_download</span>(<span class="params"><span class="variable">$path</span>, <span class="variable">$type</span> = <span class="string">&#x27;&#x27;</span></span>) </span>&#123;<span class="comment">//下载文件</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;application.shipping&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;path&#x27;</span>] = <span class="variable">$path</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;type&#x27;</span>] = <span class="variable">$type</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;gz&#x27;</span>] = function_exists(<span class="string">&#x27;gzcompress&#x27;</span>) &amp;&amp; function_exists(<span class="string">&#x27;gzuncompress&#x27;</span>) ? <span class="string">&#x27;true&#x27;</span> : <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line">	<span class="variable">$headers</span> = <span class="keyword">array</span>(<span class="string">&#x27;content-type&#x27;</span> =&gt; <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">	<span class="variable">$dat</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>, <span class="variable">$headers</span>, <span class="number">300</span>);</span><br><span class="line">	<span class="keyword">if</span>(is_error(<span class="variable">$dat</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;网络存在错误， 请稍后重试。&#x27;</span> . <span class="variable">$dat</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>] == <span class="string">&#x27;success&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$ret</span> = @json_decode(<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>], <span class="literal">true</span>);</span><br><span class="line">	<span class="keyword">if</span>(is_error(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;不能下载文件， 请稍后重试。&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_cloud_shipping_parse</span>(<span class="params"><span class="variable">$dat</span>, <span class="variable">$file</span></span>) </span>&#123;<span class="comment">//云服务结果处理</span></span><br><span class="line">	<span class="keyword">if</span> (is_error(<span class="variable">$dat</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;网络传输错误, 请检查您的cURL是否可用, 或者服务器网络是否正常. &#x27;</span> . <span class="variable">$dat</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$tmp</span> = unserialize(<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">	<span class="keyword">if</span> (is_array(<span class="variable">$tmp</span>) &amp;&amp; is_error(<span class="variable">$tmp</span>)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$tmp</span>[<span class="string">&#x27;errno&#x27;</span>] == <span class="string">&#x27;-2&#x27;</span>) &#123;</span><br><span class="line">			<span class="variable">$data</span> = file_get_contents(IA_ROOT . <span class="string">&#x27;/framework/version.inc.php&#x27;</span>);</span><br><span class="line">			file_put_contents(IA_ROOT . <span class="string">&#x27;/framework/version.inc.php&#x27;</span>, str_replace(<span class="string">&quot;&#x27;x&#x27;&quot;</span>, <span class="string">&quot;&#x27;v&#x27;&quot;</span>, <span class="variable">$data</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$tmp</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>] == <span class="string">&#x27;patching&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;补丁程序正在更新中，请稍后再试！&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>] == <span class="string">&#x27;blacklist&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;抱歉，您的站点已被列入云服务黑名单，云服务一切业务已被禁止，请联系微擎客服！&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (strlen(<span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>]) != <span class="number">32</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;云服务平台向您的服务器传输数据过程中出现错误, 这个错误可能是由于您的通信密钥和云服务不一致, 请尝试诊断云服务参数(重置站点ID和通信密钥). 传输原始数据:&#x27;</span> . <span class="variable">$dat</span>[<span class="string">&#x27;meta&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$data</span> = @file_get_contents(<span class="variable">$file</span>);</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;没有接收到服务器的传输的数据.&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	@unlink(<span class="variable">$file</span>);</span><br><span class="line">	<span class="variable">$ret</span> = @iunserializer(<span class="variable">$data</span>);</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$data</span>) || <span class="keyword">empty</span>(<span class="variable">$ret</span>) || <span class="variable">$dat</span>[<span class="string">&#x27;content&#x27;</span>] != <span class="variable">$ret</span>[<span class="string">&#x27;secret&#x27;</span>]) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;云服务平台向您的服务器传输的数据校验失败, 可能是因为您的网络不稳定, 或网络不安全, 请稍后重试.&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$ret</span> = iunserializer(<span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">	<span class="keyword">if</span> (is_array(<span class="variable">$ret</span>) &amp;&amp; is_error(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$ret</span>[<span class="string">&#x27;errno&#x27;</span>] == <span class="string">&#x27;-2&#x27;</span>) &#123;</span><br><span class="line">			<span class="variable">$data</span> = file_get_contents(IA_ROOT . <span class="string">&#x27;/framework/version.inc.php&#x27;</span>);</span><br><span class="line">			file_put_contents(IA_ROOT . <span class="string">&#x27;/framework/version.inc.php&#x27;</span>, str_replace(<span class="string">&quot;&#x27;x&#x27;&quot;</span>, <span class="string">&quot;&#x27;v&#x27;&quot;</span>, <span class="variable">$data</span>));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (!is_error(<span class="variable">$ret</span>) &amp;&amp; is_array(<span class="variable">$ret</span>) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$ret</span>)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$ret</span>[<span class="string">&#x27;state&#x27;</span>] == <span class="string">&#x27;fatal&#x27;</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">error</span>(<span class="variable">$ret</span>[<span class="string">&#x27;errorno&#x27;</span>], <span class="string">&#x27;发生错误: &#x27;</span> . <span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="variable">$ret</span>[<span class="string">&#x27;errno&#x27;</span>], <span class="string">&quot;发生错误: <span class="subst">&#123;$ret[&#x27;message&#x27;]&#125;</span>&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_request</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$post</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$extra</span> = <span class="keyword">array</span>(<span class="params"></span>), <span class="variable">$timeout</span> = <span class="number">60</span></span>) </span>&#123;<span class="comment">//发送云服务请求</span></span><br><span class="line">	<span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line">	load()-&gt;func(<span class="string">&#x27;communication&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;cloudip&#x27;</span>][<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="keyword">empty</span>(<span class="variable">$extra</span>[<span class="string">&#x27;ip&#x27;</span>])) &#123;</span><br><span class="line">		<span class="variable">$extra</span>[<span class="string">&#x27;ip&#x27;</span>] = <span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;cloudip&#x27;</span>][<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ihttp_request(<span class="variable">$url</span>, <span class="variable">$post</span>, <span class="variable">$extra</span>, <span class="variable">$timeout</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_extra_account</span>(<span class="params"></span>) </span>&#123;<span class="comment">//获取添加公众号信息</span></span><br><span class="line">	<span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">	<span class="variable">$data</span>[<span class="string">&#x27;accounts&#x27;</span>] = pdo_fetchall(<span class="string">&quot;SELECT name, account, original FROM &quot;</span>.tablename(<span class="string">&#x27;account_wechats&#x27;</span>) . <span class="string">&quot; GROUP BY account&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> serialize(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_extra_module</span>(<span class="params"></span>) </span>&#123;<span class="comment">//获取非系统模块 只用于cloud_m_query()方法</span></span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">&#x27;SELECT `name` FROM &#x27;</span> . tablename(<span class="string">&#x27;modules&#x27;</span>) . <span class="string">&#x27; WHERE `type` &lt;&gt; :type&#x27;</span>;</span><br><span class="line">	<span class="variable">$modules</span> = pdo_fetchall(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&#x27;:type&#x27;</span> =&gt; <span class="string">&#x27;system&#x27;</span>), <span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$modules</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> base64_encode(iserializer(array_keys(<span class="variable">$modules</span>)));</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_extra_theme</span>(<span class="params"></span>) </span>&#123;<span class="comment">//获取非默认模板 </span></span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">&#x27;SELECT `name` FROM &#x27;</span> . tablename(<span class="string">&#x27;site_templates&#x27;</span>) . <span class="string">&#x27; WHERE `name` &lt;&gt; :name&#x27;</span>;</span><br><span class="line">	<span class="variable">$themes</span> = pdo_fetchall(<span class="variable">$sql</span>, <span class="keyword">array</span>(<span class="string">&#x27;:name&#x27;</span> =&gt; <span class="string">&#x27;default&#x27;</span>), <span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$themes</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> base64_encode(iserializer(array_keys(<span class="variable">$themes</span>)));</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_cron_create</span>(<span class="params"><span class="variable">$cron</span></span>) </span>&#123;<span class="comment">//添加定时任务</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;cron.create&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;cron&#x27;</span>] = base64_encode(iserializer(<span class="variable">$cron</span>));</span><br><span class="line">	<span class="variable">$result</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="keyword">return</span> _cloud_cron_parse(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_cron_update</span>(<span class="params"><span class="variable">$cron</span></span>) </span>&#123;<span class="comment">//更新定时任务</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;cron.update&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;cron&#x27;</span>] = base64_encode(iserializer(<span class="variable">$cron</span>));</span><br><span class="line">	<span class="variable">$result</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="keyword">return</span> _cloud_cron_parse(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_cron_get</span>(<span class="params"><span class="variable">$cron_id</span></span>) </span>&#123;<span class="comment">//获取定时任务</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;cron.get&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;cron_id&#x27;</span>] = <span class="variable">$cron_id</span>;</span><br><span class="line">	<span class="variable">$result</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="keyword">return</span> _cloud_cron_parse(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_cron_change_status</span>(<span class="params"><span class="variable">$cron_id</span>, <span class="variable">$status</span></span>) </span>&#123;<span class="comment">//更改定时任务状态</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;cron.status&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;cron_id&#x27;</span>] = <span class="variable">$cron_id</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;status&#x27;</span>] = <span class="variable">$status</span>;</span><br><span class="line">	<span class="variable">$result</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="keyword">return</span> _cloud_cron_parse(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_cron_remove</span>(<span class="params"><span class="variable">$cron_id</span></span>) </span>&#123;<span class="comment">//删除定时任务</span></span><br><span class="line">	<span class="variable">$pars</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;method&#x27;</span>] = <span class="string">&#x27;cron.remove&#x27;</span>;</span><br><span class="line">	<span class="variable">$pars</span>[<span class="string">&#x27;cron_id&#x27;</span>] = <span class="variable">$cron_id</span>;</span><br><span class="line">	<span class="variable">$result</span> = cloud_request(<span class="string">&#x27;http://v2.addons.we7.cc/gateway.php&#x27;</span>, <span class="variable">$pars</span>);</span><br><span class="line">	<span class="keyword">return</span> _cloud_cron_parse(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_cloud_cron_parse</span>(<span class="params"><span class="variable">$result</span></span>) </span>&#123;<span class="comment">//定时任务返回结果处理</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$result</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;没有接收到服务器的传输的数据&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$result</span>[<span class="string">&#x27;content&#x27;</span>] == <span class="string">&#x27;blacklist&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;抱歉，您的站点已被列入云服务黑名单，云服务一切业务已被禁止，请联系微擎客服！&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$result</span> = json_decode(<span class="variable">$result</span>[<span class="string">&#x27;content&#x27;</span>], <span class="literal">true</span>);</span><br><span class="line">	<span class="keyword">if</span> (<span class="literal">null</span> === <span class="variable">$result</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="string">&#x27;云服务通讯发生错误，请稍后重新尝试！&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$result</span> = <span class="variable">$result</span>[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line">	<span class="keyword">if</span> (is_error(<span class="variable">$result</span>)) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">-1</span>, <span class="variable">$result</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_auth_url</span>(<span class="params"><span class="variable">$forward</span>, <span class="variable">$data</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;<span class="comment">//云端oauth权限</span></span><br><span class="line">	<span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$auth</span> = <span class="keyword">array</span>();</span><br><span class="line">	<span class="variable">$auth</span>[<span class="string">&#x27;key&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$auth</span>[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$auth</span>[<span class="string">&#x27;url&#x27;</span>] = rtrim(<span class="variable">$_W</span>[<span class="string">&#x27;siteroot&#x27;</span>], <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">	<span class="variable">$auth</span>[<span class="string">&#x27;referrer&#x27;</span>] = intval(<span class="variable">$_W</span>[<span class="string">&#x27;config&#x27;</span>][<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;referrer&#x27;</span>]);</span><br><span class="line">	<span class="variable">$auth</span>[<span class="string">&#x27;version&#x27;</span>] = IMS_VERSION;</span><br><span class="line">	<span class="variable">$auth</span>[<span class="string">&#x27;forward&#x27;</span>] = <span class="variable">$forward</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;token&#x27;</span>])) &#123;</span><br><span class="line">		<span class="variable">$auth</span>[<span class="string">&#x27;key&#x27;</span>] = <span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">		<span class="variable">$auth</span>[<span class="string">&#x27;password&#x27;</span>] = md5(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;key&#x27;</span>] . <span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;site&#x27;</span>][<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$data</span> &amp;&amp; is_array(<span class="variable">$data</span>)) &#123;</span><br><span class="line">		<span class="variable">$auth</span> = array_merge(<span class="variable">$auth</span>, <span class="variable">$data</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$query</span> = base64_encode(json_encode(<span class="variable">$auth</span>));</span><br><span class="line">	<span class="variable">$auth_url</span> = <span class="string">&#x27;http://v2.addons.we7.cc/web/index.php?c=auth&amp;a=passwort&amp;__auth=&#x27;</span> . <span class="variable">$query</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$auth_url</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_module_setting_prepare</span>(<span class="params"><span class="variable">$module</span>, <span class="variable">$binding</span></span>) </span>&#123;<span class="comment">//模块设置</span></span><br><span class="line">	<span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line">	<span class="variable">$auth</span> = _cloud_build_params();</span><br><span class="line">	<span class="variable">$auth</span>[<span class="string">&#x27;arguments&#x27;</span>] = <span class="keyword">array</span>(</span><br><span class="line">		<span class="string">&#x27;binding&#x27;</span> =&gt; <span class="variable">$binding</span>,</span><br><span class="line">		<span class="string">&#x27;acid&#x27;</span> =&gt; <span class="variable">$_W</span>[<span class="string">&#x27;uniacid&#x27;</span>],</span><br><span class="line">		<span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;module&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;module&#x27;</span> =&gt; <span class="variable">$module</span>,</span><br><span class="line">	);</span><br><span class="line">	<span class="variable">$iframe_auth_url</span> = cloud_auth_url(<span class="string">&#x27;module&#x27;</span>, <span class="variable">$auth</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$iframe_auth_url</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloud_resource_to_local</span>(<span class="params"><span class="variable">$uniacid</span>, <span class="variable">$type</span>, <span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">global</span> <span class="variable">$_W</span>;</span><br><span class="line"></span><br><span class="line">	load()-&gt;func(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$setting</span> = <span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;upload&#x27;</span>][<span class="variable">$type</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$pathinfo</span> = pathinfo(<span class="variable">$url</span>);</span><br><span class="line">	<span class="variable">$extension</span> = !<span class="keyword">empty</span>(<span class="variable">$pathinfo</span>[<span class="string">&#x27;extension&#x27;</span>]) ? <span class="variable">$pathinfo</span>[<span class="string">&#x27;extension&#x27;</span>] : <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">	<span class="variable">$originname</span> = <span class="variable">$pathinfo</span>[<span class="string">&#x27;basename&#x27;</span>];</span><br><span class="line"></span><br><span class="line">	<span class="variable">$setting</span>[<span class="string">&#x27;folder&#x27;</span>] = <span class="string">&quot;<span class="subst">&#123;$type&#125;</span>s/<span class="subst">&#123;$uniacid&#125;</span>/&quot;</span>.date(<span class="string">&#x27;Y/m/&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$originname</span> = pathinfo(<span class="variable">$url</span>, PATHINFO_BASENAME);</span><br><span class="line">	<span class="variable">$filename</span> = file_random_name(ATTACHMENT_ROOT .<span class="string">&#x27;/&#x27;</span>. <span class="variable">$setting</span>[<span class="string">&#x27;folder&#x27;</span>], <span class="variable">$extension</span>);</span><br><span class="line">	<span class="variable">$pathname</span> = <span class="variable">$setting</span>[<span class="string">&#x27;folder&#x27;</span>] . <span class="variable">$filename</span>;</span><br><span class="line">	<span class="variable">$fullname</span> = ATTACHMENT_ROOT . <span class="variable">$pathname</span>;</span><br><span class="line"></span><br><span class="line">	mkdirs(dirname(<span class="variable">$fullname</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (file_put_contents(<span class="variable">$fullname</span>, file_get_contents(<span class="variable">$url</span>)) == <span class="literal">false</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">1</span>, <span class="string">&#x27;提取文件失败&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_W</span>[<span class="string">&#x27;setting&#x27;</span>][<span class="string">&#x27;remote&#x27;</span>][<span class="string">&#x27;type&#x27;</span>])) &#123;</span><br><span class="line">		<span class="variable">$remotestatus</span> = file_remote_upload(<span class="variable">$pathname</span>);</span><br><span class="line">		<span class="keyword">if</span> (is_error(<span class="variable">$remotestatus</span>)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">error</span>(<span class="number">1</span>, <span class="string">&#x27;远程附件上传失败，请检查配置并重新上传&#x27;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			file_delete(<span class="variable">$pathname</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$data</span> = <span class="keyword">array</span>(</span><br><span class="line">		<span class="string">&#x27;uniacid&#x27;</span> =&gt; <span class="variable">$uniacid</span>,</span><br><span class="line">		<span class="string">&#x27;uid&#x27;</span> =&gt; intval(<span class="variable">$_W</span>[<span class="string">&#x27;uid&#x27;</span>]),</span><br><span class="line">		<span class="string">&#x27;filename&#x27;</span> =&gt; <span class="variable">$originname</span>,</span><br><span class="line">		<span class="string">&#x27;attachment&#x27;</span> =&gt; <span class="variable">$pathname</span>,</span><br><span class="line">		<span class="string">&#x27;type&#x27;</span> =&gt; <span class="variable">$type</span> == <span class="string">&#x27;image&#x27;</span> ? <span class="number">1</span> : <span class="number">2</span>,</span><br><span class="line">		<span class="string">&#x27;createtime&#x27;</span> =&gt; TIMESTAMP,</span><br><span class="line">	);</span><br><span class="line">	pdo_insert(<span class="string">&#x27;core_attachment&#x27;</span>, <span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$data</span>[<span class="string">&#x27;url&#x27;</span>] = tomedia(<span class="variable">$pathname</span>);</span><br><span class="line">	<span class="variable">$data</span>[<span class="string">&#x27;id&#x27;</span>] = pdo_insertid();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>二次开发</category>
      </categories>
      <tags>
        <tag>微擎</tag>
        <tag>php</tag>
        <tag>二次开发</tag>
      </tags>
  </entry>
  <entry>
    <title>实例 通过违章查询 优化json数据应用及实现历史记录功能</title>
    <url>/2015/04/10/20150410-illegal-json-history/</url>
    <content><![CDATA[<p>实例应用：汽车点修网违章查询<br>应用地址：<a href="http://www.car91.cn/">http://www.car91.cn</a><br>实现效果：对接聚合数据，实现违章查询功能，并对查询记录通过cookie保存，方便下次直接点击查询</p>
<a id="more"></a>
<h3 id="code-v1代码："><a href="#code-v1代码：" class="headerlink" title="code-v1代码："></a>code-v1代码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">define([<span class="string">&quot;jquery&quot;</span>, <span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;jquery.cookie&#x27;</span>], <span class="function"><span class="keyword">function</span>(<span class="params">$, config</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        wzInit: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> history = $.cookie(<span class="string">&quot;queryHistory&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (history) &#123;</span><br><span class="line">                <span class="keyword">var</span> historyJson = <span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span> + history + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (historyJson.length &gt; <span class="number">0</span>) &#123;<span class="comment">//因为是采用前置插入的方式，所以在插入前先判断是否已经插入过，避免多次运行重复生成的情况</span></span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="string">&quot;.quick-wz&quot;</span>).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        $(<span class="string">&quot;.quick-wz&quot;</span>).remove();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> list = <span class="string">&quot;&lt;div class=&#x27;quick-wz&#x27;&gt;&lt;p class=&#x27;quick-wz__tit&#x27;&gt;快速查询&lt;/p&gt;&lt;ul class=&#x27;quick-wz__list clearfix&#x27;&gt;&quot;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; historyJson.length; i++) &#123;</span><br><span class="line">                        list = list + <span class="string">&quot;&lt;li class=&#x27;query&#x27; data-index=&#x27;&quot;</span> + i + <span class="string">&quot;&#x27;&gt;&quot;</span> + <span class="built_in">decodeURIComponent</span>(historyJson[i].hphm) + <span class="string">&quot; &quot;</span> + <span class="built_in">decodeURIComponent</span>(historyJson[i].cityName) + <span class="string">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    list = list + <span class="string">&quot;&lt;/ul&gt;&lt;/div&gt;&quot;</span></span><br><span class="line">                    $(<span class="string">&quot;#wzForm&quot;</span>).before(list);</span><br><span class="line">                    $(<span class="string">&quot;.query&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> index = $(<span class="built_in">this</span>).data(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">                        $.ajax(&#123;</span><br><span class="line">                            type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                            dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                            url: config.wzQuery,</span><br><span class="line">                            data: &#123;</span><br><span class="line">                                <span class="string">&quot;city&quot;</span>: historyJson[index].city,</span><br><span class="line">                                <span class="string">&quot;hpzl&quot;</span>: historyJson[index].hpzl,</span><br><span class="line">                                <span class="string">&quot;car_province&quot;</span>: historyJson[index].car_province,</span><br><span class="line">                                <span class="string">&quot;hphm2&quot;</span>: historyJson[index].hphm2,</span><br><span class="line">                                <span class="string">&quot;engineno&quot;</span>: historyJson[index].engineno,</span><br><span class="line">                                <span class="string">&quot;classno&quot;</span>: historyJson[index].classno,</span><br><span class="line">                                <span class="string">&quot;registno&quot;</span>: historyJson[index].registno,</span><br><span class="line">                                <span class="string">&quot;hphm&quot;</span>: historyJson[index].hphm</span><br><span class="line">                            &#125;,</span><br><span class="line">                            success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                                <span class="comment">//var e=eval(&quot;(&quot;+e+&quot;)&quot;);</span></span><br><span class="line">                                <span class="keyword">var</span> resultcode = e.resultcode;</span><br><span class="line">                                <span class="keyword">var</span> info = e.reason;</span><br><span class="line">                                <span class="keyword">if</span> (resultcode == <span class="string">&#x27;200&#x27;</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> html = <span class="string">&#x27;&lt;table width=&quot;98%&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border:1px solid #f2f2f2&quot;&gt;&#x27;</span>;</span><br><span class="line">                                    html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot;&gt;&amp;nbsp;时间&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;地点&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章事项&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章代码&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;扣分&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;罚款&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;是否处理&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                    <span class="keyword">var</span> list = e.result.lists;</span><br><span class="line">                                    <span class="keyword">if</span> (list.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> list) &#123;</span><br><span class="line">                                            html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot; width=&quot;120&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].date + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;150&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].area + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;280&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].act + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;60&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].code + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].fen + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].money + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].handled + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                        html += <span class="string">&#x27;&lt;tr&gt;&lt;td colspan=7 height=&quot;40&quot;&gt;查询不到该车辆的违章记录&lt;/td&gt;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    html += <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line">                                    $(<span class="string">&quot;.wz-result&quot;</span>).html(html);</span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultcode == <span class="string">&#x27;210&#x27;</span>) &#123;</span><br><span class="line">                                    alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                                &#125;</span><br><span class="line">                                $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;违章查询&#x27;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> queryHistory = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> city = $(<span class="string">&quot;select[name=&#x27;city&#x27;]&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> hpzl = $(<span class="string">&quot;select[name=&#x27;hpzl&#x27;]&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> car_province = $(<span class="string">&quot;select[name=&#x27;car_province&#x27;]&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> hphm2 = $(<span class="string">&quot;input[name=&#x27;hphm2&#x27;]&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> engineno = $(<span class="string">&quot;input[name=&#x27;engineno&#x27;]&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> classno = $(<span class="string">&quot;input[name=&#x27;classno&#x27;]&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> registno = $(<span class="string">&quot;input[name=&#x27;registno&#x27;]&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> hphm = $(<span class="string">&quot;#hphm&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> cityName = $(<span class="string">&quot;.selectCitys option:selected&quot;</span>).text();</span><br><span class="line">                    cityName = <span class="built_in">encodeURIComponent</span>(cityName);</span><br><span class="line">                    <span class="keyword">var</span> len = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">var</span> canAdd = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (history) &#123;</span><br><span class="line">                        len = historyJson.length;</span><br><span class="line">                        $(historyJson).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="built_in">this</span>.city == city &amp;&amp; <span class="built_in">this</span>.hphm == hphm) &#123;<span class="comment">//判断相同车牌号及相同城市的查询</span></span><br><span class="line">                                canAdd = <span class="literal">false</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (canAdd == <span class="literal">true</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> newCookie = <span class="string">&quot;[&quot;</span>;</span><br><span class="line">                        <span class="keyword">var</span> start = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">if</span> (len &gt; <span class="number">2</span>) &#123;<span class="comment">//最多记录三条历史记录</span></span><br><span class="line">                            start = <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = start; i &lt; len; i++) &#123;</span><br><span class="line">                            newCookie = newCookie + <span class="string">&quot;&#123;\&quot;city\&quot;:\&quot;&quot;</span> + historyJson[i].city + <span class="string">&quot;\&quot;,\&quot;hpzl\&quot;:\&quot;&quot;</span> + historyJson[i].hpzl + <span class="string">&quot;\&quot;,\&quot;car_province\&quot;:\&quot;&quot;</span> + historyJson[i].car_province + <span class="string">&quot;\&quot;,\&quot;hphm2\&quot;:\&quot;&quot;</span> + historyJson[i].hphm2 + <span class="string">&quot;\&quot;,\&quot;engineno\&quot;:\&quot;&quot;</span> + historyJson[i].engineno + <span class="string">&quot;\&quot;,\&quot;classno\&quot;:\&quot;&quot;</span> + historyJson[i].classno + <span class="string">&quot;\&quot;,\&quot;registno\&quot;:\&quot;&quot;</span> + historyJson[i].registno + <span class="string">&quot;\&quot;,\&quot;hphm\&quot;:\&quot;&quot;</span> + historyJson[i].hphm + <span class="string">&quot;\&quot;,\&quot;cityName\&quot;:\&quot;&quot;</span> + historyJson[i].cityName + <span class="string">&quot;\&quot;&#125;,&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        newCookie = newCookie + <span class="string">&quot;&#123;\&quot;city\&quot;:\&quot;&quot;</span> + city + <span class="string">&quot;\&quot;,\&quot;hpzl\&quot;:\&quot;&quot;</span> + hpzl + <span class="string">&quot;\&quot;,\&quot;car_province\&quot;:\&quot;&quot;</span> + car_province + <span class="string">&quot;\&quot;,\&quot;hphm2\&quot;:\&quot;&quot;</span> + hphm2 + <span class="string">&quot;\&quot;,\&quot;engineno\&quot;:\&quot;&quot;</span> + engineno + <span class="string">&quot;\&quot;,\&quot;classno\&quot;:\&quot;&quot;</span> + classno + <span class="string">&quot;\&quot;,\&quot;registno\&quot;:\&quot;&quot;</span> + registno + <span class="string">&quot;\&quot;,\&quot;hphm\&quot;:\&quot;&quot;</span> + hphm + <span class="string">&quot;\&quot;,\&quot;cityName\&quot;:\&quot;&quot;</span> + cityName + <span class="string">&quot;\&quot;&#125;]&quot;</span>;</span><br><span class="line">                        $.cookie(<span class="string">&quot;queryHistory&quot;</span>, newCookie, &#123;</span><br><span class="line">                            expires: <span class="number">1</span>,</span><br><span class="line">                            path: <span class="string">&quot;/&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                url: config.wzCity,</span><br><span class="line">                data: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">&quot;.selectProvince&quot;</span>).empty();</span><br><span class="line">                    <span class="keyword">var</span> html = <span class="string">&#x27;&lt;option value=&quot;&quot;&gt;请选择城市&lt;/option&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">var</span> ev = e[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                    <span class="keyword">for</span> (i <span class="keyword">in</span> ev) &#123;</span><br><span class="line">                        html += <span class="string">&quot;&lt;option value=&#x27;&quot;</span> + ev[i].province_code + <span class="string">&quot;&#x27;&gt;&quot;</span> + ev[i].province + <span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">                        <span class="comment">//alert(e[i].city_name);</span></span><br><span class="line">                        <span class="comment">//$(&quot;.selectCitys&quot;).append(&quot;&lt;option value=&#x27;&quot;+e[i].city_code+&quot;&#x27;&gt;&quot;+e[i].city_name+&quot;&lt;/option&gt;&quot;);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    $(<span class="string">&quot;.selectProvince&quot;</span>).append(html);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">var</span> evc;</span><br><span class="line">            $(<span class="string">&quot;#selectProvince&quot;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> province = $(<span class="string">&quot;.selectProvince&quot;</span>).val();</span><br><span class="line">                $(<span class="string">&quot;.selectCitys&quot;</span>).empty().append(<span class="string">&quot;&lt;option&gt;loading...&lt;/option&gt;&quot;</span>);</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                    dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                    url: config.wzCity,</span><br><span class="line">                    data: <span class="string">&quot;province=&quot;</span> + <span class="built_in">encodeURIComponent</span>(province),</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">&quot;.selectCitys&quot;</span>).empty();</span><br><span class="line">                        <span class="keyword">var</span> html = <span class="string">&#x27;&lt;option value=&quot;&quot;&gt;请选择城市&lt;/option&gt;&#x27;</span>;</span><br><span class="line">                        ev = e[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                        $.each(ev, <span class="function"><span class="keyword">function</span>(<span class="params">k, v</span>) </span>&#123;</span><br><span class="line">                            evc=v;</span><br><span class="line">                            $.each(v[<span class="string">&#x27;citys&#x27;</span>], <span class="function"><span class="keyword">function</span>(<span class="params">kk, vv</span>) </span>&#123;</span><br><span class="line">                                html += <span class="string">&quot;&lt;option value=&#x27;&quot;</span> + vv.city_code + <span class="string">&quot;&#x27; engine=&#x27;&quot;</span>+vv.engine+<span class="string">&quot;&#x27; engineno=&#x27;&quot;</span>+vv.engineno+<span class="string">&quot;&#x27; abbr=&#x27;&quot;</span> + vv.abbr + <span class="string">&quot;&#x27; eclass=&#x27;&quot;</span> + vv.class + <span class="string">&quot;&#x27; eclassno=&#x27;&quot;</span> + vv.classno + <span class="string">&quot;&#x27;&gt;&quot;</span> + vv.city_name + <span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">                            &#125;)</span><br><span class="line">                            $(<span class="string">&quot;.selectCitys&quot;</span>).append(html);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">&quot;.selectCitys&quot;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> province = $(<span class="string">&quot;.selectProvince&quot;</span>).val();</span><br><span class="line">                <span class="keyword">var</span> index=$(<span class="built_in">this</span>).get(<span class="number">0</span>).selectedIndex-<span class="number">1</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(evc[<span class="string">&#x27;citys&#x27;</span>][index]);</span><br><span class="line">                <span class="keyword">var</span> qinfo=evc[<span class="string">&#x27;citys&#x27;</span>][index];</span><br><span class="line">                <span class="built_in">console</span>.log(qinfo.abbr);</span><br><span class="line">                <span class="keyword">var</span> city = $(<span class="built_in">this</span>).val();</span><br><span class="line">                <span class="keyword">var</span> abbr = $(<span class="string">&quot;.selectCitys&quot;</span>).find(<span class="string">&quot;option:selected&quot;</span>).attr(<span class="string">&quot;abbr&quot;</span>);</span><br><span class="line">                <span class="keyword">var</span> engine = $(<span class="string">&quot;.selectCitys&quot;</span>).find(<span class="string">&quot;option:selected&quot;</span>).attr(<span class="string">&quot;engine&quot;</span>);</span><br><span class="line">                <span class="keyword">var</span> engineno = $(<span class="string">&quot;.selectCitys&quot;</span>).find(<span class="string">&quot;option:selected&quot;</span>).attr(<span class="string">&quot;engineno&quot;</span>);</span><br><span class="line">                <span class="keyword">var</span> eclass = $(<span class="string">&quot;.selectCitys&quot;</span>).find(<span class="string">&quot;option:selected&quot;</span>).attr(<span class="string">&quot;eclass&quot;</span>);</span><br><span class="line">                <span class="keyword">var</span> eclassno = $(<span class="string">&quot;.selectCitys&quot;</span>).find(<span class="string">&quot;option:selected&quot;</span>).attr(<span class="string">&quot;eclassno&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span>(abbr) != <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">                    $(<span class="string">&quot;#car_province&quot;</span>).val(abbr);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (engine == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (engineno == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> engineinfo = <span class="string">&#x27;全部发动机号&#x27;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> engineinfo = <span class="string">&#x27;发动机号后&#x27;</span> + engineno + <span class="string">&#x27;位&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $(<span class="string">&quot;input[name=engineno]&quot;</span>).attr(<span class="string">&quot;placeholder&quot;</span>, engineinfo);</span><br><span class="line">                    $(<span class="string">&quot;#engineno&quot;</span>).css(&#123;</span><br><span class="line">                        display: <span class="string">&quot;&quot;</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">&quot;#engineno&quot;</span>).css(&#123;</span><br><span class="line">                        display: <span class="string">&quot;none&quot;</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (eclass == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (eclassno == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> classinfo = <span class="string">&#x27;全部车架号&#x27;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> classinfo = <span class="string">&#x27;车架号后&#x27;</span> + eclassno + <span class="string">&#x27;位&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $(<span class="string">&quot;input[name=classno]&quot;</span>).attr(<span class="string">&quot;placeholder&quot;</span>, classinfo);</span><br><span class="line">                    $(<span class="string">&quot;#classno&quot;</span>).css(&#123;</span><br><span class="line">                        display: <span class="string">&quot;&quot;</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">&quot;#classno&quot;</span>).css(&#123;</span><br><span class="line">                        display: <span class="string">&quot;none&quot;</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">&quot;.wz-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;查询中...&#x27;</span>).attr(<span class="string">&quot;disabled&quot;</span>, <span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">                $(<span class="string">&quot;.wz-result&quot;</span>).html(<span class="string">&#x27;正在查询中....&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> hphm = $(<span class="string">&quot;#car_province&quot;</span>).val() + $(<span class="string">&quot;.onlyhm&quot;</span>).val();</span><br><span class="line">                hphm = <span class="built_in">encodeURIComponent</span>(hphm);</span><br><span class="line">                $(<span class="string">&quot;#hphm&quot;</span>).val(hphm);</span><br><span class="line">                queryHistory();</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                    <span class="comment">//用POST方式传输</span></span><br><span class="line">                    dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                    <span class="comment">//数据格式:JSON</span></span><br><span class="line">                    url: config.wzQuery,</span><br><span class="line">                    <span class="comment">//目标地址</span></span><br><span class="line">                    data: &#123;</span><br><span class="line">                        <span class="string">&quot;city&quot;</span>: $(<span class="string">&quot;select[name=&#x27;city&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;hpzl&quot;</span>: $(<span class="string">&quot;select[name=&#x27;hpzl&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;car_province&quot;</span>: $(<span class="string">&quot;select[name=&#x27;car_province&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;hphm2&quot;</span>: $(<span class="string">&quot;input[name=&#x27;hphm2&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;engineno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;engineno&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;classno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;classno&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;registno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;registno&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;hphm&quot;</span>: hphm</span><br><span class="line">                    &#125;,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                        <span class="comment">//var e=eval(&quot;(&quot;+e+&quot;)&quot;);</span></span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">                        <span class="keyword">var</span> resultcode = e.resultcode;</span><br><span class="line">                        <span class="keyword">var</span> info = e.reason;</span><br><span class="line">                        <span class="keyword">if</span> (resultcode == <span class="string">&#x27;200&#x27;</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> html = <span class="string">&#x27;&lt;table width=&quot;98%&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border:1px solid #f2f2f2&quot;&gt;&#x27;</span>;</span><br><span class="line">                            html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot;&gt;&amp;nbsp;时间&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;地点&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章事项&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章代码&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;扣分&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;罚款&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;是否处理&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                            <span class="keyword">var</span> list = e.result.lists;</span><br><span class="line">                            <span class="keyword">if</span> (list.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> list) &#123;</span><br><span class="line">                                    html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot; width=&quot;120&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].date + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;150&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].area + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;280&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].act + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;60&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].code + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].fen + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].money + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].handled + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                html += <span class="string">&#x27;&lt;tr&gt;&lt;td colspan=6 height=&quot;40&quot;&gt;查询不到该车辆的违章记录&lt;/td&gt;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            html += <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line">                            $(<span class="string">&quot;.wz-result&quot;</span>).html(html);</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultcode == <span class="string">&#x27;210&#x27;</span>) &#123;</span><br><span class="line">                            alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;违章查询&#x27;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="代码说明："><a href="#代码说明：" class="headerlink" title="代码说明："></a>代码说明：</h2><p>1.该模块加载了jquery.cookie插件，主要是为了方便把json数据保存在cookie中。模块加载进来后，首先判断是存在历史记录，存在的话就进行相应的显示，在最开始书写的时间，生成历史记录图标，我是把所有需要的参数都通过data标签生成在DOM元素上的，例如</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">list = list + &quot;<span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&#x27;query&#x27;</span> <span class="attr">data-city</span>=<span class="string">&#x27;&quot;+historyJson[i].city+&quot;&#x27;</span>&gt;</span>&quot; + decodeURIComponent(historyJson[i].hphm) + &quot; &quot; + decodeURIComponent(historyJson[i].cityName) + &quot;<span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>然后在接下来的ajax发送数据的时候，则通过<code>$(this).data(&#39;city&#39;)</code>来获取数据，后来发现这样标签内容非常多，而我们在点击时候，其实只需要知道是点击的第一个标签，然后从原始的json数据中去获取对应的值就可以了，于是就产生了上面的data-index的写法，在获取数据时，采用historyJson[index].city就可以了。</p>
<h2 id="代码优化："><a href="#代码优化：" class="headerlink" title="代码优化："></a>代码优化：</h2><p>1.在<code>$(&quot;#selectProvince&quot;).change(function()</code>函数中，通过ajax获取到应用城市的json数据，数据为多层，示例如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">jQuery19103159100429620594_1428636651525(&#123;</span><br><span class="line">    <span class="string">&quot;resultcode&quot;</span>: <span class="string">&quot;200&quot;</span>,</span><br><span class="line">    <span class="string">&quot;reason&quot;</span>: <span class="string">&quot;成功的返回&quot;</span>,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;QH&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;province&quot;</span>: <span class="string">&quot;青海&quot;</span>,</span><br><span class="line">            <span class="string">&quot;province_code&quot;</span>: <span class="string">&quot;QH&quot;</span>,</span><br><span class="line">            <span class="string">&quot;citys&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;西宁&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_XN&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;海东&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_HAIDONG&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;海西&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_HAIXI&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;海南&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_HAINAN&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;玉树&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_YUSHU&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;黄南&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_HUANGNAN&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;海北&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_HAIBEI&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;果洛&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;QH_GUOLUO&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;abbr&quot;</span>: <span class="string">&quot;青&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engine&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;engineno&quot;</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classa&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;class&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;classno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;regist&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;registno&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;error_code&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>我需要获取到最底层每个城市的信息，原来的写法是通过<code>$.each</code>访求循环来获取，后来研究json格式时，明白了大括号表示对象，中括号表示数组，对象可以通过点的方式如obj.result或者key的方法如obj[result]的方法来获取，而数据则是通过下标来获取，如obj[0],上面的json中，每次选择一个省份后，只是返回一个该省份的数据，即result下面的对象只有一个，而且对象名可以通过select的值来获取，因此，不需要通过循环，直接通过下标就可以获取到值了。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ev = e[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> evc=ev[province];</span><br></pre></td></tr></table></figure>
<p>2.继续刚刚$.each里面的循环部分，我还是把返回的json数据写入到了dom标签中，这一步可以继续优化，因为我们可以通过<code>$(this).get(0).selectedIndex</code>获取到当前选中项的索引值，因为我们可以通过该索引值再去读取json中对应的值就可以了。于是有了上面代码中的初步测试部分</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> index=$(<span class="built_in">this</span>).get(<span class="number">0</span>).selectedIndex-<span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(evc[<span class="string">&#x27;citys&#x27;</span>][index]);</span><br><span class="line"><span class="keyword">var</span> qinfo=evc[<span class="string">&#x27;citys&#x27;</span>][index];</span><br><span class="line"><span class="built_in">console</span>.log(qinfo.abbr);</span><br></pre></td></tr></table></figure>
<p>3.再来优化，上面第2条中的返回json数据我是通过定义一个全局变量<code>evc</code>来方便下面的<code>$(&quot;.selectCitys&quot;).change(function()</code>方法访问，我们来继续优化减少全局变量，把<code>$(&quot;.selectCitys&quot;).change(function()</code>封装成一个函数，把json返回值通过传值的方式来传递，于是便有了如下写法：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectCitys</span>(<span class="params">evc</span>)</span>&#123;</span><br><span class="line">    $(<span class="string">&quot;.selectCitys&quot;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> province = $(<span class="string">&quot;.selectProvince&quot;</span>).val();</span><br><span class="line">        <span class="keyword">var</span> city = $(<span class="built_in">this</span>).val();</span><br><span class="line">        <span class="keyword">var</span> index=$(<span class="built_in">this</span>).get(<span class="number">0</span>).selectedIndex-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> cityInfo=evc[<span class="string">&#x27;citys&#x27;</span>][index];</span><br><span class="line">        <span class="keyword">var</span> abbr = cityInfo.abbr;</span><br><span class="line">        <span class="keyword">var</span> engine = cityInfo.engine;</span><br><span class="line">        <span class="keyword">var</span> engineno = cityInfo.engineno;</span><br><span class="line">        <span class="keyword">var</span> eclass = cityInfo.class;</span><br><span class="line">        <span class="keyword">var</span> eclassno = cityInfo.classno;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span>(abbr) != <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">            $(<span class="string">&quot;#car_province&quot;</span>).val(abbr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (engine == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (engineno == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> engineinfo = <span class="string">&#x27;全部发动机号&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> engineinfo = <span class="string">&#x27;发动机号后&#x27;</span> + engineno + <span class="string">&#x27;位&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">&quot;input[name=engineno]&quot;</span>).attr(<span class="string">&quot;placeholder&quot;</span>, engineinfo);</span><br><span class="line">            $(<span class="string">&quot;#engineno&quot;</span>).css(&#123;</span><br><span class="line">                display: <span class="string">&quot;&quot;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">&quot;#engineno&quot;</span>).css(&#123;</span><br><span class="line">                display: <span class="string">&quot;none&quot;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (eclass == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (eclassno == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> classinfo = <span class="string">&#x27;全部车架号&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> classinfo = <span class="string">&#x27;车架号后&#x27;</span> + eclassno + <span class="string">&#x27;位&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">&quot;input[name=classno]&quot;</span>).attr(<span class="string">&quot;placeholder&quot;</span>, classinfo);</span><br><span class="line">            $(<span class="string">&quot;#classno&quot;</span>).css(&#123;</span><br><span class="line">                display: <span class="string">&quot;&quot;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">&quot;#classno&quot;</span>).css(&#123;</span><br><span class="line">                display: <span class="string">&quot;none&quot;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>4.优化继续，我们发现在上面的代码中，记录cookie及查询的时候，两次手动读取了一样的数据，于是我们可以把这部分先独立出来，接下来传值即可。如果优化如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;.wz-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;查询中...&#x27;</span>).attr(<span class="string">&quot;disabled&quot;</span>, <span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">    $(<span class="string">&quot;.wz-result&quot;</span>).html(<span class="string">&#x27;正在查询中....&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> hphm = $(<span class="string">&quot;#car_province&quot;</span>).val() + $(<span class="string">&quot;.onlyhm&quot;</span>).val();</span><br><span class="line">    hphm = <span class="built_in">encodeURIComponent</span>(hphm);</span><br><span class="line">    $(<span class="string">&quot;#hphm&quot;</span>).val(hphm);</span><br><span class="line">    <span class="keyword">var</span> carInfo=&#123;</span><br><span class="line">            <span class="string">&quot;city&quot;</span>: $(<span class="string">&quot;select[name=&#x27;city&#x27;]&quot;</span>).val(),</span><br><span class="line">            <span class="string">&quot;hpzl&quot;</span>: $(<span class="string">&quot;select[name=&#x27;hpzl&#x27;]&quot;</span>).val(),</span><br><span class="line">            <span class="string">&quot;car_province&quot;</span>: $(<span class="string">&quot;select[name=&#x27;car_province&#x27;]&quot;</span>).val(),</span><br><span class="line">            <span class="string">&quot;hphm2&quot;</span>: $(<span class="string">&quot;input[name=&#x27;hphm2&#x27;]&quot;</span>).val(),</span><br><span class="line">            <span class="string">&quot;engineno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;engineno&#x27;]&quot;</span>).val(),</span><br><span class="line">            <span class="string">&quot;classno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;classno&#x27;]&quot;</span>).val(),</span><br><span class="line">            <span class="string">&quot;registno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;registno&#x27;]&quot;</span>).val(),</span><br><span class="line">            <span class="string">&quot;hphm&quot;</span>: hphm</span><br><span class="line">        &#125;;</span><br><span class="line">    queryHistory(carInfo);</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">        url: config.wzQuery,</span><br><span class="line">        data: carInfo,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> resultcode = e.resultcode;</span><br><span class="line">            <span class="keyword">var</span> info = e.reason;</span><br><span class="line">            <span class="keyword">if</span> (resultcode == <span class="string">&#x27;200&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> html = <span class="string">&#x27;&lt;table width=&quot;98%&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border:1px solid #f2f2f2&quot;&gt;&#x27;</span>;</span><br><span class="line">                html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot;&gt;&amp;nbsp;时间&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;地点&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章事项&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章代码&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;扣分&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;罚款&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;是否处理&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                <span class="keyword">var</span> list = e.result.lists;</span><br><span class="line">                <span class="keyword">if</span> (list.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> list) &#123;</span><br><span class="line">                        html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot; width=&quot;120&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].date + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;150&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].area + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;280&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].act + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;60&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].code + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].fen + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].money + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].handled + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    html += <span class="string">&#x27;&lt;tr&gt;&lt;td colspan=6 height=&quot;40&quot;&gt;查询不到该车辆的违章记录&lt;/td&gt;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                html += <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line">                $(<span class="string">&quot;.wz-result&quot;</span>).html(html);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultcode == <span class="string">&#x27;210&#x27;</span>) &#123;</span><br><span class="line">                alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;违章查询&#x27;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>因此，最终优化完毕的全部代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">define([<span class="string">&quot;jquery&quot;</span>, <span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;jquery.cookie&#x27;</span>], <span class="function"><span class="keyword">function</span>(<span class="params">$, config</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        wzInit: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> history = $.cookie(<span class="string">&quot;queryHistory&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (history) &#123;</span><br><span class="line">                <span class="keyword">var</span> historyJson = <span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span> + history + <span class="string">&quot;)&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (historyJson.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="string">&quot;.quick-wz&quot;</span>).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        $(<span class="string">&quot;.quick-wz&quot;</span>).remove();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> list = <span class="string">&quot;&lt;div class=&#x27;quick-wz&#x27;&gt;&lt;p class=&#x27;quick-wz__tit&#x27;&gt;快速查询&lt;/p&gt;&lt;ul class=&#x27;quick-wz__list clearfix&#x27;&gt;&quot;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; historyJson.length; i++) &#123;</span><br><span class="line">                        list = list + <span class="string">&quot;&lt;li class=&#x27;query&#x27; data-index=&#x27;&quot;</span> + i + <span class="string">&quot;&#x27;&gt;&quot;</span> + <span class="built_in">decodeURIComponent</span>(historyJson[i].hphm) + <span class="string">&quot; &quot;</span> + <span class="built_in">decodeURIComponent</span>(historyJson[i].cityName) + <span class="string">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    list = list + <span class="string">&quot;&lt;/ul&gt;&lt;/div&gt;&quot;</span></span><br><span class="line">                    $(<span class="string">&quot;#wzForm&quot;</span>).before(list);</span><br><span class="line">                    $(<span class="string">&quot;.query&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> index = $(<span class="built_in">this</span>).data(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">                        $.ajax(&#123;</span><br><span class="line">                            type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                            dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                            url: config.wzQuery,</span><br><span class="line">                            data: &#123;</span><br><span class="line">                                <span class="string">&quot;city&quot;</span>: historyJson[index].city,</span><br><span class="line">                                <span class="string">&quot;hpzl&quot;</span>: historyJson[index].hpzl,</span><br><span class="line">                                <span class="string">&quot;car_province&quot;</span>: historyJson[index].car_province,</span><br><span class="line">                                <span class="string">&quot;hphm2&quot;</span>: historyJson[index].hphm2,</span><br><span class="line">                                <span class="string">&quot;engineno&quot;</span>: historyJson[index].engineno,</span><br><span class="line">                                <span class="string">&quot;classno&quot;</span>: historyJson[index].classno,</span><br><span class="line">                                <span class="string">&quot;registno&quot;</span>: historyJson[index].registno,</span><br><span class="line">                                <span class="string">&quot;hphm&quot;</span>: historyJson[index].hphm</span><br><span class="line">                            &#125;,</span><br><span class="line">                            success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">var</span> resultcode = e.resultcode;</span><br><span class="line">                                <span class="keyword">var</span> info = e.reason;</span><br><span class="line">                                <span class="keyword">if</span> (resultcode == <span class="string">&#x27;200&#x27;</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> html = <span class="string">&#x27;&lt;table width=&quot;98%&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border:1px solid #f2f2f2&quot;&gt;&#x27;</span>;</span><br><span class="line">                                    html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot;&gt;&amp;nbsp;时间&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;地点&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章事项&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章代码&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;扣分&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;罚款&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;是否处理&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                    <span class="keyword">var</span> list = e.result.lists;</span><br><span class="line">                                    <span class="keyword">if</span> (list.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> list) &#123;</span><br><span class="line">                                            html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot; width=&quot;120&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].date + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;150&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].area + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;280&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].act + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;60&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].code + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].fen + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].money + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].handled + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                        html += <span class="string">&#x27;&lt;tr&gt;&lt;td colspan=7 height=&quot;40&quot;&gt;查询不到该车辆的违章记录&lt;/td&gt;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    html += <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line">                                    $(<span class="string">&quot;.wz-result&quot;</span>).html(html);</span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultcode == <span class="string">&#x27;210&#x27;</span>) &#123;</span><br><span class="line">                                    alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                                &#125;</span><br><span class="line">                                $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;违章查询&#x27;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> queryHistory = <span class="function"><span class="keyword">function</span>(<span class="params">carInfo</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> city = carInfo.city;</span><br><span class="line">                    <span class="keyword">var</span> hpzl = carInfo.hpzl;</span><br><span class="line">                    <span class="keyword">var</span> car_province = carInfo.car_province;</span><br><span class="line">                    <span class="keyword">var</span> hphm2 = carInfo.hphm2;</span><br><span class="line">                    <span class="keyword">var</span> engineno = carInfo.engineno;</span><br><span class="line">                    <span class="keyword">var</span> classno = carInfo.classno;</span><br><span class="line">                    <span class="keyword">var</span> registno = carInfo.registno;</span><br><span class="line">                    <span class="keyword">var</span> hphm = $(<span class="string">&quot;#hphm&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> cityName = $(<span class="string">&quot;.selectCitys option:selected&quot;</span>).text();</span><br><span class="line">                    cityName = <span class="built_in">encodeURIComponent</span>(cityName);</span><br><span class="line">                    <span class="keyword">var</span> len = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">var</span> canAdd = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (history) &#123;</span><br><span class="line">                        len = historyJson.length;</span><br><span class="line">                        $(historyJson).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="built_in">this</span>.city == city &amp;&amp; <span class="built_in">this</span>.hphm == hphm) &#123;</span><br><span class="line">                                canAdd = <span class="literal">false</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (canAdd == <span class="literal">true</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> newCookie = <span class="string">&quot;[&quot;</span>;</span><br><span class="line">                        <span class="keyword">var</span> start = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">if</span> (len &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                            start = <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = start; i &lt; len; i++) &#123;</span><br><span class="line">                            newCookie = newCookie + <span class="string">&quot;&#123;\&quot;city\&quot;:\&quot;&quot;</span> + historyJson[i].city + <span class="string">&quot;\&quot;,\&quot;hpzl\&quot;:\&quot;&quot;</span> + historyJson[i].hpzl + <span class="string">&quot;\&quot;,\&quot;car_province\&quot;:\&quot;&quot;</span> + historyJson[i].car_province + <span class="string">&quot;\&quot;,\&quot;hphm2\&quot;:\&quot;&quot;</span> + historyJson[i].hphm2 + <span class="string">&quot;\&quot;,\&quot;engineno\&quot;:\&quot;&quot;</span> + historyJson[i].engineno + <span class="string">&quot;\&quot;,\&quot;classno\&quot;:\&quot;&quot;</span> + historyJson[i].classno + <span class="string">&quot;\&quot;,\&quot;registno\&quot;:\&quot;&quot;</span> + historyJson[i].registno + <span class="string">&quot;\&quot;,\&quot;hphm\&quot;:\&quot;&quot;</span> + historyJson[i].hphm + <span class="string">&quot;\&quot;,\&quot;cityName\&quot;:\&quot;&quot;</span> + historyJson[i].cityName + <span class="string">&quot;\&quot;&#125;,&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        newCookie = newCookie + <span class="string">&quot;&#123;\&quot;city\&quot;:\&quot;&quot;</span> + city + <span class="string">&quot;\&quot;,\&quot;hpzl\&quot;:\&quot;&quot;</span> + hpzl + <span class="string">&quot;\&quot;,\&quot;car_province\&quot;:\&quot;&quot;</span> + car_province + <span class="string">&quot;\&quot;,\&quot;hphm2\&quot;:\&quot;&quot;</span> + hphm2 + <span class="string">&quot;\&quot;,\&quot;engineno\&quot;:\&quot;&quot;</span> + engineno + <span class="string">&quot;\&quot;,\&quot;classno\&quot;:\&quot;&quot;</span> + classno + <span class="string">&quot;\&quot;,\&quot;registno\&quot;:\&quot;&quot;</span> + registno + <span class="string">&quot;\&quot;,\&quot;hphm\&quot;:\&quot;&quot;</span> + hphm + <span class="string">&quot;\&quot;,\&quot;cityName\&quot;:\&quot;&quot;</span> + cityName + <span class="string">&quot;\&quot;&#125;]&quot;</span>;</span><br><span class="line">                        $.cookie(<span class="string">&quot;queryHistory&quot;</span>, newCookie, &#123;</span><br><span class="line">                            expires: <span class="number">1</span>,</span><br><span class="line">                            path: <span class="string">&quot;/&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                url: config.wzCity,</span><br><span class="line">                data: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">&quot;.selectProvince&quot;</span>).empty();</span><br><span class="line">                    <span class="keyword">var</span> html = <span class="string">&#x27;&lt;option value=&quot;&quot;&gt;请选择城市&lt;/option&gt;&#x27;</span>;</span><br><span class="line">                    <span class="keyword">var</span> ev = e[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                    <span class="keyword">for</span> (i <span class="keyword">in</span> ev) &#123;</span><br><span class="line">                        html += <span class="string">&quot;&lt;option value=&#x27;&quot;</span> + ev[i].province_code + <span class="string">&quot;&#x27;&gt;&quot;</span> + ev[i].province + <span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $(<span class="string">&quot;.selectProvince&quot;</span>).append(html);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">&quot;#selectProvince&quot;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> province = $(<span class="string">&quot;.selectProvince&quot;</span>).val();</span><br><span class="line">                $(<span class="string">&quot;.selectCitys&quot;</span>).empty().append(<span class="string">&quot;&lt;option&gt;loading...&lt;/option&gt;&quot;</span>);</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                    dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                    url: config.wzCity,</span><br><span class="line">                    data: &#123;<span class="string">&quot;province&quot;</span> : <span class="built_in">encodeURIComponent</span>(province)&#125;,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">&quot;.selectCitys&quot;</span>).empty();</span><br><span class="line">                        <span class="keyword">var</span> html = <span class="string">&#x27;&lt;option value=&quot;&quot;&gt;请选择城市&lt;/option&gt;&#x27;</span>;</span><br><span class="line">                        ev = e[<span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">                        <span class="keyword">var</span> evc=ev[province];</span><br><span class="line">                        $.each(evc[<span class="string">&#x27;citys&#x27;</span>], <span class="function"><span class="keyword">function</span>(<span class="params">kk, vv</span>) </span>&#123;</span><br><span class="line">                            html += <span class="string">&quot;&lt;option value=&#x27;&quot;</span> + vv.city_code + <span class="string">&quot;&#x27;&gt;&quot;</span> + vv.city_name + <span class="string">&quot;&lt;/option&gt;&quot;</span>;</span><br><span class="line">                        &#125;)</span><br><span class="line">                        $(<span class="string">&quot;.selectCitys&quot;</span>).append(html);</span><br><span class="line">                        selectCitys(evc);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">selectCitys</span>(<span class="params">evc</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&quot;.selectCitys&quot;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> province = $(<span class="string">&quot;.selectProvince&quot;</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> city = $(<span class="built_in">this</span>).val();</span><br><span class="line">                    <span class="keyword">var</span> index=$(<span class="built_in">this</span>).get(<span class="number">0</span>).selectedIndex-<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">var</span> cityInfo=evc[<span class="string">&#x27;citys&#x27;</span>][index];</span><br><span class="line">                    <span class="keyword">var</span> abbr = cityInfo.abbr;</span><br><span class="line">                    <span class="keyword">var</span> engine = cityInfo.engine;</span><br><span class="line">                    <span class="keyword">var</span> engineno = cityInfo.engineno;</span><br><span class="line">                    <span class="keyword">var</span> eclass = cityInfo.class;</span><br><span class="line">                    <span class="keyword">var</span> eclassno = cityInfo.classno;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">typeof</span>(abbr) != <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">                        $(<span class="string">&quot;#car_province&quot;</span>).val(abbr);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (engine == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (engineno == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> engineinfo = <span class="string">&#x27;全部发动机号&#x27;</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">var</span> engineinfo = <span class="string">&#x27;发动机号后&#x27;</span> + engineno + <span class="string">&#x27;位&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;input[name=engineno]&quot;</span>).attr(<span class="string">&quot;placeholder&quot;</span>, engineinfo);</span><br><span class="line">                        $(<span class="string">&quot;#engineno&quot;</span>).css(&#123;</span><br><span class="line">                            display: <span class="string">&quot;&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $(<span class="string">&quot;#engineno&quot;</span>).css(&#123;</span><br><span class="line">                            display: <span class="string">&quot;none&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (eclass == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (eclassno == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> classinfo = <span class="string">&#x27;全部车架号&#x27;</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">var</span> classinfo = <span class="string">&#x27;车架号后&#x27;</span> + eclassno + <span class="string">&#x27;位&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;input[name=classno]&quot;</span>).attr(<span class="string">&quot;placeholder&quot;</span>, classinfo);</span><br><span class="line">                        $(<span class="string">&quot;#classno&quot;</span>).css(&#123;</span><br><span class="line">                            display: <span class="string">&quot;&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $(<span class="string">&quot;#classno&quot;</span>).css(&#123;</span><br><span class="line">                            display: <span class="string">&quot;none&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">&quot;.wz-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;查询中...&#x27;</span>).attr(<span class="string">&quot;disabled&quot;</span>, <span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">                $(<span class="string">&quot;.wz-result&quot;</span>).html(<span class="string">&#x27;正在查询中....&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> hphm = $(<span class="string">&quot;#car_province&quot;</span>).val() + $(<span class="string">&quot;.onlyhm&quot;</span>).val();</span><br><span class="line">                hphm = <span class="built_in">encodeURIComponent</span>(hphm);</span><br><span class="line">                $(<span class="string">&quot;#hphm&quot;</span>).val(hphm);</span><br><span class="line">                <span class="keyword">var</span> carInfo=&#123;</span><br><span class="line">                        <span class="string">&quot;city&quot;</span>: $(<span class="string">&quot;select[name=&#x27;city&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;hpzl&quot;</span>: $(<span class="string">&quot;select[name=&#x27;hpzl&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;car_province&quot;</span>: $(<span class="string">&quot;select[name=&#x27;car_province&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;hphm2&quot;</span>: $(<span class="string">&quot;input[name=&#x27;hphm2&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;engineno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;engineno&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;classno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;classno&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;registno&quot;</span>: $(<span class="string">&quot;input[name=&#x27;registno&#x27;]&quot;</span>).val(),</span><br><span class="line">                        <span class="string">&quot;hphm&quot;</span>: hphm</span><br><span class="line">                    &#125;;</span><br><span class="line">                queryHistory(carInfo);</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                    dataType: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">                    url: config.wzQuery,</span><br><span class="line">                    data: carInfo,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> resultcode = e.resultcode;</span><br><span class="line">                        <span class="keyword">var</span> info = e.reason;</span><br><span class="line">                        <span class="keyword">if</span> (resultcode == <span class="string">&#x27;200&#x27;</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> html = <span class="string">&#x27;&lt;table width=&quot;98%&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border:1px solid #f2f2f2&quot;&gt;&#x27;</span>;</span><br><span class="line">                            html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot;&gt;&amp;nbsp;时间&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;地点&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章事项&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;违章代码&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;扣分&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;罚款&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td&gt;&amp;nbsp;是否处理&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                            <span class="keyword">var</span> list = e.result.lists;</span><br><span class="line">                            <span class="keyword">if</span> (list.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> list) &#123;</span><br><span class="line">                                    html += <span class="string">&#x27;&lt;tr&gt;&#x27;</span> + <span class="string">&#x27;&lt;td height=&quot;40&quot; width=&quot;120&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].date + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;150&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].area + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;280&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].act + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;60&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].code + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].fen + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].money + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;td width=&quot;30&quot;&gt;&amp;nbsp;&#x27;</span> + list[i].handled + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> + <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                html += <span class="string">&#x27;&lt;tr&gt;&lt;td colspan=6 height=&quot;40&quot;&gt;查询不到该车辆的违章记录&lt;/td&gt;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            html += <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line">                            $(<span class="string">&quot;.wz-result&quot;</span>).html(html);</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultcode == <span class="string">&#x27;210&#x27;</span>) &#123;</span><br><span class="line">                            alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            alert(resultcode + <span class="string">&quot;:&quot;</span> + info);</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;.wz-btn&quot;</span>).val(<span class="string">&#x27;违章查询&#x27;</span>).removeAttr(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>json</tag>
        <tag>cookie</tag>
      </tags>
  </entry>
</search>
